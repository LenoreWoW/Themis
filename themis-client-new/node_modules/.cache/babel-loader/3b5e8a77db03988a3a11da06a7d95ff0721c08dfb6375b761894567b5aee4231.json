{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{UserRole}from'../types';import{login}from'../services/api';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Check if token is valid on initial load\nuseEffect(()=>{const initAuth=async()=>{try{if(token){const decodedToken=jwtDecode(token);const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime){// Token expired\nlocalStorage.removeItem('token');setToken(null);setUser(null);}else{// Valid token, set user from token\nsetUser({id:decodedToken.nameid,username:decodedToken.unique_name,role:decodedToken.role,departmentId:decodedToken.departmentId,adIdentifier:'',// Not included in token\napproved:true});}}}catch(error){console.error('Auth initialization error:',error);localStorage.removeItem('token');setToken(null);setUser(null);}finally{setLoading(false);}};initAuth();},[token]);const handleLogin=async adIdentifier=>{setLoading(true);try{const response=await login(adIdentifier);localStorage.setItem('token',response.token);setToken(response.token);const decodedToken=jwtDecode(response.token);setUser({id:decodedToken.nameid,username:decodedToken.unique_name,role:decodedToken.role,departmentId:decodedToken.departmentId,adIdentifier,approved:true});}catch(error){console.error('Login error:',error);throw error;}finally{setLoading(false);}};const handleLogout=()=>{localStorage.removeItem('token');setToken(null);setUser(null);};const hasRole=role=>{return(user===null||user===void 0?void 0:user.role)===role;};const isAuthenticated=!!user;const isAdmin=(user===null||user===void 0?void 0:user.role)===UserRole.Admin;const isMainPMO=(user===null||user===void 0?void 0:user.role)===UserRole.MainPMO;const isSubPMO=(user===null||user===void 0?void 0:user.role)===UserRole.SubPMO;const isExecutive=(user===null||user===void 0?void 0:user.role)===UserRole.Executive;const isDirector=(user===null||user===void 0?void 0:user.role)===UserRole.DepartmentDirector;const isProjectManager=(user===null||user===void 0?void 0:user.role)===UserRole.ProjectManager;const isPending=(user===null||user===void 0?void 0:user.role)===UserRole.Pending;const isMember=isProjectManager||isSubPMO||isMainPMO||isDirector||isExecutive||isAdmin;return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,isAuthenticated,isAdmin,isMainPMO,isSubPMO,isExecutive,isDirector,isProjectManager,isPending,isMember,hasRole,login:handleLogin,logout:handleLogout,loading},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","UserRole","login","jwtDecode","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","initAuth","decodedToken","currentTime","Date","now","exp","removeItem","id","nameid","username","unique_name","role","departmentId","adIdentifier","approved","error","console","handleLogin","response","setItem","handleLogout","hasRole","isAuthenticated","isAdmin","Admin","isMainPMO","MainPMO","isSubPMO","SubPMO","isExecutive","Executive","isDirector","DepartmentDirector","isProjectManager","ProjectManager","isPending","Pending","isMember","Provider","value","logout","useAuth","context","Error"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-new/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, UserRole } from '../types';\nimport { login } from '../services/api';\nimport { jwtDecode } from 'jwt-decode';\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  isMainPMO: boolean;\n  isSubPMO: boolean;\n  isExecutive: boolean;\n  isDirector: boolean;\n  isProjectManager: boolean;\n  isPending: boolean;\n  isMember: boolean;\n  hasRole: (role: UserRole) => boolean;\n  login: (adIdentifier: string) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface JwtPayload {\n  nameid: string;\n  unique_name: string;\n  role: string;\n  departmentId?: string;\n  exp: number;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Check if token is valid on initial load\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        if (token) {\n          const decodedToken = jwtDecode<JwtPayload>(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decodedToken.exp < currentTime) {\n            // Token expired\n            localStorage.removeItem('token');\n            setToken(null);\n            setUser(null);\n          } else {\n            // Valid token, set user from token\n            setUser({\n              id: decodedToken.nameid,\n              username: decodedToken.unique_name,\n              role: decodedToken.role as UserRole,\n              departmentId: decodedToken.departmentId,\n              adIdentifier: '',  // Not included in token\n              approved: true,\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, [token]);\n\n  const handleLogin = async (adIdentifier: string) => {\n    setLoading(true);\n    try {\n      const response = await login(adIdentifier);\n      localStorage.setItem('token', response.token);\n      setToken(response.token);\n      \n      const decodedToken = jwtDecode<JwtPayload>(response.token);\n      setUser({\n        id: decodedToken.nameid,\n        username: decodedToken.unique_name,\n        role: decodedToken.role as UserRole,\n        departmentId: decodedToken.departmentId,\n        adIdentifier,\n        approved: true,\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  const hasRole = (role: UserRole): boolean => {\n    return user?.role === role;\n  };\n\n  const isAuthenticated = !!user;\n  const isAdmin = user?.role === UserRole.Admin;\n  const isMainPMO = user?.role === UserRole.MainPMO;\n  const isSubPMO = user?.role === UserRole.SubPMO;\n  const isExecutive = user?.role === UserRole.Executive;\n  const isDirector = user?.role === UserRole.DepartmentDirector;\n  const isProjectManager = user?.role === UserRole.ProjectManager;\n  const isPending = user?.role === UserRole.Pending;\n  const isMember = isProjectManager || isSubPMO || isMainPMO || isDirector || isExecutive || isAdmin;\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        token,\n        isAuthenticated,\n        isAdmin,\n        isMainPMO,\n        isSubPMO,\n        isExecutive,\n        isDirector,\n        isProjectManager,\n        isPending,\n        isMember,\n        hasRole,\n        login: handleLogin,\n        logout: handleLogout,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CACxF,OAAeC,QAAQ,KAAQ,UAAU,CACzC,OAASC,KAAK,KAAQ,iBAAiB,CACvC,OAASC,SAAS,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAoBvC,KAAM,CAAAC,WAAW,cAAGT,aAAa,CAA8BU,SAAS,CAAC,CAczE,MAAO,MAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAgBgB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAChF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAU,IAAI,CAAC,CAErD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF,GAAIN,KAAK,CAAE,CACT,KAAM,CAAAO,YAAY,CAAGjB,SAAS,CAAaU,KAAK,CAAC,CACjD,KAAM,CAAAQ,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAErC,GAAIH,YAAY,CAACI,GAAG,CAAGH,WAAW,CAAE,CAClC;AACAN,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCX,QAAQ,CAAC,IAAI,CAAC,CACdF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,IAAM,CACL;AACAA,OAAO,CAAC,CACNc,EAAE,CAAEN,YAAY,CAACO,MAAM,CACvBC,QAAQ,CAAER,YAAY,CAACS,WAAW,CAClCC,IAAI,CAAEV,YAAY,CAACU,IAAgB,CACnCC,YAAY,CAAEX,YAAY,CAACW,YAAY,CACvCC,YAAY,CAAE,EAAE,CAAG;AACnBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACF,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDnB,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCX,QAAQ,CAAC,IAAI,CAAC,CACdF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRM,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAuB,WAAW,CAAG,KAAO,CAAAJ,YAAoB,EAAK,CAClDd,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAmB,QAAQ,CAAG,KAAM,CAAAnC,KAAK,CAAC8B,YAAY,CAAC,CAC1CjB,YAAY,CAACuB,OAAO,CAAC,OAAO,CAAED,QAAQ,CAACxB,KAAK,CAAC,CAC7CC,QAAQ,CAACuB,QAAQ,CAACxB,KAAK,CAAC,CAExB,KAAM,CAAAO,YAAY,CAAGjB,SAAS,CAAakC,QAAQ,CAACxB,KAAK,CAAC,CAC1DD,OAAO,CAAC,CACNc,EAAE,CAAEN,YAAY,CAACO,MAAM,CACvBC,QAAQ,CAAER,YAAY,CAACS,WAAW,CAClCC,IAAI,CAAEV,YAAY,CAACU,IAAgB,CACnCC,YAAY,CAAEX,YAAY,CAACW,YAAY,CACvCC,YAAY,CACZC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,KAAM,CAAAA,KAAK,CACb,CAAC,OAAS,CACRhB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAqB,YAAY,CAAGA,CAAA,GAAM,CACzBxB,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCX,QAAQ,CAAC,IAAI,CAAC,CACdF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAA4B,OAAO,CAAIV,IAAc,EAAc,CAC3C,MAAO,CAAAnB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAKA,IAAI,CAC5B,CAAC,CAED,KAAM,CAAAW,eAAe,CAAG,CAAC,CAAC9B,IAAI,CAC9B,KAAM,CAAA+B,OAAO,CAAG,CAAA/B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAAC0C,KAAK,CAC7C,KAAM,CAAAC,SAAS,CAAG,CAAAjC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAAC4C,OAAO,CACjD,KAAM,CAAAC,QAAQ,CAAG,CAAAnC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAAC8C,MAAM,CAC/C,KAAM,CAAAC,WAAW,CAAG,CAAArC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAACgD,SAAS,CACrD,KAAM,CAAAC,UAAU,CAAG,CAAAvC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAACkD,kBAAkB,CAC7D,KAAM,CAAAC,gBAAgB,CAAG,CAAAzC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAACoD,cAAc,CAC/D,KAAM,CAAAC,SAAS,CAAG,CAAA3C,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,IAAI,IAAK7B,QAAQ,CAACsD,OAAO,CACjD,KAAM,CAAAC,QAAQ,CAAGJ,gBAAgB,EAAIN,QAAQ,EAAIF,SAAS,EAAIM,UAAU,EAAIF,WAAW,EAAIN,OAAO,CAElG,mBACErC,IAAA,CAACC,WAAW,CAACmD,QAAQ,EACnBC,KAAK,CAAE,CACL/C,IAAI,CACJE,KAAK,CACL4B,eAAe,CACfC,OAAO,CACPE,SAAS,CACTE,QAAQ,CACRE,WAAW,CACXE,UAAU,CACVE,gBAAgB,CAChBE,SAAS,CACTE,QAAQ,CACRhB,OAAO,CACPtC,KAAK,CAAEkC,WAAW,CAClBuB,MAAM,CAAEpB,YAAY,CACpBtB,OACF,CAAE,CAAAP,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkD,OAAO,CAAGA,CAAA,GAAuB,CAC5C,KAAM,CAAAC,OAAO,CAAG/D,UAAU,CAACQ,WAAW,CAAC,CACvC,GAAIuD,OAAO,GAAKtD,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAuD,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAAvD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}