{"ast":null,"code":"// Enums\nexport let UserRole=/*#__PURE__*/function(UserRole){UserRole[\"Pending\"]=\"Pending\";UserRole[\"ProjectManager\"]=\"ProjectManager\";UserRole[\"SubPMO\"]=\"SubPMO\";UserRole[\"MainPMO\"]=\"MainPMO\";UserRole[\"DepartmentDirector\"]=\"DepartmentDirector\";UserRole[\"Executive\"]=\"Executive\";UserRole[\"Admin\"]=\"Admin\";return UserRole;}({});export let ProjectStatus=/*#__PURE__*/function(ProjectStatus){ProjectStatus[\"Draft\"]=\"Draft\";ProjectStatus[\"SubPMOReview\"]=\"SubPMOReview\";ProjectStatus[\"MainPMOApproval\"]=\"MainPMOApproval\";ProjectStatus[\"InProgress\"]=\"InProgress\";ProjectStatus[\"Completed\"]=\"Completed\";ProjectStatus[\"OnHold\"]=\"OnHold\";ProjectStatus[\"Cancelled\"]=\"Cancelled\";return ProjectStatus;}({});export let TaskStatus=/*#__PURE__*/function(TaskStatus){TaskStatus[\"NotStarted\"]=\"NotStarted\";TaskStatus[\"InProgress\"]=\"InProgress\";TaskStatus[\"Completed\"]=\"Completed\";TaskStatus[\"Delayed\"]=\"Delayed\";TaskStatus[\"Blocked\"]=\"Blocked\";TaskStatus[\"Cancelled\"]=\"Cancelled\";return TaskStatus;}({});export let TaskPriority=/*#__PURE__*/function(TaskPriority){TaskPriority[\"Low\"]=\"Low\";TaskPriority[\"Medium\"]=\"Medium\";TaskPriority[\"High\"]=\"High\";return TaskPriority;}({});export let ApprovalStatus=/*#__PURE__*/function(ApprovalStatus){ApprovalStatus[\"Pending\"]=\"Pending\";ApprovalStatus[\"ApprovedBySubPMO\"]=\"ApprovedBySubPMO\";ApprovalStatus[\"ApprovedByMainPMO\"]=\"ApprovedByMainPMO\";ApprovalStatus[\"RejectedBySubPMO\"]=\"RejectedBySubPMO\";ApprovalStatus[\"RejectedByMainPMO\"]=\"RejectedByMainPMO\";return ApprovalStatus;}({});export let RequestType=/*#__PURE__*/function(RequestType){RequestType[\"NewProject\"]=\"NewProject\";RequestType[\"WeeklyUpdate\"]=\"WeeklyUpdate\";RequestType[\"ChangeRequest\"]=\"ChangeRequest\";return RequestType;}({});export let RiskSeverity=/*#__PURE__*/function(RiskSeverity){RiskSeverity[\"Low\"]=\"Low\";RiskSeverity[\"Medium\"]=\"Medium\";RiskSeverity[\"High\"]=\"High\";RiskSeverity[\"Critical\"]=\"Critical\";return RiskSeverity;}({});export let RiskProbability=/*#__PURE__*/function(RiskProbability){RiskProbability[\"Low\"]=\"Low\";RiskProbability[\"Medium\"]=\"Medium\";RiskProbability[\"High\"]=\"High\";return RiskProbability;}({});export let RiskIssueType=/*#__PURE__*/function(RiskIssueType){RiskIssueType[\"Risk\"]=\"Risk\";RiskIssueType[\"Issue\"]=\"Issue\";return RiskIssueType;}({});export let RiskIssueStatus=/*#__PURE__*/function(RiskIssueStatus){RiskIssueStatus[\"Open\"]=\"Open\";RiskIssueStatus[\"Mitigated\"]=\"Mitigated\";RiskIssueStatus[\"Closed\"]=\"Closed\";return RiskIssueStatus;}({});export let RiskIssueImpact=/*#__PURE__*/function(RiskIssueImpact){RiskIssueImpact[\"Low\"]=\"Low\";RiskIssueImpact[\"Medium\"]=\"Medium\";RiskIssueImpact[\"High\"]=\"High\";return RiskIssueImpact;}({});// Interfaces","map":{"version":3,"names":["UserRole","ProjectStatus","TaskStatus","TaskPriority","ApprovalStatus","RequestType","RiskSeverity","RiskProbability","RiskIssueType","RiskIssueStatus","RiskIssueImpact"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-new/src/types/index.ts"],"sourcesContent":["// Enums\nexport enum UserRole {\n  Pending = 'Pending',\n  ProjectManager = 'ProjectManager',\n  SubPMO = 'SubPMO',\n  MainPMO = 'MainPMO',\n  DepartmentDirector = 'DepartmentDirector',\n  Executive = 'Executive',\n  Admin = 'Admin'\n}\n\nexport enum ProjectStatus {\n  Draft = 'Draft',\n  SubPMOReview = 'SubPMOReview',\n  MainPMOApproval = 'MainPMOApproval',\n  InProgress = 'InProgress',\n  Completed = 'Completed',\n  OnHold = 'OnHold',\n  Cancelled = 'Cancelled'\n}\n\nexport enum TaskStatus {\n  NotStarted = 'NotStarted',\n  InProgress = 'InProgress',\n  Completed = 'Completed',\n  Delayed = 'Delayed',\n  Blocked = 'Blocked',\n  Cancelled = 'Cancelled'\n}\n\nexport enum TaskPriority {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\nexport enum ApprovalStatus {\n  Pending = 'Pending',\n  ApprovedBySubPMO = 'ApprovedBySubPMO',\n  ApprovedByMainPMO = 'ApprovedByMainPMO',\n  RejectedBySubPMO = 'RejectedBySubPMO',\n  RejectedByMainPMO = 'RejectedByMainPMO'\n}\n\nexport enum RequestType {\n  NewProject = 'NewProject',\n  WeeklyUpdate = 'WeeklyUpdate',\n  ChangeRequest = 'ChangeRequest'\n}\n\nexport enum RiskSeverity {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High',\n  Critical = 'Critical'\n}\n\nexport enum RiskProbability {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\nexport enum RiskIssueType {\n  Risk = 'Risk',\n  Issue = 'Issue'\n}\n\nexport enum RiskIssueStatus {\n  Open = 'Open',\n  Mitigated = 'Mitigated',\n  Closed = 'Closed'\n}\n\nexport enum RiskIssueImpact {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\n// Interfaces\nexport interface User {\n  id: string;\n  username: string;\n  adIdentifier: string;\n  role: UserRole;\n  departmentId?: string;\n  approved: boolean;\n}\n\nexport interface Department {\n  id: string;\n  name: string;\n  description?: string;\n  directorId?: string;\n  director?: User;\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  description: string;\n  departmentId: string;\n  department?: Department;\n  managerId?: string;\n  manager?: User;\n  executiveId?: string;\n  executive?: User;\n  status: ProjectStatus;\n  startDate?: Date;\n  endDate?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface ProjectTask {\n  id: string;\n  title: string;\n  description?: string;\n  projectId: string;\n  assigneeId?: string;\n  assignee?: User;\n  status: TaskStatus;\n  priority: TaskPriority;\n  dueDate?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface Approval {\n  id: string;\n  projectId: string;\n  project?: Project;\n  approverId: string;\n  approver?: User;\n  comments?: string;\n  approved: boolean;\n  approvedAt?: Date;\n  createdAt: Date;\n}\n\nexport interface RiskIssue {\n  id: string;\n  title: string;\n  description: string;\n  projectId: string;\n  type: RiskIssueType;\n  status: RiskIssueStatus;\n  impact: RiskIssueImpact;\n  mitigationPlan?: string;\n  reporterId: string;\n  reporter?: User;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface RiskIssueSummary {\n  totalRisks: number;\n  totalIssues: number;\n  openRisks: number;\n  openIssues: number;\n  mitigatedRisks: number;\n  mitigatedIssues: number;\n  closedRisks: number;\n  closedIssues: number;\n  highImpactCount: number;\n  mediumImpactCount: number;\n  lowImpactCount: number;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n} "],"mappings":"AAAA;AACA,UAAY,CAAAA,QAAQ,uBAARA,QAAQ,EAARA,QAAQ,sBAARA,QAAQ,oCAARA,QAAQ,oBAARA,QAAQ,sBAARA,QAAQ,4CAARA,QAAQ,0BAARA,QAAQ,wBAAR,CAAAA,QAAQ,OAUpB,UAAY,CAAAC,aAAa,uBAAbA,aAAa,EAAbA,aAAa,kBAAbA,aAAa,gCAAbA,aAAa,sCAAbA,aAAa,4BAAbA,aAAa,0BAAbA,aAAa,oBAAbA,aAAa,gCAAb,CAAAA,aAAa,OAUzB,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,4BAAVA,UAAU,4BAAVA,UAAU,0BAAVA,UAAU,sBAAVA,UAAU,sBAAVA,UAAU,gCAAV,CAAAA,UAAU,OAStB,UAAY,CAAAC,YAAY,uBAAZA,YAAY,EAAZA,YAAY,cAAZA,YAAY,oBAAZA,YAAY,sBAAZ,CAAAA,YAAY,OAMxB,UAAY,CAAAC,cAAc,uBAAdA,cAAc,EAAdA,cAAc,sBAAdA,cAAc,wCAAdA,cAAc,0CAAdA,cAAc,wCAAdA,cAAc,gDAAd,CAAAA,cAAc,OAQ1B,UAAY,CAAAC,WAAW,uBAAXA,WAAW,EAAXA,WAAW,4BAAXA,WAAW,gCAAXA,WAAW,wCAAX,CAAAA,WAAW,OAMvB,UAAY,CAAAC,YAAY,uBAAZA,YAAY,EAAZA,YAAY,cAAZA,YAAY,oBAAZA,YAAY,gBAAZA,YAAY,8BAAZ,CAAAA,YAAY,OAOxB,UAAY,CAAAC,eAAe,uBAAfA,eAAe,EAAfA,eAAe,cAAfA,eAAe,oBAAfA,eAAe,sBAAf,CAAAA,eAAe,OAM3B,UAAY,CAAAC,aAAa,uBAAbA,aAAa,EAAbA,aAAa,gBAAbA,aAAa,wBAAb,CAAAA,aAAa,OAKzB,UAAY,CAAAC,eAAe,uBAAfA,eAAe,EAAfA,eAAe,gBAAfA,eAAe,0BAAfA,eAAe,0BAAf,CAAAA,eAAe,OAM3B,UAAY,CAAAC,eAAe,uBAAfA,eAAe,EAAfA,eAAe,cAAfA,eAAe,oBAAfA,eAAe,sBAAf,CAAAA,eAAe,OAM3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}