{"ast":null,"code":"// Enums\nexport let UserRole = /*#__PURE__*/function (UserRole) {\n  UserRole[\"Pending\"] = \"Pending\";\n  UserRole[\"ProjectManager\"] = \"ProjectManager\";\n  UserRole[\"SubPMO\"] = \"SubPMO\";\n  UserRole[\"MainPMO\"] = \"MainPMO\";\n  UserRole[\"DepartmentDirector\"] = \"DepartmentDirector\";\n  UserRole[\"Executive\"] = \"Executive\";\n  UserRole[\"Admin\"] = \"Admin\";\n  return UserRole;\n}({});\nexport let ProjectStatus = /*#__PURE__*/function (ProjectStatus) {\n  ProjectStatus[\"Draft\"] = \"Draft\";\n  ProjectStatus[\"SubPMOReview\"] = \"SubPMOReview\";\n  ProjectStatus[\"MainPMOApproval\"] = \"MainPMOApproval\";\n  ProjectStatus[\"InProgress\"] = \"InProgress\";\n  ProjectStatus[\"Completed\"] = \"Completed\";\n  ProjectStatus[\"OnHold\"] = \"OnHold\";\n  ProjectStatus[\"Cancelled\"] = \"Cancelled\";\n  return ProjectStatus;\n}({});\nexport let TaskStatus = /*#__PURE__*/function (TaskStatus) {\n  TaskStatus[\"NotStarted\"] = \"NotStarted\";\n  TaskStatus[\"InProgress\"] = \"InProgress\";\n  TaskStatus[\"Completed\"] = \"Completed\";\n  TaskStatus[\"Delayed\"] = \"Delayed\";\n  TaskStatus[\"Blocked\"] = \"Blocked\";\n  TaskStatus[\"Cancelled\"] = \"Cancelled\";\n  return TaskStatus;\n}({});\nexport let TaskPriority = /*#__PURE__*/function (TaskPriority) {\n  TaskPriority[\"Low\"] = \"Low\";\n  TaskPriority[\"Medium\"] = \"Medium\";\n  TaskPriority[\"High\"] = \"High\";\n  return TaskPriority;\n}({});\nexport let ApprovalStatus = /*#__PURE__*/function (ApprovalStatus) {\n  ApprovalStatus[\"Pending\"] = \"Pending\";\n  ApprovalStatus[\"ApprovedBySubPMO\"] = \"ApprovedBySubPMO\";\n  ApprovalStatus[\"ApprovedByMainPMO\"] = \"ApprovedByMainPMO\";\n  ApprovalStatus[\"RejectedBySubPMO\"] = \"RejectedBySubPMO\";\n  ApprovalStatus[\"RejectedByMainPMO\"] = \"RejectedByMainPMO\";\n  return ApprovalStatus;\n}({});\nexport let RequestType = /*#__PURE__*/function (RequestType) {\n  RequestType[\"NewProject\"] = \"NewProject\";\n  RequestType[\"WeeklyUpdate\"] = \"WeeklyUpdate\";\n  RequestType[\"ChangeRequest\"] = \"ChangeRequest\";\n  return RequestType;\n}({});\nexport let RiskSeverity = /*#__PURE__*/function (RiskSeverity) {\n  RiskSeverity[\"Low\"] = \"Low\";\n  RiskSeverity[\"Medium\"] = \"Medium\";\n  RiskSeverity[\"High\"] = \"High\";\n  RiskSeverity[\"Critical\"] = \"Critical\";\n  return RiskSeverity;\n}({});\nexport let RiskProbability = /*#__PURE__*/function (RiskProbability) {\n  RiskProbability[\"Low\"] = \"Low\";\n  RiskProbability[\"Medium\"] = \"Medium\";\n  RiskProbability[\"High\"] = \"High\";\n  return RiskProbability;\n}({});\nexport let RiskIssueType = /*#__PURE__*/function (RiskIssueType) {\n  RiskIssueType[\"Risk\"] = \"Risk\";\n  RiskIssueType[\"Issue\"] = \"Issue\";\n  return RiskIssueType;\n}({});\nexport let RiskIssueStatus = /*#__PURE__*/function (RiskIssueStatus) {\n  RiskIssueStatus[\"Open\"] = \"Open\";\n  RiskIssueStatus[\"Mitigated\"] = \"Mitigated\";\n  RiskIssueStatus[\"Closed\"] = \"Closed\";\n  return RiskIssueStatus;\n}({});\nexport let RiskIssueImpact = /*#__PURE__*/function (RiskIssueImpact) {\n  RiskIssueImpact[\"Low\"] = \"Low\";\n  RiskIssueImpact[\"Medium\"] = \"Medium\";\n  RiskIssueImpact[\"High\"] = \"High\";\n  return RiskIssueImpact;\n}({});\n\n// Interfaces","map":{"version":3,"names":["UserRole","ProjectStatus","TaskStatus","TaskPriority","ApprovalStatus","RequestType","RiskSeverity","RiskProbability","RiskIssueType","RiskIssueStatus","RiskIssueImpact"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-new/src/types/index.ts"],"sourcesContent":["// Enums\nexport enum UserRole {\n  Pending = 'Pending',\n  ProjectManager = 'ProjectManager',\n  SubPMO = 'SubPMO',\n  MainPMO = 'MainPMO',\n  DepartmentDirector = 'DepartmentDirector',\n  Executive = 'Executive',\n  Admin = 'Admin'\n}\n\nexport enum ProjectStatus {\n  Draft = 'Draft',\n  SubPMOReview = 'SubPMOReview',\n  MainPMOApproval = 'MainPMOApproval',\n  InProgress = 'InProgress',\n  Completed = 'Completed',\n  OnHold = 'OnHold',\n  Cancelled = 'Cancelled'\n}\n\nexport enum TaskStatus {\n  NotStarted = 'NotStarted',\n  InProgress = 'InProgress',\n  Completed = 'Completed',\n  Delayed = 'Delayed',\n  Blocked = 'Blocked',\n  Cancelled = 'Cancelled'\n}\n\nexport enum TaskPriority {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\nexport enum ApprovalStatus {\n  Pending = 'Pending',\n  ApprovedBySubPMO = 'ApprovedBySubPMO',\n  ApprovedByMainPMO = 'ApprovedByMainPMO',\n  RejectedBySubPMO = 'RejectedBySubPMO',\n  RejectedByMainPMO = 'RejectedByMainPMO'\n}\n\nexport enum RequestType {\n  NewProject = 'NewProject',\n  WeeklyUpdate = 'WeeklyUpdate',\n  ChangeRequest = 'ChangeRequest'\n}\n\nexport enum RiskSeverity {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High',\n  Critical = 'Critical'\n}\n\nexport enum RiskProbability {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\nexport enum RiskIssueType {\n  Risk = 'Risk',\n  Issue = 'Issue'\n}\n\nexport enum RiskIssueStatus {\n  Open = 'Open',\n  Mitigated = 'Mitigated',\n  Closed = 'Closed'\n}\n\nexport enum RiskIssueImpact {\n  Low = 'Low',\n  Medium = 'Medium',\n  High = 'High'\n}\n\n// Interfaces\nexport interface User {\n  id: string;\n  username: string;\n  adIdentifier: string;\n  role: UserRole;\n  departmentId?: string;\n  approved: boolean;\n}\n\nexport interface Department {\n  id: string;\n  name: string;\n  description?: string;\n  directorId?: string;\n  director?: User;\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  description: string;\n  departmentId: string;\n  department?: Department;\n  managerId?: string;\n  manager?: User;\n  executiveId?: string;\n  executive?: User;\n  status: ProjectStatus;\n  startDate?: Date;\n  endDate?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface ProjectTask {\n  id: string;\n  title: string;\n  description?: string;\n  projectId: string;\n  assigneeId?: string;\n  assignee?: User;\n  status: TaskStatus;\n  priority: TaskPriority;\n  dueDate?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface Approval {\n  id: string;\n  projectId: string;\n  project?: Project;\n  approverId: string;\n  approver?: User;\n  comments?: string;\n  approved: boolean;\n  approvedAt?: Date;\n  createdAt: Date;\n}\n\nexport interface RiskIssue {\n  id: string;\n  title: string;\n  description: string;\n  projectId: string;\n  type: RiskIssueType;\n  status: RiskIssueStatus;\n  impact: RiskIssueImpact;\n  mitigationPlan?: string;\n  reporterId: string;\n  reporter?: User;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface RiskIssueSummary {\n  totalRisks: number;\n  totalIssues: number;\n  openRisks: number;\n  openIssues: number;\n  mitigatedRisks: number;\n  mitigatedIssues: number;\n  closedRisks: number;\n  closedIssues: number;\n  highImpactCount: number;\n  mediumImpactCount: number;\n  lowImpactCount: number;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n} "],"mappings":"AAAA;AACA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAUpB,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAUzB,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAStB,WAAYC,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAMxB,WAAYC,cAAc,0BAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAQ1B,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAMvB,WAAYC,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAOxB,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAM3B,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAKzB,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;AAM3B,WAAYC,eAAe,0BAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAA,OAAfA,eAAe;AAAA;;AAM3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}