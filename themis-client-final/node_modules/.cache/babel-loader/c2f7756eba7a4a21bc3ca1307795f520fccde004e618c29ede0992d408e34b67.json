{"ast":null,"code":"import React,{useState}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,FormControlLabel,Checkbox,TextField,Typography,Box}from'@mui/material';import AccountTreeIcon from'@mui/icons-material/AccountTree';import NoteIcon from'@mui/icons-material/Note';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ViewsModal=_ref=>{let{open,onClose,onCreateView}=_ref;const[step,setStep]=useState('select-type');const[viewData,setViewData]=useState({name:'',type:'mindmap',mode:'tasks',isPrivate:false,isPinned:false});const handleTypeSelect=mode=>{setViewData(prev=>({...prev,mode}));setStep('configure');};const handleChange=e=>{const{name,value,checked}=e.target;if(name==='isPrivate'||name==='isPinned'){setViewData(prev=>({...prev,[name]:checked}));}else{setViewData(prev=>({...prev,[name]:value}));}};const handleCreate=()=>{onCreateView(viewData);onClose();// Reset the modal state for future use\nsetStep('select-type');setViewData({name:'',type:'mindmap',mode:'tasks',isPrivate:false,isPinned:false});};const handleCancel=()=>{onClose();setStep('select-type');};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:step==='select-type'?'Add New View':'Configure Mind Map View'}),/*#__PURE__*/_jsx(DialogContent,{children:step==='select-type'?/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Select View Type\"})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{p:2,border:'1px solid #e0e0e0',borderRadius:1,cursor:'pointer',display:'flex',flexDirection:'column',alignItems:'center',transition:'0.3s',flexBasis:'50%','&:hover':{backgroundColor:'rgba(0, 0, 0, 0.05)',borderColor:'primary.main'}},onClick:()=>handleTypeSelect('tasks'),children:[/*#__PURE__*/_jsx(AccountTreeIcon,{color:\"primary\",sx:{fontSize:48,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",fontWeight:\"bold\",children:\"Tasks Mode\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",sx:{mt:1},children:\"Create a mind map connected to your tasks\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:2,border:'1px solid #e0e0e0',borderRadius:1,cursor:'pointer',display:'flex',flexDirection:'column',alignItems:'center',transition:'0.3s',flexBasis:'50%','&:hover':{backgroundColor:'rgba(0, 0, 0, 0.05)',borderColor:'primary.main'}},onClick:()=>handleTypeSelect('blank'),children:[/*#__PURE__*/_jsx(NoteIcon,{color:\"primary\",sx:{fontSize:48,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",fontWeight:\"bold\",children:\"Blank Mode\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",sx:{mt:1},children:\"Create a blank mind map for brainstorming\"})]})]})]}):/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsx(TextField,{name:\"name\",label:\"View Name\",value:viewData.name,onChange:handleChange,fullWidth:true,autoFocus:true,required:true}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:viewData.isPrivate,onChange:handleChange,name:\"isPrivate\"}),label:\"Private view (only visible to you)\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:viewData.isPinned,onChange:handleChange,name:\"isPinned\"}),label:\"Pin view (always visible in Views Bar)\"})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCancel,children:\"Cancel\"}),step==='configure'&&/*#__PURE__*/_jsx(Button,{onClick:handleCreate,variant:\"contained\",disabled:!viewData.name,children:\"Create View\"})]})]});};export default ViewsModal;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","FormControlLabel","Checkbox","TextField","Typography","Box","AccountTreeIcon","NoteIcon","jsx","_jsx","jsxs","_jsxs","ViewsModal","_ref","open","onClose","onCreateView","step","setStep","viewData","setViewData","name","type","mode","isPrivate","isPinned","handleTypeSelect","prev","handleChange","e","value","checked","target","handleCreate","handleCancel","maxWidth","fullWidth","children","sx","mt","mb","variant","gutterBottom","display","gap","p","border","borderRadius","cursor","flexDirection","alignItems","transition","flexBasis","backgroundColor","borderColor","onClick","color","fontSize","fontWeight","align","label","onChange","autoFocus","required","control","disabled"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/MindMap/ViewsModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Typography,\n  Box\n} from '@mui/material';\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\nimport NoteIcon from '@mui/icons-material/Note';\n\nexport interface ViewModalProps {\n  open: boolean;\n  onClose: () => void;\n  onCreateView: (viewData: ViewData) => void;\n}\n\nexport interface ViewData {\n  name: string;\n  type: 'mindmap';\n  mode: 'tasks' | 'blank';\n  isPrivate: boolean;\n  isPinned: boolean;\n}\n\nconst ViewsModal: React.FC<ViewModalProps> = ({ open, onClose, onCreateView }) => {\n  const [step, setStep] = useState<'select-type' | 'configure'>('select-type');\n  const [viewData, setViewData] = useState<ViewData>({\n    name: '',\n    type: 'mindmap',\n    mode: 'tasks',\n    isPrivate: false,\n    isPinned: false,\n  });\n\n  const handleTypeSelect = (mode: 'tasks' | 'blank') => {\n    setViewData(prev => ({ ...prev, mode }));\n    setStep('configure');\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, checked } = e.target;\n    \n    if (name === 'isPrivate' || name === 'isPinned') {\n      setViewData(prev => ({ ...prev, [name]: checked }));\n    } else {\n      setViewData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const handleCreate = () => {\n    onCreateView(viewData);\n    onClose();\n    // Reset the modal state for future use\n    setStep('select-type');\n    setViewData({\n      name: '',\n      type: 'mindmap',\n      mode: 'tasks',\n      isPrivate: false,\n      isPinned: false,\n    });\n  };\n\n  const handleCancel = () => {\n    onClose();\n    setStep('select-type');\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        {step === 'select-type' ? 'Add New View' : 'Configure Mind Map View'}\n      </DialogTitle>\n      \n      <DialogContent>\n        {step === 'select-type' ? (\n          <Box sx={{ mt: 3 }}>\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Select View Type\n              </Typography>\n            </Box>\n            \n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <Box \n                sx={{\n                  p: 2,\n                  border: '1px solid #e0e0e0',\n                  borderRadius: 1,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  transition: '0.3s',\n                  flexBasis: '50%',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n                    borderColor: 'primary.main',\n                  }\n                }}\n                onClick={() => handleTypeSelect('tasks')}\n              >\n                <AccountTreeIcon color=\"primary\" sx={{ fontSize: 48, mb: 1 }} />\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                  Tasks Mode\n                </Typography>\n                <Typography variant=\"body2\" align=\"center\" sx={{ mt: 1 }}>\n                  Create a mind map connected to your tasks\n                </Typography>\n              </Box>\n              \n              <Box \n                sx={{\n                  p: 2,\n                  border: '1px solid #e0e0e0',\n                  borderRadius: 1,\n                  cursor: 'pointer',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  transition: '0.3s',\n                  flexBasis: '50%',\n                  '&:hover': {\n                    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n                    borderColor: 'primary.main',\n                  }\n                }}\n                onClick={() => handleTypeSelect('blank')}\n              >\n                <NoteIcon color=\"primary\" sx={{ fontSize: 48, mb: 1 }} />\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n                  Blank Mode\n                </Typography>\n                <Typography variant=\"body2\" align=\"center\" sx={{ mt: 1 }}>\n                  Create a blank mind map for brainstorming\n                </Typography>\n              </Box>\n            </Box>\n          </Box>\n        ) : (\n          <Box sx={{ mt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              name=\"name\"\n              label=\"View Name\"\n              value={viewData.name}\n              onChange={handleChange}\n              fullWidth\n              autoFocus\n              required\n            />\n            \n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={viewData.isPrivate}\n                  onChange={handleChange}\n                  name=\"isPrivate\"\n                />\n              }\n              label=\"Private view (only visible to you)\"\n            />\n            \n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={viewData.isPinned}\n                  onChange={handleChange}\n                  name=\"isPinned\"\n                />\n              }\n              label=\"Pin view (always visible in Views Bar)\"\n            />\n          </Box>\n        )}\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={handleCancel}>Cancel</Button>\n        {step === 'configure' && (\n          <Button \n            onClick={handleCreate} \n            variant=\"contained\" \n            disabled={!viewData.name}\n          >\n            Create View\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ViewsModal; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,MAAM,CACNC,WAAW,CACXC,aAAa,CACbC,aAAa,CACbC,MAAM,CACNC,gBAAgB,CAChBC,QAAQ,CACRC,SAAS,CACTC,UAAU,CACVC,GAAG,KACE,eAAe,CACtB,MAAO,CAAAC,eAAe,KAAM,iCAAiC,CAC7D,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAgBhD,KAAM,CAAAC,UAAoC,CAAGC,IAAA,EAAqC,IAApC,CAAEC,IAAI,CAAEC,OAAO,CAAEC,YAAa,CAAC,CAAAH,IAAA,CAC3E,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGvB,QAAQ,CAA8B,aAAa,CAAC,CAC5E,KAAM,CAACwB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAW,CACjD0B,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAE,OAAO,CACbC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,KACZ,CAAC,CAAC,CAEF,KAAM,CAAAC,gBAAgB,CAAIH,IAAuB,EAAK,CACpDH,WAAW,CAACO,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAEJ,IAAK,CAAC,CAAC,CAAC,CACxCL,OAAO,CAAC,WAAW,CAAC,CACtB,CAAC,CAED,KAAM,CAAAU,YAAY,CAAIC,CAAsC,EAAK,CAC/D,KAAM,CAAER,IAAI,CAAES,KAAK,CAAEC,OAAQ,CAAC,CAAGF,CAAC,CAACG,MAAM,CAEzC,GAAIX,IAAI,GAAK,WAAW,EAAIA,IAAI,GAAK,UAAU,CAAE,CAC/CD,WAAW,CAACO,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,CAACN,IAAI,EAAGU,OAAQ,CAAC,CAAC,CAAC,CACrD,CAAC,IAAM,CACLX,WAAW,CAACO,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,CAACN,IAAI,EAAGS,KAAM,CAAC,CAAC,CAAC,CACnD,CACF,CAAC,CAED,KAAM,CAAAG,YAAY,CAAGA,CAAA,GAAM,CACzBjB,YAAY,CAACG,QAAQ,CAAC,CACtBJ,OAAO,CAAC,CAAC,CACT;AACAG,OAAO,CAAC,aAAa,CAAC,CACtBE,WAAW,CAAC,CACVC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAE,OAAO,CACbC,SAAS,CAAE,KAAK,CAChBC,QAAQ,CAAE,KACZ,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,YAAY,CAAGA,CAAA,GAAM,CACzBnB,OAAO,CAAC,CAAC,CACTG,OAAO,CAAC,aAAa,CAAC,CACxB,CAAC,CAED,mBACEP,KAAA,CAACf,MAAM,EAACkB,IAAI,CAAEA,IAAK,CAACC,OAAO,CAAEA,OAAQ,CAACoB,QAAQ,CAAC,IAAI,CAACC,SAAS,MAAAC,QAAA,eAC3D5B,IAAA,CAACZ,WAAW,EAAAwC,QAAA,CACTpB,IAAI,GAAK,aAAa,CAAG,cAAc,CAAG,yBAAyB,CACzD,CAAC,cAEdR,IAAA,CAACX,aAAa,EAAAuC,QAAA,CACXpB,IAAI,GAAK,aAAa,cACrBN,KAAA,CAACN,GAAG,EAACiC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,eACjB5B,IAAA,CAACJ,GAAG,EAACiC,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAH,QAAA,cACjB5B,IAAA,CAACL,UAAU,EAACqC,OAAO,CAAC,WAAW,CAACC,YAAY,MAAAL,QAAA,CAAC,kBAE7C,CAAY,CAAC,CACV,CAAC,cAEN1B,KAAA,CAACN,GAAG,EAACiC,EAAE,CAAE,CAAEK,OAAO,CAAE,MAAM,CAAEC,GAAG,CAAE,CAAE,CAAE,CAAAP,QAAA,eACnC1B,KAAA,CAACN,GAAG,EACFiC,EAAE,CAAE,CACFO,CAAC,CAAE,CAAC,CACJC,MAAM,CAAE,mBAAmB,CAC3BC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,SAAS,CACjBL,OAAO,CAAE,MAAM,CACfM,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,CACTC,eAAe,CAAE,qBAAqB,CACtCC,WAAW,CAAE,cACf,CACF,CAAE,CACFC,OAAO,CAAEA,CAAA,GAAM7B,gBAAgB,CAAC,OAAO,CAAE,CAAAW,QAAA,eAEzC5B,IAAA,CAACH,eAAe,EAACkD,KAAK,CAAC,SAAS,CAAClB,EAAE,CAAE,CAAEmB,QAAQ,CAAE,EAAE,CAAEjB,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAChE/B,IAAA,CAACL,UAAU,EAACqC,OAAO,CAAC,WAAW,CAACiB,UAAU,CAAC,MAAM,CAAArB,QAAA,CAAC,YAElD,CAAY,CAAC,cACb5B,IAAA,CAACL,UAAU,EAACqC,OAAO,CAAC,OAAO,CAACkB,KAAK,CAAC,QAAQ,CAACrB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,2CAE1D,CAAY,CAAC,EACV,CAAC,cAEN1B,KAAA,CAACN,GAAG,EACFiC,EAAE,CAAE,CACFO,CAAC,CAAE,CAAC,CACJC,MAAM,CAAE,mBAAmB,CAC3BC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,SAAS,CACjBL,OAAO,CAAE,MAAM,CACfM,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,CACTC,eAAe,CAAE,qBAAqB,CACtCC,WAAW,CAAE,cACf,CACF,CAAE,CACFC,OAAO,CAAEA,CAAA,GAAM7B,gBAAgB,CAAC,OAAO,CAAE,CAAAW,QAAA,eAEzC5B,IAAA,CAACF,QAAQ,EAACiD,KAAK,CAAC,SAAS,CAAClB,EAAE,CAAE,CAAEmB,QAAQ,CAAE,EAAE,CAAEjB,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cACzD/B,IAAA,CAACL,UAAU,EAACqC,OAAO,CAAC,WAAW,CAACiB,UAAU,CAAC,MAAM,CAAArB,QAAA,CAAC,YAElD,CAAY,CAAC,cACb5B,IAAA,CAACL,UAAU,EAACqC,OAAO,CAAC,OAAO,CAACkB,KAAK,CAAC,QAAQ,CAACrB,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAF,QAAA,CAAC,2CAE1D,CAAY,CAAC,EACV,CAAC,EACH,CAAC,EACH,CAAC,cAEN1B,KAAA,CAACN,GAAG,EAACiC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEI,OAAO,CAAE,MAAM,CAAEM,aAAa,CAAE,QAAQ,CAAEL,GAAG,CAAE,CAAE,CAAE,CAAAP,QAAA,eACnE5B,IAAA,CAACN,SAAS,EACRkB,IAAI,CAAC,MAAM,CACXuC,KAAK,CAAC,WAAW,CACjB9B,KAAK,CAAEX,QAAQ,CAACE,IAAK,CACrBwC,QAAQ,CAAEjC,YAAa,CACvBQ,SAAS,MACT0B,SAAS,MACTC,QAAQ,MACT,CAAC,cAEFtD,IAAA,CAACR,gBAAgB,EACf+D,OAAO,cACLvD,IAAA,CAACP,QAAQ,EACP6B,OAAO,CAAEZ,QAAQ,CAACK,SAAU,CAC5BqC,QAAQ,CAAEjC,YAAa,CACvBP,IAAI,CAAC,WAAW,CACjB,CACF,CACDuC,KAAK,CAAC,oCAAoC,CAC3C,CAAC,cAEFnD,IAAA,CAACR,gBAAgB,EACf+D,OAAO,cACLvD,IAAA,CAACP,QAAQ,EACP6B,OAAO,CAAEZ,QAAQ,CAACM,QAAS,CAC3BoC,QAAQ,CAAEjC,YAAa,CACvBP,IAAI,CAAC,UAAU,CAChB,CACF,CACDuC,KAAK,CAAC,wCAAwC,CAC/C,CAAC,EACC,CACN,CACY,CAAC,cAEhBjD,KAAA,CAACZ,aAAa,EAAAsC,QAAA,eACZ5B,IAAA,CAACT,MAAM,EAACuD,OAAO,CAAErB,YAAa,CAAAG,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC7CpB,IAAI,GAAK,WAAW,eACnBR,IAAA,CAACT,MAAM,EACLuD,OAAO,CAAEtB,YAAa,CACtBQ,OAAO,CAAC,WAAW,CACnBwB,QAAQ,CAAE,CAAC9C,QAAQ,CAACE,IAAK,CAAAgB,QAAA,CAC1B,aAED,CAAQ,CACT,EACY,CAAC,EACV,CAAC,CAEb,CAAC,CAED,cAAe,CAAAzB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}