{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import{API_BASE_URL,AUTH_CONFIG}from'../config';import{UserRole}from'../types';import{jwtDecode}from'jwt-decode';// Use the token storage key from config\nimport{jsx as _jsx}from\"react/jsx-runtime\";const TOKEN_STORAGE_KEY=AUTH_CONFIG.TOKEN_STORAGE_KEY;const AUTH_PRESERVE_KEY='themis_preserve_auth';const AuthContext=/*#__PURE__*/createContext(undefined);export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[isLoading,setIsLoading]=useState(true);const navigate=useNavigate();const checkToken=()=>{const token=localStorage.getItem(TOKEN_STORAGE_KEY);if(token){try{const decodedToken=jwtDecode(token);const currentTime=Date.now()/1000;if(decodedToken.exp>currentTime){setIsLoading(false);// Fetch user details using token\naxios.get(`${API_BASE_URL}/users/me`,{headers:{Authorization:`Bearer ${token}`}}).then(response=>{setUser(response.data);}).catch(error=>{console.error('Error fetching user details:',error);logout();});}else{// Token expired\nlogout();}}catch(error){// Invalid token\nconsole.error('Invalid token:',error);logout();}}else{// No token found in localStorage\n// Check if we need to restore auth state after language change\nconst preservedAuthJson=sessionStorage.getItem(AUTH_PRESERVE_KEY);if(preservedAuthJson){try{const preservedAuth=JSON.parse(preservedAuthJson);if(preservedAuth&&preservedAuth.isPreserved){console.log('Found preserved auth state, restoring login...');// Restore the user's login\nlogin(preservedAuth.username);// Remove the preserved state to prevent reuse\nsessionStorage.removeItem(AUTH_PRESERVE_KEY);return;}}catch(error){console.error('Error parsing preserved auth state:',error);}}setIsLoading(false);}};useEffect(()=>{const checkTokenAndSetUser=async()=>{checkToken();};checkTokenAndSetUser();},[]);// eslint-disable-line react-hooks/exhaustive-deps\nconst login=async function(adIdentifier){let password=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';setIsLoading(true);console.log('Login attempt with username:',adIdentifier);try{// For pre-AD integration: create a mock successful login response\nconst mockResponse={userId:'1',username:adIdentifier,role:UserRole.ADMIN,// Default to admin for testing\ntoken:'mock-jwt-token-'+Date.now(),// Add timestamp to make it unique\nsuccess:true,message:'Login successful',// Create a minimal user object to satisfy the interface requirement\nuser:{id:'1',username:adIdentifier,firstName:adIdentifier,lastName:'User',email:`${adIdentifier}@example.com`,role:UserRole.ADMIN,department:{id:'',name:'Default Department',description:'Default Department Description',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}};console.log('Setting user:',mockResponse.user);setUser(mockResponse.user);console.log('Setting token:',mockResponse.token);setToken(mockResponse.token);// Store token in localStorage\nlocalStorage.setItem(TOKEN_STORAGE_KEY,mockResponse.token);// Navigate to dashboard\nnavigate('/');}catch(error){console.error('Login error details:',error);throw error;}finally{setIsLoading(false);}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem(TOKEN_STORAGE_KEY);sessionStorage.removeItem(AUTH_PRESERVE_KEY);navigate('/login');};const hasRole=roles=>{if(!user)return false;if(Array.isArray(roles)){return roles.includes(user.role);}return user.role===roles;};// Role-specific helper properties\nconst isPending=hasRole(UserRole.PENDING);const isProjectManager=hasRole(UserRole.PROJECT_MANAGER);const isSubPmo=hasRole(UserRole.SUB_PMO);const isMainPmo=hasRole(UserRole.MAIN_PMO);const isDepartmentDirector=hasRole(UserRole.DEPARTMENT_DIRECTOR);const isHigherManagement=hasRole(UserRole.EXECUTIVE);const isAdmin=hasRole(UserRole.ADMIN);const isMember=user!==null&&user.role!==UserRole.PENDING;const isAuthenticated=!!user&&!!token;// Role checking helpers\nconst isPM=(user===null||user===void 0?void 0:user.role)===UserRole.PROJECT_MANAGER;const isQA=false;// Adding aliases for roles that components are trying to access\nconst isDirector=isDepartmentDirector;const isExecutive=isHigherManagement;const isMainPMO=isMainPmo;const isSubPMO=isSubPmo;// Check if user has one of the specified roles\nconst hasAccess=roles=>{if(!user)return false;return roles.includes(user.role);};const contextValue={user,token,isAuthenticated,isLoading,hasRole,isPending,isProjectManager,isSubPmo,isMainPmo,isDepartmentDirector,isHigherManagement,isAdmin,isMember,isPM,isQA,isDirector,isExecutive,isMainPMO,isSubPMO,hasAccess,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:children});}export default AuthContext;// Define roles hierarchy for ApprovalStatus\nexport let ApprovalStatus=/*#__PURE__*/function(ApprovalStatus){ApprovalStatus[\"DRAFT\"]=\"DRAFT\";ApprovalStatus[\"SUBMITTED\"]=\"SUBMITTED\";ApprovalStatus[\"SUB_PMO_REVIEW\"]=\"SUB_PMO_REVIEW\";ApprovalStatus[\"SUB_PMO_APPROVED\"]=\"SUB_PMO_APPROVED\";ApprovalStatus[\"MAIN_PMO_REVIEW\"]=\"MAIN_PMO_REVIEW\";ApprovalStatus[\"MAIN_PMO_APPROVED\"]=\"MAIN_PMO_APPROVED\";ApprovalStatus[\"APPROVED\"]=\"APPROVED\";ApprovalStatus[\"REJECTED\"]=\"REJECTED\";ApprovalStatus[\"CHANGES_REQUESTED\"]=\"CHANGES_REQUESTED\";return ApprovalStatus;}({});// Define permission functions\nexport const canCreateProjects=userRole=>{if(!userRole)return false;return[UserRole.ADMIN,UserRole.PROJECT_MANAGER,UserRole.MAIN_PMO,UserRole.SUB_PMO].includes(userRole);};export const canEditProjects=(userRole,isOwnProject)=>{if(!userRole)return false;if(userRole===UserRole.ADMIN||userRole===UserRole.MAIN_PMO){return true;// Can edit all projects\n}if(userRole===UserRole.SUB_PMO){return true;// Can edit projects in their department\n}if(userRole===UserRole.PROJECT_MANAGER&&isOwnProject){return true;// Project managers can only edit their own projects\n}return false;};export const canApproveProjects=(userRole,isOwnProject)=>{if(!userRole)return false;if(userRole===UserRole.ADMIN||userRole===UserRole.MAIN_PMO){return true;// Final approval\n}if(userRole===UserRole.SUB_PMO&&!isOwnProject){return true;// Sub PMOs can approve projects they don't own\n}return false;};export const canRequestChanges=userRole=>{if(!userRole)return false;return[UserRole.ADMIN,UserRole.PROJECT_MANAGER,UserRole.MAIN_PMO,UserRole.SUB_PMO,UserRole.TEAM_LEAD].includes(userRole);};export const canViewAllProjects=userRole=>{if(!userRole)return false;return[UserRole.ADMIN,UserRole.MAIN_PMO,UserRole.EXECUTIVE].includes(userRole);};export const canViewDepartmentProjects=userRole=>{if(!userRole)return false;return[UserRole.ADMIN,UserRole.MAIN_PMO,UserRole.SUB_PMO,UserRole.DEPARTMENT_DIRECTOR,UserRole.EXECUTIVE].includes(userRole);};// Define the workflow for approvals\nexport const getNextApprovalStatus=(currentStatus,userRole,action)=>{if(!userRole)return null;switch(currentStatus){case ApprovalStatus.DRAFT:return ApprovalStatus.SUBMITTED;case ApprovalStatus.SUBMITTED:if(userRole===UserRole.SUB_PMO||userRole===UserRole.MAIN_PMO||userRole===UserRole.ADMIN){if(action==='APPROVE'){return ApprovalStatus.SUB_PMO_APPROVED;}else if(action==='REJECT'){return ApprovalStatus.REJECTED;}else if(action==='REQUEST_CHANGES'){return ApprovalStatus.CHANGES_REQUESTED;}}return null;case ApprovalStatus.SUB_PMO_APPROVED:if(userRole===UserRole.MAIN_PMO||userRole===UserRole.ADMIN){if(action==='APPROVE'){return ApprovalStatus.APPROVED;}else if(action==='REJECT'){return ApprovalStatus.REJECTED;}else if(action==='REQUEST_CHANGES'){return ApprovalStatus.CHANGES_REQUESTED;}}return null;case ApprovalStatus.CHANGES_REQUESTED:return ApprovalStatus.SUBMITTED;default:return null;}};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","axios","API_BASE_URL","AUTH_CONFIG","UserRole","jwtDecode","jsx","_jsx","TOKEN_STORAGE_KEY","AUTH_PRESERVE_KEY","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","isLoading","setIsLoading","navigate","checkToken","localStorage","getItem","decodedToken","currentTime","Date","now","exp","get","headers","Authorization","then","response","data","catch","error","console","logout","preservedAuthJson","sessionStorage","preservedAuth","JSON","parse","isPreserved","log","login","username","removeItem","checkTokenAndSetUser","adIdentifier","password","arguments","length","mockResponse","userId","role","ADMIN","success","message","id","firstName","lastName","email","department","name","description","createdAt","toISOString","updatedAt","isActive","setItem","hasRole","roles","Array","isArray","includes","isPending","PENDING","isProjectManager","PROJECT_MANAGER","isSubPmo","SUB_PMO","isMainPmo","MAIN_PMO","isDepartmentDirector","DEPARTMENT_DIRECTOR","isHigherManagement","EXECUTIVE","isAdmin","isMember","isAuthenticated","isPM","isQA","isDirector","isExecutive","isMainPMO","isSubPMO","hasAccess","contextValue","Provider","value","ApprovalStatus","canCreateProjects","userRole","canEditProjects","isOwnProject","canApproveProjects","canRequestChanges","TEAM_LEAD","canViewAllProjects","canViewDepartmentProjects","getNextApprovalStatus","currentStatus","action","DRAFT","SUBMITTED","SUB_PMO_APPROVED","REJECTED","CHANGES_REQUESTED","APPROVED"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL, AUTH_CONFIG } from '../config';\nimport { User, UserRole, AuthResponse } from '../types';\nimport { jwtDecode } from 'jwt-decode';\n\n// Use the token storage key from config\nconst TOKEN_STORAGE_KEY = AUTH_CONFIG.TOKEN_STORAGE_KEY;\nconst AUTH_PRESERVE_KEY = 'themis_preserve_auth';\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  hasRole: (roles: UserRole | UserRole[]) => boolean;\n  isPending: boolean;\n  isProjectManager: boolean;\n  isSubPmo: boolean;\n  isMainPmo: boolean;\n  isDepartmentDirector: boolean;\n  isHigherManagement: boolean;\n  isAdmin: boolean;\n  isMember: boolean;\n  isPM: boolean;\n  isQA: boolean;\n  isDirector: boolean;\n  isExecutive: boolean;\n  isMainPMO: boolean;\n  isSubPMO: boolean;\n  hasAccess: (roles: UserRole[]) => boolean;\n  login: (adIdentifier: string, password?: string) => Promise<void>;\n  logout: () => void;\n}\n\ninterface JwtPayload {\n  exp: number;\n  userId: string;\n  username: string;\n  role: UserRole;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\ninterface PreservedAuthState {\n  isPreserved: boolean;\n  userId: string;\n  username: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const checkToken = () => {\n    const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n\n    if (token) {\n      try {\n        const decodedToken = jwtDecode<JwtPayload>(token);\n        const currentTime = Date.now() / 1000;\n\n        if (decodedToken.exp > currentTime) {\n          setIsLoading(false);\n          \n          // Fetch user details using token\n          axios.get(`${API_BASE_URL}/users/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          })\n          .then(response => {\n            setUser(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching user details:', error);\n            logout();\n          });\n        } else {\n          // Token expired\n          logout();\n        }\n      } catch (error) {\n        // Invalid token\n        console.error('Invalid token:', error);\n        logout();\n      }\n    } else {\n      // No token found in localStorage\n      // Check if we need to restore auth state after language change\n      const preservedAuthJson = sessionStorage.getItem(AUTH_PRESERVE_KEY);\n      if (preservedAuthJson) {\n        try {\n          const preservedAuth = JSON.parse(preservedAuthJson) as PreservedAuthState;\n          if (preservedAuth && preservedAuth.isPreserved) {\n            console.log('Found preserved auth state, restoring login...');\n            // Restore the user's login\n            login(preservedAuth.username);\n            // Remove the preserved state to prevent reuse\n            sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n            return;\n          }\n        } catch (error) {\n          console.error('Error parsing preserved auth state:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const checkTokenAndSetUser = async () => {\n      checkToken();\n    };\n    \n    checkTokenAndSetUser();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const login = async (adIdentifier: string, password: string = '') => {\n    setIsLoading(true);\n    console.log('Login attempt with username:', adIdentifier);\n    \n    try {\n      // For pre-AD integration: create a mock successful login response\n      const mockResponse: AuthResponse = {\n        userId: '1',\n        username: adIdentifier,\n        role: UserRole.ADMIN, // Default to admin for testing\n        token: 'mock-jwt-token-' + Date.now(), // Add timestamp to make it unique\n        success: true,\n        message: 'Login successful',\n        // Create a minimal user object to satisfy the interface requirement\n        user: {\n          id: '1',\n          username: adIdentifier,\n          firstName: adIdentifier,\n          lastName: 'User',\n          email: `${adIdentifier}@example.com`,\n          role: UserRole.ADMIN,\n          department: {\n            id: '',\n            name: 'Default Department',\n            description: 'Default Department Description',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          isActive: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }\n      };\n      \n      console.log('Setting user:', mockResponse.user);\n      setUser(mockResponse.user);\n      console.log('Setting token:', mockResponse.token);\n      setToken(mockResponse.token);\n      \n      // Store token in localStorage\n      localStorage.setItem(TOKEN_STORAGE_KEY, mockResponse.token);\n      \n      // Navigate to dashboard\n      navigate('/');\n    } catch (error) {\n      console.error('Login error details:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(TOKEN_STORAGE_KEY);\n    sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n    navigate('/login');\n  };\n\n  const hasRole = (roles: UserRole | UserRole[]) => {\n    if (!user) return false;\n    \n    if (Array.isArray(roles)) {\n      return roles.includes(user.role);\n    }\n    \n    return user.role === roles;\n  };\n\n  // Role-specific helper properties\n  const isPending = hasRole(UserRole.PENDING);\n  const isProjectManager = hasRole(UserRole.PROJECT_MANAGER);\n  const isSubPmo = hasRole(UserRole.SUB_PMO);\n  const isMainPmo = hasRole(UserRole.MAIN_PMO);\n  const isDepartmentDirector = hasRole(UserRole.DEPARTMENT_DIRECTOR);\n  const isHigherManagement = hasRole(UserRole.EXECUTIVE);\n  const isAdmin = hasRole(UserRole.ADMIN);\n  const isMember = user !== null && user.role !== UserRole.PENDING;\n  \n  const isAuthenticated = !!user && !!token;\n  \n  // Role checking helpers\n  const isPM = user?.role === UserRole.PROJECT_MANAGER;\n  const isQA = false;\n  \n  // Adding aliases for roles that components are trying to access\n  const isDirector = isDepartmentDirector;\n  const isExecutive = isHigherManagement;\n  const isMainPMO = isMainPmo;\n  const isSubPMO = isSubPmo;\n\n  // Check if user has one of the specified roles\n  const hasAccess = (roles: UserRole[]) => {\n    if (!user) return false;\n    return roles.includes(user.role);\n  };\n\n  const contextValue: AuthContextType = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    hasRole,\n    isPending,\n    isProjectManager,\n    isSubPmo,\n    isMainPmo,\n    isDepartmentDirector,\n    isHigherManagement,\n    isAdmin,\n    isMember,\n    isPM,\n    isQA,\n    isDirector,\n    isExecutive,\n    isMainPMO,\n    isSubPMO,\n    hasAccess,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\n\n// Define roles hierarchy for ApprovalStatus\nexport enum ApprovalStatus {\n  DRAFT = 'DRAFT',\n  SUBMITTED = 'SUBMITTED',\n  SUB_PMO_REVIEW = 'SUB_PMO_REVIEW',\n  SUB_PMO_APPROVED = 'SUB_PMO_APPROVED',\n  MAIN_PMO_REVIEW = 'MAIN_PMO_REVIEW',\n  MAIN_PMO_APPROVED = 'MAIN_PMO_APPROVED',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  CHANGES_REQUESTED = 'CHANGES_REQUESTED'\n}\n\n// Define permission functions\nexport const canCreateProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.PROJECT_MANAGER,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO\n  ].includes(userRole as UserRole);\n};\n\nexport const canEditProjects = (userRole: UserRole | string | undefined, isOwnProject: boolean): boolean => {\n  if (!userRole) return false;\n  \n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Can edit all projects\n  }\n  \n  if (userRole === UserRole.SUB_PMO) {\n    return true; // Can edit projects in their department\n  }\n  \n  if (userRole === UserRole.PROJECT_MANAGER && isOwnProject) {\n    return true; // Project managers can only edit their own projects\n  }\n  \n  return false;\n};\n\nexport const canApproveProjects = (userRole: UserRole | string | undefined, isOwnProject: boolean): boolean => {\n  if (!userRole) return false;\n  \n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Final approval\n  }\n  \n  if (userRole === UserRole.SUB_PMO && !isOwnProject) {\n    return true; // Sub PMOs can approve projects they don't own\n  }\n  \n  return false;\n};\n\nexport const canRequestChanges = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.PROJECT_MANAGER,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO,\n    UserRole.TEAM_LEAD\n  ].includes(userRole as UserRole);\n};\n\nexport const canViewAllProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.MAIN_PMO,\n    UserRole.EXECUTIVE\n  ].includes(userRole as UserRole);\n};\n\nexport const canViewDepartmentProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO,\n    UserRole.DEPARTMENT_DIRECTOR,\n    UserRole.EXECUTIVE\n  ].includes(userRole as UserRole);\n};\n\n// Define the workflow for approvals\nexport const getNextApprovalStatus = (\n  currentStatus: ApprovalStatus, \n  userRole: UserRole | string | undefined, \n  action: 'APPROVE' | 'REJECT' | 'REQUEST_CHANGES'\n): ApprovalStatus | null => {\n  if (!userRole) return null;\n  \n  switch (currentStatus) {\n    case ApprovalStatus.DRAFT:\n      return ApprovalStatus.SUBMITTED;\n      \n    case ApprovalStatus.SUBMITTED:\n      if (userRole === UserRole.SUB_PMO || userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.SUB_PMO_APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n      \n    case ApprovalStatus.SUB_PMO_APPROVED:\n      if (userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n      \n    case ApprovalStatus.CHANGES_REQUESTED:\n      return ApprovalStatus.SUBMITTED;\n      \n    default:\n      return null;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}