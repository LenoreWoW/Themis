{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Box, Typography, Button, useTheme } from '@mui/material';\nimport { Add as AddIcon, RequestQuote as RequestIcon } from '@mui/icons-material';\nimport { TaskStatus, canAddTasks, canRequestTasks } from '../../types';\nimport { useTasks } from '../../context/TaskContext';\nimport { useAuth } from '../../context/AuthContext';\nimport KanbanColumn from './Board/KanbanColumn';\n\n// Define the props interface for the KanbanBoard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to get column color based on status\nconst getColumnColor = status => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return '#e0e0e0';\n    case TaskStatus.IN_PROGRESS:\n      return '#bbdefb';\n    case TaskStatus.REVIEW:\n      return '#fff9c4';\n    case TaskStatus.DONE:\n      return '#c8e6c9';\n    default:\n      return '#e0e0e0';\n  }\n};\n\n// Helper function to get column title based on status\nconst getColumnTitle = status => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return 'To Do';\n    case TaskStatus.IN_PROGRESS:\n      return 'In Progress';\n    case TaskStatus.REVIEW:\n      return 'Review';\n    case TaskStatus.DONE:\n      return 'Done';\n    default:\n      return 'Unknown';\n  }\n};\nconst KanbanBoard = ({\n  project,\n  onTaskClick,\n  onAddTask,\n  onRequestTask,\n  maxTasksPerStatus\n}) => {\n  _s();\n  const theme = useTheme();\n  const {\n    tasks,\n    moveTask\n  } = useTasks();\n  const {\n    user\n  } = useAuth();\n  const [columns, setColumns] = useState({});\n\n  // Check if user has permission to add tasks\n  const userCanAddTasks = user !== null && user !== void 0 && user.role ? canAddTasks(user.role) : false;\n  const userCanRequestTasks = user !== null && user !== void 0 && user.role ? canRequestTasks(user.role) : false;\n\n  // Organize tasks into columns by status\n  useEffect(() => {\n    const newColumns = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: []\n    };\n    tasks.forEach(task => {\n      if (!task.id) {\n        console.warn('Task without ID found, skipping:', task);\n        return;\n      }\n      const status = task.status || TaskStatus.TODO;\n      if (newColumns[status]) {\n        newColumns[status].push({\n          ...task,\n          id: String(task.id)\n        });\n      } else {\n        console.warn(`Unknown status ${status} for task ${task.id}, placing in TODO`);\n        newColumns[TaskStatus.TODO].push({\n          ...task,\n          id: String(task.id)\n        });\n      }\n    });\n    setColumns(newColumns);\n  }, [tasks]);\n  const handleDragEnd = async result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    try {\n      await moveTask(draggableId, destination.droppableId);\n    } catch (err) {\n      console.error('Error moving task:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), userCanAddTasks && onAddTask ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 24\n        }, this),\n        onClick: onAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : userCanRequestTasks && onRequestTask ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(RequestIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 24\n        }, this),\n        onClick: onRequestTask,\n        children: \"Request Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          overflowX: 'auto',\n          pb: 2\n        },\n        children: Object.entries(columns).map(([status, columnTasks]) => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n          id: status,\n          title: getColumnTitle(status),\n          status: status,\n          color: getColumnColor(status),\n          tasks: columnTasks,\n          onTaskClick: onTaskClick,\n          maxTasks: maxTasksPerStatus\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"JxPaO8maWTBlZ3rDGzeahh8Yv1I=\", false, function () {\n  return [useTheme, useTasks, useAuth];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Box","Typography","Button","useTheme","Add","AddIcon","RequestQuote","RequestIcon","TaskStatus","canAddTasks","canRequestTasks","useTasks","useAuth","KanbanColumn","jsxDEV","_jsxDEV","getColumnColor","status","TODO","IN_PROGRESS","REVIEW","DONE","getColumnTitle","KanbanBoard","project","onTaskClick","onAddTask","onRequestTask","maxTasksPerStatus","_s","theme","tasks","moveTask","user","columns","setColumns","userCanAddTasks","role","userCanRequestTasks","newColumns","forEach","task","id","console","warn","push","String","handleDragEnd","result","destination","source","draggableId","droppableId","index","err","error","sx","p","children","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","onDragEnd","gap","overflowX","pb","Object","entries","map","columnTasks","title","color","maxTasks","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { Box, Typography, Button, useTheme } from '@mui/material';\nimport { Add as AddIcon, RequestQuote as RequestIcon } from '@mui/icons-material';\nimport { Task, TaskStatus, Project, UserRole, canAddTasks, canRequestTasks } from '../../types';\nimport { useTasks } from '../../context/TaskContext';\nimport { useAuth } from '../../context/AuthContext';\nimport KanbanColumn from './Board/KanbanColumn';\n\n// Define the props interface for the KanbanBoard component\ninterface KanbanBoardProps {\n  project?: Project;\n  onTaskClick?: (taskId: string) => void;\n  onAddTask?: () => void;\n  onRequestTask?: () => void;\n  maxTasksPerStatus?: number;\n}\n\n// Helper function to get column color based on status\nconst getColumnColor = (status: TaskStatus): string => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return '#e0e0e0';\n    case TaskStatus.IN_PROGRESS:\n      return '#bbdefb';\n    case TaskStatus.REVIEW:\n      return '#fff9c4';\n    case TaskStatus.DONE:\n      return '#c8e6c9';\n    default:\n      return '#e0e0e0';\n  }\n};\n\n// Helper function to get column title based on status\nconst getColumnTitle = (status: TaskStatus): string => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return 'To Do';\n    case TaskStatus.IN_PROGRESS:\n      return 'In Progress';\n    case TaskStatus.REVIEW:\n      return 'Review';\n    case TaskStatus.DONE:\n      return 'Done';\n    default:\n      return 'Unknown';\n  }\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({\n  project,\n  onTaskClick,\n  onAddTask,\n  onRequestTask,\n  maxTasksPerStatus,\n}) => {\n  const theme = useTheme();\n  const { tasks, moveTask } = useTasks();\n  const { user } = useAuth();\n  const [columns, setColumns] = useState<Record<string, Task[]>>({});\n  \n  // Check if user has permission to add tasks\n  const userCanAddTasks = user?.role ? canAddTasks(user.role) : false;\n  const userCanRequestTasks = user?.role ? canRequestTasks(user.role) : false;\n  \n  // Organize tasks into columns by status\n  useEffect(() => {\n    const newColumns: Record<string, Task[]> = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: [],\n    };\n    \n    tasks.forEach(task => {\n      if (!task.id) {\n        console.warn('Task without ID found, skipping:', task);\n        return;\n      }\n      \n      const status = task.status || TaskStatus.TODO;\n      \n      if (newColumns[status]) {\n        newColumns[status].push({\n          ...task,\n          id: String(task.id)\n        });\n      } else {\n        console.warn(`Unknown status ${status} for task ${task.id}, placing in TODO`);\n        newColumns[TaskStatus.TODO].push({\n          ...task,\n          id: String(task.id)\n        });\n      }\n    });\n    \n    setColumns(newColumns);\n  }, [tasks]);\n\n  const handleDragEnd = async (result: DropResult) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    try {\n      await moveTask(draggableId, destination.droppableId as TaskStatus);\n    } catch (err) {\n      console.error('Error moving task:', err);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">Kanban Board</Typography>\n        {userCanAddTasks && onAddTask ? (\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={onAddTask}\n          >\n            Add Task\n          </Button>\n        ) : userCanRequestTasks && onRequestTask ? (\n          <Button\n            variant=\"outlined\"\n            startIcon={<RequestIcon />}\n            onClick={onRequestTask}\n          >\n            Request Task\n          </Button>\n        ) : null}\n      </Box>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Box sx={{ display: 'flex', gap: 2, overflowX: 'auto', pb: 2 }}>\n          {Object.entries(columns).map(([status, columnTasks]) => (\n            <KanbanColumn\n              key={status}\n              id={status}\n              title={getColumnTitle(status as TaskStatus)}\n              status={status as TaskStatus}\n              color={getColumnColor(status as TaskStatus)}\n              tasks={columnTasks}\n              onTaskClick={onTaskClick}\n              maxTasks={maxTasksPerStatus}\n            />\n          ))}\n        </Box>\n      </DragDropContext>\n    </Box>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}