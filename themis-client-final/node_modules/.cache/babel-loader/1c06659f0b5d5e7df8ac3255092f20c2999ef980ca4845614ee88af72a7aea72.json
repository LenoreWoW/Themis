{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import{Box,Typography,LinearProgress,Dialog,DialogTitle,DialogContent,IconButton,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Chip,Container,Tooltip,CircularProgress,Button,Tabs,Tab}from'@mui/material';import{Close as CloseIcon,Refresh as RefreshIcon,CloudDownload as DownloadIcon,Dashboard as DashboardIcon,BarChart as BarChartIcon}from'@mui/icons-material';import{ProjectStatus,UserRole,TaskPriority,RiskStatus,IssueStatus,RiskImpact}from'../types';import api from'../services/api';import{useAuth}from'../hooks/useAuth';import{formatDate,getStatusColor,getDashboardAccess}from'../utils/helpers';import{ProjectProvider}from'../context/ProjectContext';import AnalyticsDashboard from'../components/Analytics/AnalyticsDashboard';import{useNavigate,useLocation}from'react-router-dom';import{useTranslation}from'react-i18next';import MetricCard from'../components/common/MetricCard';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ProjectDialog=_ref=>{let{open,onClose,title,projects}=_ref;const{t}=useTranslation();return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[title,/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",onClick:onClose,sx:{position:'absolute',right:8,top:8},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('project.name')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.status')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.progress')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.dueDate')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.department')})]})}),/*#__PURE__*/_jsx(TableBody,{children:projects.map(project=>{var _project$department;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:project.name}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:t(`status.${project.status.toLowerCase()}`),size:\"small\",sx:{backgroundColor:getStatusColor(project.status,project.endDate),color:'white'}})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Box,{width:\"100%\",mr:1,children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:project.progress,sx:{height:8,borderRadius:5,backgroundColor:'#e0e0e0','& .MuiLinearProgress-bar':{backgroundColor:project.progress<30?'#f44336':project.progress<70?'#fb8c00':'#4caf50'}}})}),/*#__PURE__*/_jsx(Box,{minWidth:35,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:`${Math.round(project.progress)}%`})})]})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(project.endDate)}),/*#__PURE__*/_jsx(TableCell,{children:((_project$department=project.department)===null||_project$department===void 0?void 0:_project$department.name)||t('common.noData')})]},project.id);})})]})})})]});};const DashboardPage=()=>{const{user}=useAuth();const[projects,setProjects]=useState([]);const[risks,setRisks]=useState([]);const[issues,setIssues]=useState([]);const[selectedMetric,setSelectedMetric]=useState(null);const[dialogOpen,setDialogOpen]=useState(false);const[isLoading,setIsLoading]=useState(true);const[lastRefresh,setLastRefresh]=useState(new Date());const navigate=useNavigate();const location=useLocation();const{t}=useTranslation();// Set the initial tab value based on URL parameters\nconst tabParam=new URLSearchParams(location.search).get('tab');const initialTabValue=tabParam==='analytics'?1:0;const[tabValue,setTabValue]=useState(initialTabValue);// Get access permissions based on user role\nconst accessPermissions=useMemo(()=>getDashboardAccess(user===null||user===void 0?void 0:user.role),[user===null||user===void 0?void 0:user.role]);// Determine if user is an executive for customized UI\nconst isExecutive=(user===null||user===void 0?void 0:user.role)===UserRole.EXECUTIVE||(user===null||user===void 0?void 0:user.role)===UserRole.ADMIN;const isDepartmentDirector=(user===null||user===void 0?void 0:user.role)===UserRole.DEPARTMENT_DIRECTOR;// Get dashboard title based on user role\nconst getDashboardTitle=()=>{var _user$department;if(isExecutive)return t('dashboard.title');if(isDepartmentDirector)return`${(user===null||user===void 0?void 0:(_user$department=user.department)===null||_user$department===void 0?void 0:_user$department.name)||t('project.department')} ${t('dashboard.title')}`;if((user===null||user===void 0?void 0:user.role)===UserRole.PROJECT_MANAGER)return t('dashboard.pmDashboard','Project Manager Dashboard');if((user===null||user===void 0?void 0:user.role)===UserRole.MAIN_PMO)return t('dashboard.pmoDashboard','PMO Dashboard');if((user===null||user===void 0?void 0:user.role)===UserRole.SUB_PMO)return t('dashboard.pmoDashboard','PMO Dashboard');return t('navigation.dashboard');};// New states for risks and issues dialogs\nconst[risksDialogOpen,setRisksDialogOpen]=useState(false);const[issuesDialogOpen,setIssuesDialogOpen]=useState(false);useEffect(()=>{const fetchProjects=async()=>{try{setIsLoading(true);const response=await api.projects.getAllProjects('');if(response.success){let filteredProjects=response.data;// Only filter projects if the user can't view all projects\nif(!accessPermissions.canViewAllProjects&&isDepartmentDirector&&user!==null&&user!==void 0&&user.department){filteredProjects=filteredProjects.filter(project=>{var _project$department2,_user$department2;return((_project$department2=project.department)===null||_project$department2===void 0?void 0:_project$department2.id)===((_user$department2=user.department)===null||_user$department2===void 0?void 0:_user$department2.id);});}else if(!accessPermissions.canViewAllProjects&&(user===null||user===void 0?void 0:user.role)===UserRole.PROJECT_MANAGER){filteredProjects=filteredProjects.filter(project=>{var _project$projectManag;return((_project$projectManag=project.projectManager)===null||_project$projectManag===void 0?void 0:_project$projectManag.id)===user.id;});}setProjects(filteredProjects);// Fetch risks and issues\nconst risksPromises=filteredProjects.map(project=>api.risks.getAllRisks(project.id,''));const issuesPromises=filteredProjects.map(project=>api.issues.getAllIssues(project.id,''));const risksResponses=await Promise.all(risksPromises);const issuesResponses=await Promise.all(issuesPromises);const allRisks=risksResponses.filter(response=>response.success).flatMap(response=>response.data||[]);const allIssues=issuesResponses.filter(response=>response.success).flatMap(response=>response.data||[]);setRisks(allRisks);setIssues(allIssues);// Update last refresh time\nsetLastRefresh(new Date());}}catch(error){console.error('Error fetching data:',error);}finally{setIsLoading(false);}};fetchProjects();},[user,accessPermissions.canViewAllProjects,isDepartmentDirector]);const metrics=useMemo(()=>{const now=new Date();const twoWeeksFromNow=new Date();twoWeeksFromNow.setDate(twoWeeksFromNow.getDate()+14);const inProgressProjects=projects.filter(project=>project.status===ProjectStatus.IN_PROGRESS);const completedProjects=projects.filter(project=>project.status===ProjectStatus.COMPLETED);const onHoldProjects=projects.filter(project=>project.status===ProjectStatus.ON_HOLD);const overdueProjects=projects.filter(project=>{const dueDate=new Date(project.endDate);return dueDate<now&&project.status!==ProjectStatus.COMPLETED;});const approachingDeadline=projects.filter(project=>{const dueDate=new Date(project.endDate);return dueDate>now&&dueDate<twoWeeksFromNow&&project.status!==ProjectStatus.COMPLETED;});const openRisksCount=risks.filter(risk=>risk.status===RiskStatus.IDENTIFIED||risk.status===RiskStatus.ASSESSED||risk.impact===RiskImpact.HIGH||risk.impact===RiskImpact.CRITICAL).length;const openIssuesCount=issues.filter(issue=>issue.status===IssueStatus.OPEN||issue.status===IssueStatus.IN_PROGRESS).length;// Calculate budget metrics\nconst totalBudget=projects.reduce((sum,project)=>sum+(project.budget||0),0);const totalActualCost=projects.reduce((sum,project)=>sum+(project.actualCost||0),0);const remainingBudget=totalBudget-totalActualCost;return{totalProjects:projects.length,inProgress:inProgressProjects.length,completed:completedProjects.length,onHold:onHoldProjects.length,overdue:overdueProjects.length,approachingDeadline:approachingDeadline.length,openRisks:openRisksCount,openIssues:openIssuesCount,totalBudget,totalActualCost,remainingBudget};},[projects,risks,issues]);const getFilteredProjects=metricType=>{switch(metricType){case'totalProjects':return projects;case'inProgress':return projects.filter(project=>project.status===ProjectStatus.IN_PROGRESS);case'completed':return projects.filter(project=>project.status===ProjectStatus.COMPLETED);case'onHold':return projects.filter(project=>project.status===ProjectStatus.ON_HOLD);case'overdue':const today=new Date();return projects.filter(project=>{const endDate=new Date(project.endDate);return endDate<today&&project.status!==ProjectStatus.COMPLETED;});case'approachingDeadline':const now=new Date();const twoWeeksFromNow=new Date();twoWeeksFromNow.setDate(twoWeeksFromNow.getDate()+14);return projects.filter(project=>{const dueDate=new Date(project.endDate);return dueDate>now&&dueDate<twoWeeksFromNow&&project.status!==ProjectStatus.COMPLETED;});case'highBudget':// Projects with budget above average\nconst avgBudget=projects.reduce((sum,project)=>sum+(project.budget||0),0)/projects.length;return projects.filter(project=>(project.budget||0)>avgBudget);case'overBudget':// Projects that have exceeded their budget\nreturn projects.filter(project=>(project.actualCost||0)>(project.budget||0));case'underBudget':// Projects that are under budget\nreturn projects.filter(project=>project.status!==ProjectStatus.COMPLETED&&(project.actualCost||0)<(project.budget||0));case'totalActualCost':// Sort projects by actual cost (highest first)\nreturn[...projects].filter(project=>project.actualCost&&project.actualCost>0).sort((a,b)=>(b.actualCost||0)-(a.actualCost||0));default:return[];}};const handleMetricClick=metricType=>{console.log(\"Metric clicked:\",metricType);// Check if the metric type is valid\nif(!metricType){console.error(\"Invalid metric type:\",metricType);return;}// Get the filtered projects for this metric\nconst filteredProjects=getFilteredProjects(metricType);console.log(`Found ${filteredProjects.length} projects for ${metricType}`);// Set the selected metric and open the dialog\nsetSelectedMetric(metricType);setDialogOpen(true);};const handleRefresh=async()=>{try{setIsLoading(true);const response=await api.projects.getAllProjects('');if(response.success){// Process and update projects\nlet filteredProjects=response.data;// Update with same filtering logic as above\nif(!accessPermissions.canViewAllProjects&&isDepartmentDirector&&user!==null&&user!==void 0&&user.department){filteredProjects=filteredProjects.filter(project=>{var _project$department3,_user$department3;return((_project$department3=project.department)===null||_project$department3===void 0?void 0:_project$department3.id)===((_user$department3=user.department)===null||_user$department3===void 0?void 0:_user$department3.id);});}else if(!accessPermissions.canViewAllProjects&&(user===null||user===void 0?void 0:user.role)===UserRole.PROJECT_MANAGER){filteredProjects=filteredProjects.filter(project=>{var _project$projectManag2;return((_project$projectManag2=project.projectManager)===null||_project$projectManag2===void 0?void 0:_project$projectManag2.id)===user.id;});}setProjects(filteredProjects);// Refresh risks and issues\nawait Promise.all(filteredProjects.map(async project=>{// Refresh risks\nconst risksResponse=await api.risks.getAllRisks(project.id,'');if(risksResponse.success){setRisks(prev=>{// Filter out risks for this project\nconst filtered=prev.filter(risk=>risk.projectId!==project.id);// Add updated risks\nreturn[...filtered,...(risksResponse.data||[])];});}// Refresh issues\nconst issuesResponse=await api.issues.getAllIssues(project.id,'');if(issuesResponse.success){setIssues(prev=>{// Filter out issues for this project\nconst filtered=prev.filter(issue=>issue.projectId!==project.id);// Add updated issues\nreturn[...filtered,...(issuesResponse.data||[])];});}}));// Update last refresh time\nsetLastRefresh(new Date());}}catch(error){console.error('Error refreshing data:',error);}finally{setIsLoading(false);}};const handleNavigateToRisks=function(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'risks';if(type==='risks'){setRisksDialogOpen(true);}else{setIssuesDialogOpen(true);}};const handleExportReport=()=>{// In a real app, this would trigger a report generation\nconsole.log('Exporting dashboard report');alert('Report exported successfully');};const getDialogTitle=metricType=>{switch(metricType){case'totalProjects':return t('dashboard.allProjects','All Projects');case'inProgress':return t('dashboard.inProgressProjects','In Progress Projects');case'completed':return t('dashboard.completedProjects','Completed Projects');case'onHold':return t('dashboard.onHoldProjects','On Hold Projects');case'overdue':return t('dashboard.overdueProjects','Overdue Projects');case'approachingDeadline':return t('dashboard.approachingDeadline','Projects Approaching Deadline');case'highBudget':return t('dashboard.highBudgetProjects','Projects with Above Average Budget');case'overBudget':return t('dashboard.overBudgetProjects','Projects Over Budget');case'underBudget':return t('dashboard.underBudgetProjects','Projects Under Budget');case'totalActualCost':return t('dashboard.projectsByActualCost','Projects by Actual Cost');default:return t('dashboard.filteredProjects','Filtered Projects');}};const handleTabChange=(event,newValue)=>{setTabValue(newValue);// Update URL when switching tabs\nif(newValue===1){navigate('/dashboard?tab=analytics',{replace:true});}else{navigate('/dashboard',{replace:true});}};// Update tab when URL changes\nuseEffect(()=>{const tabParam=new URLSearchParams(location.search).get('tab');if(tabParam==='analytics'&&tabValue!==1){setTabValue(1);}else if(!tabParam&&tabValue!==0){setTabValue(0);}},[location,tabValue]);const getPriorityColor=priority=>{switch(priority){case TaskPriority.HIGH:return'error';case TaskPriority.MEDIUM:return'warning';case TaskPriority.LOW:return'success';default:return'default';}};const renderDashboardContent=()=>{switch(tabValue){case 0:// Dashboard tab\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:2},children:\"KPIs\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:3},children:[/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Total Projects\",value:metrics.totalProjects,color:\"primary\",progress:100,onClick:()=>handleMetricClick('totalProjects')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"In Progress Projects\",value:metrics.inProgress,color:\"info\",progress:Math.round(metrics.inProgress/metrics.totalProjects*100),onClick:()=>handleMetricClick('inProgress')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Completed Projects\",value:metrics.completed,color:\"success\",progress:Math.round(metrics.completed/metrics.totalProjects*100),onClick:()=>handleMetricClick('completed')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"On Hold Projects\",value:metrics.onHold,color:\"warning\",progress:Math.round(metrics.onHold/metrics.totalProjects*100),onClick:()=>handleMetricClick('onHold')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"High Priority Risks\",value:metrics.openRisks,color:\"error\",progress:Math.round(metrics.openRisks/metrics.totalProjects*100),onClick:()=>handleNavigateToRisks('risks')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Open Issues\",value:metrics.openIssues,color:\"error\",progress:Math.round(metrics.openIssues/metrics.totalProjects*100),onClick:()=>handleNavigateToRisks('issues')})})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:2},children:\"Budget Metrics\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:3},children:[/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Total Budget Estimated\",value:`$${metrics.totalBudget.toLocaleString()}`,color:\"primary\",progress:100,onClick:()=>handleMetricClick('highBudget')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Total Actual Cost\",value:`$${metrics.totalActualCost.toLocaleString()}`,color:metrics.totalActualCost>metrics.totalBudget?'error':'info',progress:Math.round(metrics.totalActualCost/metrics.totalBudget*100),onClick:()=>handleMetricClick('totalActualCost')})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 300px'},children:/*#__PURE__*/_jsx(MetricCard,{title:\"Remaining Budget\",value:`$${metrics.remainingBudget.toLocaleString()}`,color:metrics.remainingBudget<0?'error':'success',progress:Math.round(metrics.remainingBudget/metrics.totalBudget*100),subtitle:metrics.remainingBudget<0?'Budget Overrun':'',onClick:()=>handleMetricClick('underBudget')})})]})]})]});case 1:// Analytics tab\nreturn/*#__PURE__*/_jsx(AnalyticsDashboard,{});default:return null;}};return/*#__PURE__*/_jsx(ProjectProvider,{children:/*#__PURE__*/_jsx(Container,{maxWidth:\"xl\",children:/*#__PURE__*/_jsxs(Box,{sx:{py:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:3,alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:getDashboardTitle()}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[accessPermissions.canExportReports&&/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),variant:\"outlined\",size:\"small\",onClick:handleExportReport,children:t('dashboard.export')}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[t('dashboard.lastUpdated'),\": \",lastRefresh.toLocaleTimeString()]}),/*#__PURE__*/_jsx(Tooltip,{title:t('dashboard.refresh'),children:/*#__PURE__*/_jsx(IconButton,{onClick:handleRefresh,disabled:isLoading,children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):/*#__PURE__*/_jsx(RefreshIcon,{})})})]})]}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,\"aria-label\":\"dashboard tabs\",children:[/*#__PURE__*/_jsx(Tab,{label:t('navigation.dashboard'),id:\"tab-0\",\"aria-controls\":\"tabpanel-0\",icon:/*#__PURE__*/_jsx(DashboardIcon,{}),iconPosition:\"start\"}),/*#__PURE__*/_jsx(Tab,{label:t('dashboard.analytics','Analytics'),id:\"tab-1\",\"aria-controls\":\"tabpanel-1\",icon:/*#__PURE__*/_jsx(BarChartIcon,{}),iconPosition:\"start\"})]})}),renderDashboardContent(),selectedMetric&&/*#__PURE__*/_jsx(ProjectDialog,{open:dialogOpen,onClose:()=>setDialogOpen(false),title:getDialogTitle(selectedMetric),projects:getFilteredProjects(selectedMetric)}),/*#__PURE__*/_jsxs(Dialog,{open:risksDialogOpen,onClose:()=>setRisksDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[t('dashboard.highPriorityRisks','High Priority Risks'),/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",onClick:()=>setRisksDialogOpen(false),sx:{position:'absolute',right:8,top:8},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('risk.title')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.name')}),/*#__PURE__*/_jsx(TableCell,{children:t('risk.impact')}),/*#__PURE__*/_jsx(TableCell,{children:t('risk.status')}),/*#__PURE__*/_jsx(TableCell,{children:t('risk.createdAt')})]})}),/*#__PURE__*/_jsx(TableBody,{children:risks.filter(risk=>risk.status===RiskStatus.IDENTIFIED||risk.status===RiskStatus.ANALYZING||risk.status===RiskStatus.MONITORED).map(risk=>{const project=projects.find(p=>p.id===risk.projectId);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:risk.title}),/*#__PURE__*/_jsx(TableCell,{children:(project===null||project===void 0?void 0:project.name)||t('common.noData')}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:t(`risk.impact.${risk.impact.toLowerCase()}`),size:\"small\",color:risk.impact===RiskImpact.HIGH?'error':risk.impact===RiskImpact.MEDIUM?'warning':'success'})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:t(`risk.status.${risk.status.toLowerCase()}`),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(risk.createdAt)})]},risk.id);})})]})})})]}),/*#__PURE__*/_jsxs(Dialog,{open:issuesDialogOpen,onClose:()=>setIssuesDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[t('dashboard.openIssues','Open Issues'),/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"close\",onClick:()=>setIssuesDialogOpen(false),sx:{position:'absolute',right:8,top:8},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('issue.title')}),/*#__PURE__*/_jsx(TableCell,{children:t('project.name')}),/*#__PURE__*/_jsx(TableCell,{children:t('issue.impact')}),/*#__PURE__*/_jsx(TableCell,{children:t('issue.status')}),/*#__PURE__*/_jsx(TableCell,{children:t('issue.createdAt')})]})}),/*#__PURE__*/_jsx(TableBody,{children:issues.filter(issue=>issue.status===IssueStatus.OPEN||issue.status===IssueStatus.IN_PROGRESS).map(issue=>{const project=projects.find(p=>p.id===issue.projectId);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:issue.title}),/*#__PURE__*/_jsx(TableCell,{children:(project===null||project===void 0?void 0:project.name)||t('common.noData')}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:t(`issue.impact.${issue.impact.toLowerCase()}`),size:\"small\",color:issue.impact===RiskImpact.HIGH?'error':issue.impact===RiskImpact.MEDIUM?'warning':'success'})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:t(`issue.status.${issue.status.toLowerCase()}`),size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(issue.createdAt)})]},issue.id);})})]})})})]})]})})});};export default DashboardPage;","map":{"version":3,"names":["React","useState","useEffect","useMemo","Box","Typography","LinearProgress","Dialog","DialogTitle","DialogContent","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","Container","Tooltip","CircularProgress","Button","Tabs","Tab","Close","CloseIcon","Refresh","RefreshIcon","CloudDownload","DownloadIcon","Dashboard","DashboardIcon","BarChart","BarChartIcon","ProjectStatus","UserRole","TaskPriority","RiskStatus","IssueStatus","RiskImpact","api","useAuth","formatDate","getStatusColor","getDashboardAccess","ProjectProvider","AnalyticsDashboard","useNavigate","useLocation","useTranslation","MetricCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProjectDialog","_ref","open","onClose","title","projects","t","maxWidth","fullWidth","children","onClick","sx","position","right","top","component","map","project","_project$department","name","label","status","toLowerCase","size","backgroundColor","endDate","color","display","alignItems","width","mr","variant","value","progress","height","borderRadius","minWidth","Math","round","department","id","DashboardPage","user","setProjects","risks","setRisks","issues","setIssues","selectedMetric","setSelectedMetric","dialogOpen","setDialogOpen","isLoading","setIsLoading","lastRefresh","setLastRefresh","Date","navigate","location","tabParam","URLSearchParams","search","get","initialTabValue","tabValue","setTabValue","accessPermissions","role","isExecutive","EXECUTIVE","ADMIN","isDepartmentDirector","DEPARTMENT_DIRECTOR","getDashboardTitle","_user$department","PROJECT_MANAGER","MAIN_PMO","SUB_PMO","risksDialogOpen","setRisksDialogOpen","issuesDialogOpen","setIssuesDialogOpen","fetchProjects","response","getAllProjects","success","filteredProjects","data","canViewAllProjects","filter","_project$department2","_user$department2","_project$projectManag","projectManager","risksPromises","getAllRisks","issuesPromises","getAllIssues","risksResponses","Promise","all","issuesResponses","allRisks","flatMap","allIssues","error","console","metrics","now","twoWeeksFromNow","setDate","getDate","inProgressProjects","IN_PROGRESS","completedProjects","COMPLETED","onHoldProjects","ON_HOLD","overdueProjects","dueDate","approachingDeadline","openRisksCount","risk","IDENTIFIED","ASSESSED","impact","HIGH","CRITICAL","length","openIssuesCount","issue","OPEN","totalBudget","reduce","sum","budget","totalActualCost","actualCost","remainingBudget","totalProjects","inProgress","completed","onHold","overdue","openRisks","openIssues","getFilteredProjects","metricType","today","avgBudget","sort","a","b","handleMetricClick","log","handleRefresh","_project$department3","_user$department3","_project$projectManag2","risksResponse","prev","filtered","projectId","issuesResponse","handleNavigateToRisks","type","arguments","undefined","handleExportReport","alert","getDialogTitle","handleTabChange","event","newValue","replace","getPriorityColor","priority","MEDIUM","LOW","renderDashboardContent","mb","flexWrap","gap","flex","toLocaleString","subtitle","py","justifyContent","gutterBottom","canExportReports","startIcon","toLocaleTimeString","disabled","borderBottom","borderColor","onChange","icon","iconPosition","ANALYZING","MONITORED","find","p","createdAt"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/ExecutiveDashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  LinearProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Chip,\n  Container,\n  Stack,\n  Divider,\n  Tooltip,\n  CircularProgress,\n  Button,\n  Alert,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport { \n  Close as CloseIcon,\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  Refresh as RefreshIcon,\n  CloudDownload as DownloadIcon,\n  Assignment as AssignmentIcon,\n  Dashboard as DashboardIcon,\n  BarChart as BarChartIcon\n} from '@mui/icons-material';\nimport { Project, ProjectStatus, UserRole, Assignment, AssignmentStatus, TaskPriority, RiskStatus, IssueStatus, Risk, Issue, RiskImpact } from '../types';\nimport api from '../services/api';\nimport { useAuth } from '../hooks/useAuth';\nimport { formatDate, getStatusColor, getDashboardAccess } from '../utils/helpers';\nimport { ProjectProvider } from '../context/ProjectContext';\nimport AnalyticsDashboard from '../components/Analytics/AnalyticsDashboard';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MetricCard from '../components/common/MetricCard';\n\ninterface DashboardMetrics {\n  totalProjects: number;\n  inProgress: number;\n  completed: number;\n  onHold: number;\n  overdue: number;\n  approachingDeadline: number;\n  openRisks: number;\n  openIssues: number;\n  totalBudget: number;\n  totalActualCost: number;\n  remainingBudget: number;\n}\n\ninterface ProjectDialogProps {\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  projects: Project[];\n}\n\ninterface AssignmentItem {\n  id: string;\n  title: string;\n  description: string;\n  priority: TaskPriority;\n  status: AssignmentStatus;\n  dueDate: string;\n  assignedBy: {\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst ProjectDialog: React.FC<ProjectDialogProps> = ({ open, onClose, title, projects }) => {\n  const { t } = useTranslation();\n  \n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        {title}\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{ position: 'absolute', right: 8, top: 8 }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>{t('project.name')}</TableCell>\n                <TableCell>{t('project.status')}</TableCell>\n                <TableCell>{t('project.progress')}</TableCell>\n                <TableCell>{t('project.dueDate')}</TableCell>\n                <TableCell>{t('project.department')}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project: Project) => (\n                <TableRow key={project.id}>\n                  <TableCell>{project.name}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={t(`status.${project.status.toLowerCase()}`)}\n                      size=\"small\"\n                      sx={{ backgroundColor: getStatusColor(project.status, project.endDate), color: 'white' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Box width=\"100%\" mr={1}>\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={project.progress}\n                          sx={{\n                            height: 8,\n                            borderRadius: 5,\n                            backgroundColor: '#e0e0e0',\n                            '& .MuiLinearProgress-bar': {\n                              backgroundColor: project.progress < 30 ? '#f44336' :\n                                project.progress < 70 ? '#fb8c00' : '#4caf50',\n                            },\n                          }}\n                        />\n                      </Box>\n                      <Box minWidth={35}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {`${Math.round(project.progress)}%`}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>{formatDate(project.endDate)}</TableCell>\n                  <TableCell>{project.department?.name || t('common.noData')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst DashboardPage: React.FC = () => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [risks, setRisks] = useState<Risk[]>([]);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const [selectedMetric, setSelectedMetric] = useState<string | null>(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation();\n  \n  // Set the initial tab value based on URL parameters\n  const tabParam = new URLSearchParams(location.search).get('tab');\n  const initialTabValue = tabParam === 'analytics' ? 1 : 0;\n  const [tabValue, setTabValue] = useState(initialTabValue);\n  \n  // Get access permissions based on user role\n  const accessPermissions = useMemo(() => \n    getDashboardAccess(user?.role as UserRole),\n  [user?.role]);\n\n  // Determine if user is an executive for customized UI\n  const isExecutive = user?.role === UserRole.EXECUTIVE || user?.role === UserRole.ADMIN;\n  const isDepartmentDirector = user?.role === UserRole.DEPARTMENT_DIRECTOR;\n  \n  // Get dashboard title based on user role\n  const getDashboardTitle = () => {\n    if (isExecutive) return t('dashboard.title');\n    if (isDepartmentDirector) return `${user?.department?.name || t('project.department')} ${t('dashboard.title')}`;\n    if (user?.role === UserRole.PROJECT_MANAGER) return t('dashboard.pmDashboard', 'Project Manager Dashboard');\n    if (user?.role === UserRole.MAIN_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    if (user?.role === UserRole.SUB_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    return t('navigation.dashboard');\n  };\n\n  // New states for risks and issues dialogs\n  const [risksDialogOpen, setRisksDialogOpen] = useState(false);\n  const [issuesDialogOpen, setIssuesDialogOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        setIsLoading(true);\n        const response = await api.projects.getAllProjects('');\n        if (response.success) {\n          let filteredProjects = response.data;\n          \n          // Only filter projects if the user can't view all projects\n          if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user?.department) {\n            filteredProjects = filteredProjects.filter((project: Project) => \n              project.department?.id === user.department?.id\n            );\n          } else if (!accessPermissions.canViewAllProjects && user?.role === UserRole.PROJECT_MANAGER) {\n            filteredProjects = filteredProjects.filter((project: Project) => \n              project.projectManager?.id === user.id\n            );\n          }\n          \n          setProjects(filteredProjects);\n          \n          // Fetch risks and issues\n          const risksPromises = filteredProjects.map((project: Project) => \n            api.risks.getAllRisks(project.id, '')\n          );\n          \n          const issuesPromises = filteredProjects.map((project: Project) => \n            api.issues.getAllIssues(project.id, '')\n          );\n          \n          const risksResponses = await Promise.all(risksPromises);\n          const issuesResponses = await Promise.all(issuesPromises);\n          \n          const allRisks = risksResponses\n            .filter(response => response.success)\n            .flatMap(response => response.data || []);\n            \n          const allIssues = issuesResponses\n            .filter(response => response.success)\n            .flatMap(response => response.data || []);\n          \n          setRisks(allRisks);\n          setIssues(allIssues);\n          \n          // Update last refresh time\n          setLastRefresh(new Date());\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchProjects();\n  }, [user, accessPermissions.canViewAllProjects, isDepartmentDirector]);\n\n  const metrics = useMemo(() => {\n    const now = new Date();\n    const twoWeeksFromNow = new Date();\n    twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n    \n    const inProgressProjects = projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n    const completedProjects = projects.filter(project => project.status === ProjectStatus.COMPLETED);\n    const onHoldProjects = projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n    const overdueProjects = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate < now && project.status !== ProjectStatus.COMPLETED;\n    });\n    const approachingDeadline = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n    });\n    \n    const openRisksCount = risks.filter(risk => \n      risk.status === RiskStatus.IDENTIFIED || \n      risk.status === RiskStatus.ASSESSED ||\n      risk.impact === RiskImpact.HIGH ||\n      risk.impact === RiskImpact.CRITICAL\n    ).length;\n    \n    const openIssuesCount = issues.filter(issue => \n      issue.status === IssueStatus.OPEN || \n      issue.status === IssueStatus.IN_PROGRESS\n    ).length;\n    \n    // Calculate budget metrics\n    const totalBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0);\n    const totalActualCost = projects.reduce((sum, project) => sum + (project.actualCost || 0), 0);\n    const remainingBudget = totalBudget - totalActualCost;\n\n    return {\n      totalProjects: projects.length,\n      inProgress: inProgressProjects.length,\n      completed: completedProjects.length,\n      onHold: onHoldProjects.length,\n      overdue: overdueProjects.length,\n      approachingDeadline: approachingDeadline.length,\n      openRisks: openRisksCount,\n      openIssues: openIssuesCount,\n      totalBudget,\n      totalActualCost,\n      remainingBudget\n    };\n  }, [projects, risks, issues]);\n\n  const getFilteredProjects = (metricType: string): Project[] => {\n    switch (metricType) {\n      case 'totalProjects':\n        return projects;\n      case 'inProgress':\n        return projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n      case 'completed':\n        return projects.filter(project => project.status === ProjectStatus.COMPLETED);\n      case 'onHold':\n        return projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n      case 'overdue':\n        const today = new Date();\n        return projects.filter(project => {\n          const endDate = new Date(project.endDate);\n          return endDate < today && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'approachingDeadline':\n        const now = new Date();\n        const twoWeeksFromNow = new Date();\n        twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n        return projects.filter(project => {\n          const dueDate = new Date(project.endDate);\n          return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'highBudget':\n        // Projects with budget above average\n        const avgBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0) / projects.length;\n        return projects.filter(project => (project.budget || 0) > avgBudget);\n      case 'overBudget':\n        // Projects that have exceeded their budget\n        return projects.filter(project => (project.actualCost || 0) > (project.budget || 0));\n      case 'underBudget':\n        // Projects that are under budget\n        return projects.filter(project => \n          project.status !== ProjectStatus.COMPLETED && \n          (project.actualCost || 0) < (project.budget || 0)\n        );\n      case 'totalActualCost':\n        // Sort projects by actual cost (highest first)\n        return [...projects]\n          .filter(project => project.actualCost && project.actualCost > 0)\n          .sort((a, b) => (b.actualCost || 0) - (a.actualCost || 0));\n      default:\n        return [];\n    }\n  };\n\n  const handleMetricClick = (metricType: string) => {\n    console.log(\"Metric clicked:\", metricType);\n    \n    // Check if the metric type is valid\n    if (!metricType) {\n      console.error(\"Invalid metric type:\", metricType);\n      return;\n    }\n    \n    // Get the filtered projects for this metric\n    const filteredProjects = getFilteredProjects(metricType);\n    console.log(`Found ${filteredProjects.length} projects for ${metricType}`);\n    \n    // Set the selected metric and open the dialog\n    setSelectedMetric(metricType);\n    setDialogOpen(true);\n  };\n\n  const handleRefresh = async () => {\n    try {\n      setIsLoading(true);\n      const response = await api.projects.getAllProjects('');\n      if (response.success) {\n        // Process and update projects\n        let filteredProjects = response.data;\n        \n        // Update with same filtering logic as above\n        if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user?.department) {\n          filteredProjects = filteredProjects.filter((project: Project) => \n            project.department?.id === user.department?.id\n          );\n        } else if (!accessPermissions.canViewAllProjects && user?.role === UserRole.PROJECT_MANAGER) {\n          filteredProjects = filteredProjects.filter((project: Project) => \n            project.projectManager?.id === user.id\n          );\n        }\n        \n        setProjects(filteredProjects);\n        \n        // Refresh risks and issues\n        await Promise.all(filteredProjects.map(async (project: Project) => {\n          // Refresh risks\n          const risksResponse = await api.risks.getAllRisks(project.id, '');\n          if (risksResponse.success) {\n            setRisks(prev => {\n              // Filter out risks for this project\n              const filtered = prev.filter(risk => risk.projectId !== project.id);\n              // Add updated risks\n              return [...filtered, ...(risksResponse.data || [])];\n            });\n          }\n          \n          // Refresh issues\n          const issuesResponse = await api.issues.getAllIssues(project.id, '');\n          if (issuesResponse.success) {\n            setIssues(prev => {\n              // Filter out issues for this project\n              const filtered = prev.filter(issue => issue.projectId !== project.id);\n              // Add updated issues\n              return [...filtered, ...(issuesResponse.data || [])];\n            });\n          }\n        }));\n        \n        // Update last refresh time\n        setLastRefresh(new Date());\n      }\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleNavigateToRisks = (type: 'risks' | 'issues' = 'risks') => {\n    if (type === 'risks') {\n      setRisksDialogOpen(true);\n    } else {\n      setIssuesDialogOpen(true);\n    }\n  };\n\n  const handleExportReport = () => {\n    // In a real app, this would trigger a report generation\n    console.log('Exporting dashboard report');\n    alert('Report exported successfully');\n  };\n\n  const getDialogTitle = (metricType: string): string => {\n    switch (metricType) {\n      case 'totalProjects':\n        return t('dashboard.allProjects', 'All Projects');\n      case 'inProgress':\n        return t('dashboard.inProgressProjects', 'In Progress Projects');\n      case 'completed':\n        return t('dashboard.completedProjects', 'Completed Projects');\n      case 'onHold':\n        return t('dashboard.onHoldProjects', 'On Hold Projects');\n      case 'overdue':\n        return t('dashboard.overdueProjects', 'Overdue Projects');\n      case 'approachingDeadline':\n        return t('dashboard.approachingDeadline', 'Projects Approaching Deadline');\n      case 'highBudget':\n        return t('dashboard.highBudgetProjects', 'Projects with Above Average Budget');\n      case 'overBudget':\n        return t('dashboard.overBudgetProjects', 'Projects Over Budget');\n      case 'underBudget':\n        return t('dashboard.underBudgetProjects', 'Projects Under Budget');\n      case 'totalActualCost':\n        return t('dashboard.projectsByActualCost', 'Projects by Actual Cost');\n      default:\n        return t('dashboard.filteredProjects', 'Filtered Projects');\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n    \n    // Update URL when switching tabs\n    if (newValue === 1) {\n      navigate('/dashboard?tab=analytics', { replace: true });\n    } else {\n      navigate('/dashboard', { replace: true });\n    }\n  };\n\n  // Update tab when URL changes\n  useEffect(() => {\n    const tabParam = new URLSearchParams(location.search).get('tab');\n    if (tabParam === 'analytics' && tabValue !== 1) {\n      setTabValue(1);\n    } else if (!tabParam && tabValue !== 0) {\n      setTabValue(0);\n    }\n  }, [location, tabValue]);\n\n  const getPriorityColor = (priority: TaskPriority) => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const renderDashboardContent = () => {\n    switch (tabValue) {\n      case 0: // Dashboard tab\n        return (\n          <>\n            {/* KPI Section - Show complete KPI section for executives and admins */}\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\n                KPIs\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Projects\"\n                    value={metrics.totalProjects}\n                    color=\"primary\"\n                    progress={100}\n                    onClick={() => handleMetricClick('totalProjects')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"In Progress Projects\"\n                    value={metrics.inProgress}\n                    color=\"info\"\n                    progress={Math.round((metrics.inProgress / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('inProgress')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Completed Projects\"\n                    value={metrics.completed}\n                    color=\"success\"\n                    progress={Math.round((metrics.completed / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('completed')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"On Hold Projects\"\n                    value={metrics.onHold}\n                    color=\"warning\"\n                    progress={Math.round((metrics.onHold / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('onHold')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"High Priority Risks\"\n                    value={metrics.openRisks}\n                    color=\"error\"\n                    progress={Math.round((metrics.openRisks / metrics.totalProjects) * 100)}\n                    onClick={() => handleNavigateToRisks('risks')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Open Issues\"\n                    value={metrics.openIssues}\n                    color=\"error\"\n                    progress={Math.round((metrics.openIssues / metrics.totalProjects) * 100)}\n                    onClick={() => handleNavigateToRisks('issues')}\n                  />\n                </Box>\n              </Box>\n            </Box>\n            \n            {/* Budget Metrics Section */}\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\n                Budget Metrics\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Budget Estimated\"\n                    value={`$${metrics.totalBudget.toLocaleString()}`}\n                    color=\"primary\"\n                    progress={100}\n                    onClick={() => handleMetricClick('highBudget')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Actual Cost\"\n                    value={`$${metrics.totalActualCost.toLocaleString()}`}\n                    color={metrics.totalActualCost > metrics.totalBudget ? 'error' : 'info'}\n                    progress={Math.round((metrics.totalActualCost / metrics.totalBudget) * 100)}\n                    onClick={() => handleMetricClick('totalActualCost')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Remaining Budget\"\n                    value={`$${metrics.remainingBudget.toLocaleString()}`}\n                    color={metrics.remainingBudget < 0 ? 'error' : 'success'}\n                    progress={Math.round((metrics.remainingBudget / metrics.totalBudget) * 100)}\n                    subtitle={metrics.remainingBudget < 0 ? 'Budget Overrun' : ''}\n                    onClick={() => handleMetricClick('underBudget')}\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </>\n        );\n        \n      case 1: // Analytics tab\n        return (\n          <AnalyticsDashboard />\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <ProjectProvider>\n      <Container maxWidth=\"xl\">\n        <Box sx={{ py: 4 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              {getDashboardTitle()}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              {accessPermissions.canExportReports && (\n                <Button \n                  startIcon={<DownloadIcon />} \n                  variant=\"outlined\" \n                  size=\"small\"\n                  onClick={handleExportReport}\n                >\n                  {t('dashboard.export')}\n                </Button>\n              )}\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {t('dashboard.lastUpdated')}: {lastRefresh.toLocaleTimeString()}\n              </Typography>\n              <Tooltip title={t('dashboard.refresh')}>\n                <IconButton onClick={handleRefresh} disabled={isLoading}>\n                  {isLoading ? <CircularProgress size={24} /> : <RefreshIcon />}\n                </IconButton>\n              </Tooltip>\n            </Box>\n          </Box>\n\n          {/* Tabs for Dashboard and Assignments */}\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n            <Tabs\n              value={tabValue}\n              onChange={handleTabChange}\n              aria-label=\"dashboard tabs\"\n            >\n              <Tab \n                label={t('navigation.dashboard')} \n                id=\"tab-0\" \n                aria-controls=\"tabpanel-0\" \n                icon={<DashboardIcon />}\n                iconPosition=\"start\"\n              />\n              <Tab \n                label={t('dashboard.analytics', 'Analytics')} \n                id=\"tab-1\" \n                aria-controls=\"tabpanel-1\" \n                icon={<BarChartIcon />}\n                iconPosition=\"start\"\n              />\n            </Tabs>\n          </Box>\n\n          {renderDashboardContent()}\n          \n          {/* Project Dialog */}\n          {selectedMetric && (\n            <ProjectDialog\n              open={dialogOpen}\n              onClose={() => setDialogOpen(false)}\n              title={getDialogTitle(selectedMetric)}\n              projects={getFilteredProjects(selectedMetric)}\n            />\n          )}\n          \n          {/* Risks Dialog */}\n          <Dialog \n            open={risksDialogOpen} \n            onClose={() => setRisksDialogOpen(false)} \n            maxWidth=\"md\" \n            fullWidth\n          >\n            <DialogTitle>\n              {t('dashboard.highPriorityRisks', 'High Priority Risks')}\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => setRisksDialogOpen(false)}\n                sx={{ position: 'absolute', right: 8, top: 8 }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('risk.title')}</TableCell>\n                      <TableCell>{t('project.name')}</TableCell>\n                      <TableCell>{t('risk.impact')}</TableCell>\n                      <TableCell>{t('risk.status')}</TableCell>\n                      <TableCell>{t('risk.createdAt')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {risks.filter(risk => risk.status === RiskStatus.IDENTIFIED || \n                                          risk.status === RiskStatus.ANALYZING || \n                                          risk.status === RiskStatus.MONITORED)\n                      .map((risk) => {\n                        const project = projects.find(p => p.id === risk.projectId);\n                        return (\n                          <TableRow key={risk.id}>\n                            <TableCell>{risk.title}</TableCell>\n                            <TableCell>{project?.name || t('common.noData')}</TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`risk.impact.${risk.impact.toLowerCase()}`)}\n                                size=\"small\"\n                                color={risk.impact === RiskImpact.HIGH ? 'error' : \n                                      risk.impact === RiskImpact.MEDIUM ? 'warning' : 'success'}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`risk.status.${risk.status.toLowerCase()}`)}\n                                size=\"small\"\n                              />\n                            </TableCell>\n                            <TableCell>{formatDate(risk.createdAt)}</TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n          </Dialog>\n\n          {/* Issues Dialog */}\n          <Dialog \n            open={issuesDialogOpen} \n            onClose={() => setIssuesDialogOpen(false)} \n            maxWidth=\"md\" \n            fullWidth\n          >\n            <DialogTitle>\n              {t('dashboard.openIssues', 'Open Issues')}\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => setIssuesDialogOpen(false)}\n                sx={{ position: 'absolute', right: 8, top: 8 }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('issue.title')}</TableCell>\n                      <TableCell>{t('project.name')}</TableCell>\n                      <TableCell>{t('issue.impact')}</TableCell>\n                      <TableCell>{t('issue.status')}</TableCell>\n                      <TableCell>{t('issue.createdAt')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {issues.filter(issue => issue.status === IssueStatus.OPEN || \n                                            issue.status === IssueStatus.IN_PROGRESS)\n                      .map((issue) => {\n                        const project = projects.find(p => p.id === issue.projectId);\n                        return (\n                          <TableRow key={issue.id}>\n                            <TableCell>{issue.title}</TableCell>\n                            <TableCell>{project?.name || t('common.noData')}</TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`issue.impact.${issue.impact.toLowerCase()}`)}\n                                size=\"small\"\n                                color={issue.impact === RiskImpact.HIGH ? 'error' : \n                                      issue.impact === RiskImpact.MEDIUM ? 'warning' : 'success'}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`issue.status.${issue.status.toLowerCase()}`)}\n                                size=\"small\"\n                              />\n                            </TableCell>\n                            <TableCell>{formatDate(issue.createdAt)}</TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n          </Dialog>\n        </Box>\n      </Container>\n    </ProjectProvider>\n  );\n};\n\nexport default DashboardPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}