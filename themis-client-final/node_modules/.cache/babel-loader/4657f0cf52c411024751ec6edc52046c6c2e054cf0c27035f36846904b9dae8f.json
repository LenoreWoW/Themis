{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL, AUTH_CONFIG } from '../config';\nimport { UserRole } from '../types';\nimport { jwtDecode } from 'jwt-decode';\n\n// Use the token storage key from config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_STORAGE_KEY = AUTH_CONFIG.TOKEN_STORAGE_KEY;\nconst AUTH_PRESERVE_KEY = 'themis_preserve_auth';\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const checkToken = () => {\n    const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp > currentTime) {\n          setIsLoading(false);\n\n          // Fetch user details using token\n          axios.get(`${API_BASE_URL}/users/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }).then(response => {\n            setUser(response.data);\n          }).catch(error => {\n            console.error('Error fetching user details:', error);\n            logout();\n          });\n        } else {\n          // Token expired\n          logout();\n        }\n      } catch (error) {\n        // Invalid token\n        console.error('Invalid token:', error);\n        logout();\n      }\n    } else {\n      // No token found in localStorage\n      // Check if we need to restore auth state after language change\n      const preservedAuthJson = sessionStorage.getItem(AUTH_PRESERVE_KEY);\n      if (preservedAuthJson) {\n        try {\n          const preservedAuth = JSON.parse(preservedAuthJson);\n          if (preservedAuth && preservedAuth.isPreserved) {\n            console.log('Found preserved auth state, restoring login...');\n            // Restore the user's login\n            login(preservedAuth.username);\n            // Remove the preserved state to prevent reuse\n            sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n            return;\n          }\n        } catch (error) {\n          console.error('Error parsing preserved auth state:', error);\n        }\n      }\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    const checkTokenAndSetUser = async () => {\n      checkToken();\n    };\n    checkTokenAndSetUser();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const login = async (adIdentifier, password = '') => {\n    setIsLoading(true);\n    console.log('Login attempt with username:', adIdentifier);\n    try {\n      // For pre-AD integration: create a mock successful login response\n      const mockResponse = {\n        userId: '1',\n        username: adIdentifier,\n        role: UserRole.ADMIN,\n        // Default to admin for testing\n        token: 'mock-jwt-token-' + Date.now(),\n        // Add timestamp to make it unique\n        success: true,\n        message: 'Login successful',\n        // Create a minimal user object to satisfy the interface requirement\n        user: {\n          id: '1',\n          username: adIdentifier,\n          firstName: adIdentifier,\n          lastName: 'User',\n          email: `${adIdentifier}@example.com`,\n          role: UserRole.ADMIN,\n          department: {\n            id: '',\n            name: 'Default Department',\n            description: 'Default Department Description',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          isActive: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }\n      };\n      console.log('Setting user:', mockResponse.user);\n      setUser(mockResponse.user);\n      console.log('Setting token:', mockResponse.token);\n      setToken(mockResponse.token);\n\n      // Store token in localStorage\n      localStorage.setItem(TOKEN_STORAGE_KEY, mockResponse.token);\n\n      // Navigate to dashboard\n      navigate('/');\n    } catch (error) {\n      console.error('Login error details:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(TOKEN_STORAGE_KEY);\n    sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n    navigate('/login');\n  };\n  const hasRole = roles => {\n    if (!user) return false;\n    if (Array.isArray(roles)) {\n      return roles.includes(user.role);\n    }\n    return user.role === roles;\n  };\n\n  // Role-specific helper properties\n  const isPending = hasRole(UserRole.PENDING);\n  const isProjectManager = hasRole(UserRole.PROJECT_MANAGER);\n  const isSubPmo = hasRole(UserRole.SUB_PMO);\n  const isMainPmo = hasRole(UserRole.MAIN_PMO);\n  const isDepartmentDirector = hasRole(UserRole.DEPARTMENT_DIRECTOR);\n  const isHigherManagement = hasRole(UserRole.EXECUTIVE);\n  const isAdmin = hasRole(UserRole.ADMIN);\n  const isMember = user !== null && user.role !== UserRole.PENDING;\n  const isAuthenticated = !!user && !!token;\n\n  // Role checking helpers\n  const isPM = (user === null || user === void 0 ? void 0 : user.role) === UserRole.PROJECT_MANAGER;\n  const isQA = false;\n\n  // Adding aliases for roles that components are trying to access\n  const isDirector = isDepartmentDirector;\n  const isExecutive = isHigherManagement;\n  const isMainPMO = isMainPmo;\n  const isSubPMO = isSubPmo;\n\n  // Check if user has one of the specified roles\n  const hasAccess = roles => {\n    if (!user) return false;\n    return roles.includes(user.role);\n  };\n  const contextValue = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    hasRole,\n    isPending,\n    isProjectManager,\n    isSubPmo,\n    isMainPmo,\n    isDepartmentDirector,\n    isHigherManagement,\n    isAdmin,\n    isMember,\n    isPM,\n    isQA,\n    isDirector,\n    isExecutive,\n    isMainPMO,\n    isSubPMO,\n    hasAccess,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"PVPSKTfWwyp4DehxzvF5isKx4uM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\n\n// Define roles hierarchy for ApprovalStatus\nexport let ApprovalStatus = /*#__PURE__*/function (ApprovalStatus) {\n  ApprovalStatus[\"DRAFT\"] = \"DRAFT\";\n  ApprovalStatus[\"SUBMITTED\"] = \"SUBMITTED\";\n  ApprovalStatus[\"SUB_PMO_REVIEW\"] = \"SUB_PMO_REVIEW\";\n  ApprovalStatus[\"SUB_PMO_APPROVED\"] = \"SUB_PMO_APPROVED\";\n  ApprovalStatus[\"MAIN_PMO_REVIEW\"] = \"MAIN_PMO_REVIEW\";\n  ApprovalStatus[\"MAIN_PMO_APPROVED\"] = \"MAIN_PMO_APPROVED\";\n  ApprovalStatus[\"APPROVED\"] = \"APPROVED\";\n  ApprovalStatus[\"REJECTED\"] = \"REJECTED\";\n  ApprovalStatus[\"CHANGES_REQUESTED\"] = \"CHANGES_REQUESTED\";\n  return ApprovalStatus;\n}({});\n\n// Define permission functions\nexport const canCreateProjects = userRole => {\n  if (!userRole) return false;\n  return [UserRole.ADMIN, UserRole.PROJECT_MANAGER, UserRole.MAIN_PMO, UserRole.SUB_PMO].includes(userRole);\n};\nexport const canEditProjects = (userRole, isOwnProject) => {\n  if (!userRole) return false;\n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Can edit all projects\n  }\n  if (userRole === UserRole.SUB_PMO) {\n    return true; // Can edit projects in their department\n  }\n  if (userRole === UserRole.PROJECT_MANAGER && isOwnProject) {\n    return true; // Project managers can only edit their own projects\n  }\n  return false;\n};\nexport const canApproveProjects = (userRole, isOwnProject) => {\n  if (!userRole) return false;\n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Final approval\n  }\n  if (userRole === UserRole.SUB_PMO && !isOwnProject) {\n    return true; // Sub PMOs can approve projects they don't own\n  }\n  return false;\n};\nexport const canRequestChanges = userRole => {\n  if (!userRole) return false;\n  return [UserRole.ADMIN, UserRole.PROJECT_MANAGER, UserRole.MAIN_PMO, UserRole.SUB_PMO, UserRole.TEAM_LEAD].includes(userRole);\n};\nexport const canViewAllProjects = userRole => {\n  if (!userRole) return false;\n  return [UserRole.ADMIN, UserRole.MAIN_PMO, UserRole.EXECUTIVE].includes(userRole);\n};\nexport const canViewDepartmentProjects = userRole => {\n  if (!userRole) return false;\n  return [UserRole.ADMIN, UserRole.MAIN_PMO, UserRole.SUB_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.EXECUTIVE].includes(userRole);\n};\n\n// Define the workflow for approvals\nexport const getNextApprovalStatus = (currentStatus, userRole, action) => {\n  if (!userRole) return null;\n  switch (currentStatus) {\n    case ApprovalStatus.DRAFT:\n      return ApprovalStatus.SUBMITTED;\n    case ApprovalStatus.SUBMITTED:\n      if (userRole === UserRole.SUB_PMO || userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.SUB_PMO_APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n    case ApprovalStatus.SUB_PMO_APPROVED:\n      if (userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n    case ApprovalStatus.CHANGES_REQUESTED:\n      return ApprovalStatus.SUBMITTED;\n    default:\n      return null;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","axios","API_BASE_URL","AUTH_CONFIG","UserRole","jwtDecode","jsxDEV","_jsxDEV","TOKEN_STORAGE_KEY","AUTH_PRESERVE_KEY","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","isLoading","setIsLoading","navigate","checkToken","localStorage","getItem","decodedToken","currentTime","Date","now","exp","get","headers","Authorization","then","response","data","catch","error","console","logout","preservedAuthJson","sessionStorage","preservedAuth","JSON","parse","isPreserved","log","login","username","removeItem","checkTokenAndSetUser","adIdentifier","password","mockResponse","userId","role","ADMIN","success","message","id","firstName","lastName","email","department","name","description","createdAt","toISOString","updatedAt","isActive","setItem","hasRole","roles","Array","isArray","includes","isPending","PENDING","isProjectManager","PROJECT_MANAGER","isSubPmo","SUB_PMO","isMainPmo","MAIN_PMO","isDepartmentDirector","DEPARTMENT_DIRECTOR","isHigherManagement","EXECUTIVE","isAdmin","isMember","isAuthenticated","isPM","isQA","isDirector","isExecutive","isMainPMO","isSubPMO","hasAccess","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ApprovalStatus","canCreateProjects","userRole","canEditProjects","isOwnProject","canApproveProjects","canRequestChanges","TEAM_LEAD","canViewAllProjects","canViewDepartmentProjects","getNextApprovalStatus","currentStatus","action","DRAFT","SUBMITTED","SUB_PMO_APPROVED","REJECTED","CHANGES_REQUESTED","APPROVED","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { API_BASE_URL, AUTH_CONFIG } from '../config';\nimport { User, UserRole, AuthResponse } from '../types';\nimport { jwtDecode } from 'jwt-decode';\n\n// Use the token storage key from config\nconst TOKEN_STORAGE_KEY = AUTH_CONFIG.TOKEN_STORAGE_KEY;\nconst AUTH_PRESERVE_KEY = 'themis_preserve_auth';\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  hasRole: (roles: UserRole | UserRole[]) => boolean;\n  isPending: boolean;\n  isProjectManager: boolean;\n  isSubPmo: boolean;\n  isMainPmo: boolean;\n  isDepartmentDirector: boolean;\n  isHigherManagement: boolean;\n  isAdmin: boolean;\n  isMember: boolean;\n  isPM: boolean;\n  isQA: boolean;\n  isDirector: boolean;\n  isExecutive: boolean;\n  isMainPMO: boolean;\n  isSubPMO: boolean;\n  hasAccess: (roles: UserRole[]) => boolean;\n  login: (adIdentifier: string, password?: string) => Promise<void>;\n  logout: () => void;\n}\n\ninterface JwtPayload {\n  exp: number;\n  userId: string;\n  username: string;\n  role: UserRole;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\ninterface PreservedAuthState {\n  isPreserved: boolean;\n  userId: string;\n  username: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const checkToken = () => {\n    const token = localStorage.getItem(TOKEN_STORAGE_KEY);\n\n    if (token) {\n      try {\n        const decodedToken = jwtDecode<JwtPayload>(token);\n        const currentTime = Date.now() / 1000;\n\n        if (decodedToken.exp > currentTime) {\n          setIsLoading(false);\n          \n          // Fetch user details using token\n          axios.get(`${API_BASE_URL}/users/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          })\n          .then(response => {\n            setUser(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching user details:', error);\n            logout();\n          });\n        } else {\n          // Token expired\n          logout();\n        }\n      } catch (error) {\n        // Invalid token\n        console.error('Invalid token:', error);\n        logout();\n      }\n    } else {\n      // No token found in localStorage\n      // Check if we need to restore auth state after language change\n      const preservedAuthJson = sessionStorage.getItem(AUTH_PRESERVE_KEY);\n      if (preservedAuthJson) {\n        try {\n          const preservedAuth = JSON.parse(preservedAuthJson) as PreservedAuthState;\n          if (preservedAuth && preservedAuth.isPreserved) {\n            console.log('Found preserved auth state, restoring login...');\n            // Restore the user's login\n            login(preservedAuth.username);\n            // Remove the preserved state to prevent reuse\n            sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n            return;\n          }\n        } catch (error) {\n          console.error('Error parsing preserved auth state:', error);\n        }\n      }\n      \n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const checkTokenAndSetUser = async () => {\n      checkToken();\n    };\n    \n    checkTokenAndSetUser();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const login = async (adIdentifier: string, password: string = '') => {\n    setIsLoading(true);\n    console.log('Login attempt with username:', adIdentifier);\n    \n    try {\n      // For pre-AD integration: create a mock successful login response\n      const mockResponse: AuthResponse = {\n        userId: '1',\n        username: adIdentifier,\n        role: UserRole.ADMIN, // Default to admin for testing\n        token: 'mock-jwt-token-' + Date.now(), // Add timestamp to make it unique\n        success: true,\n        message: 'Login successful',\n        // Create a minimal user object to satisfy the interface requirement\n        user: {\n          id: '1',\n          username: adIdentifier,\n          firstName: adIdentifier,\n          lastName: 'User',\n          email: `${adIdentifier}@example.com`,\n          role: UserRole.ADMIN,\n          department: {\n            id: '',\n            name: 'Default Department',\n            description: 'Default Department Description',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          isActive: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }\n      };\n      \n      console.log('Setting user:', mockResponse.user);\n      setUser(mockResponse.user);\n      console.log('Setting token:', mockResponse.token);\n      setToken(mockResponse.token);\n      \n      // Store token in localStorage\n      localStorage.setItem(TOKEN_STORAGE_KEY, mockResponse.token);\n      \n      // Navigate to dashboard\n      navigate('/');\n    } catch (error) {\n      console.error('Login error details:', error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(TOKEN_STORAGE_KEY);\n    sessionStorage.removeItem(AUTH_PRESERVE_KEY);\n    navigate('/login');\n  };\n\n  const hasRole = (roles: UserRole | UserRole[]) => {\n    if (!user) return false;\n    \n    if (Array.isArray(roles)) {\n      return roles.includes(user.role);\n    }\n    \n    return user.role === roles;\n  };\n\n  // Role-specific helper properties\n  const isPending = hasRole(UserRole.PENDING);\n  const isProjectManager = hasRole(UserRole.PROJECT_MANAGER);\n  const isSubPmo = hasRole(UserRole.SUB_PMO);\n  const isMainPmo = hasRole(UserRole.MAIN_PMO);\n  const isDepartmentDirector = hasRole(UserRole.DEPARTMENT_DIRECTOR);\n  const isHigherManagement = hasRole(UserRole.EXECUTIVE);\n  const isAdmin = hasRole(UserRole.ADMIN);\n  const isMember = user !== null && user.role !== UserRole.PENDING;\n  \n  const isAuthenticated = !!user && !!token;\n  \n  // Role checking helpers\n  const isPM = user?.role === UserRole.PROJECT_MANAGER;\n  const isQA = false;\n  \n  // Adding aliases for roles that components are trying to access\n  const isDirector = isDepartmentDirector;\n  const isExecutive = isHigherManagement;\n  const isMainPMO = isMainPmo;\n  const isSubPMO = isSubPmo;\n\n  // Check if user has one of the specified roles\n  const hasAccess = (roles: UserRole[]) => {\n    if (!user) return false;\n    return roles.includes(user.role);\n  };\n\n  const contextValue: AuthContextType = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    hasRole,\n    isPending,\n    isProjectManager,\n    isSubPmo,\n    isMainPmo,\n    isDepartmentDirector,\n    isHigherManagement,\n    isAdmin,\n    isMember,\n    isPM,\n    isQA,\n    isDirector,\n    isExecutive,\n    isMainPMO,\n    isSubPMO,\n    hasAccess,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContext;\n\n// Define roles hierarchy for ApprovalStatus\nexport enum ApprovalStatus {\n  DRAFT = 'DRAFT',\n  SUBMITTED = 'SUBMITTED',\n  SUB_PMO_REVIEW = 'SUB_PMO_REVIEW',\n  SUB_PMO_APPROVED = 'SUB_PMO_APPROVED',\n  MAIN_PMO_REVIEW = 'MAIN_PMO_REVIEW',\n  MAIN_PMO_APPROVED = 'MAIN_PMO_APPROVED',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  CHANGES_REQUESTED = 'CHANGES_REQUESTED'\n}\n\n// Define permission functions\nexport const canCreateProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.PROJECT_MANAGER,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO\n  ].includes(userRole as UserRole);\n};\n\nexport const canEditProjects = (userRole: UserRole | string | undefined, isOwnProject: boolean): boolean => {\n  if (!userRole) return false;\n  \n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Can edit all projects\n  }\n  \n  if (userRole === UserRole.SUB_PMO) {\n    return true; // Can edit projects in their department\n  }\n  \n  if (userRole === UserRole.PROJECT_MANAGER && isOwnProject) {\n    return true; // Project managers can only edit their own projects\n  }\n  \n  return false;\n};\n\nexport const canApproveProjects = (userRole: UserRole | string | undefined, isOwnProject: boolean): boolean => {\n  if (!userRole) return false;\n  \n  if (userRole === UserRole.ADMIN || userRole === UserRole.MAIN_PMO) {\n    return true; // Final approval\n  }\n  \n  if (userRole === UserRole.SUB_PMO && !isOwnProject) {\n    return true; // Sub PMOs can approve projects they don't own\n  }\n  \n  return false;\n};\n\nexport const canRequestChanges = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.PROJECT_MANAGER,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO,\n    UserRole.TEAM_LEAD\n  ].includes(userRole as UserRole);\n};\n\nexport const canViewAllProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.MAIN_PMO,\n    UserRole.EXECUTIVE\n  ].includes(userRole as UserRole);\n};\n\nexport const canViewDepartmentProjects = (userRole: UserRole | string | undefined): boolean => {\n  if (!userRole) return false;\n  \n  return [\n    UserRole.ADMIN,\n    UserRole.MAIN_PMO,\n    UserRole.SUB_PMO,\n    UserRole.DEPARTMENT_DIRECTOR,\n    UserRole.EXECUTIVE\n  ].includes(userRole as UserRole);\n};\n\n// Define the workflow for approvals\nexport const getNextApprovalStatus = (\n  currentStatus: ApprovalStatus, \n  userRole: UserRole | string | undefined, \n  action: 'APPROVE' | 'REJECT' | 'REQUEST_CHANGES'\n): ApprovalStatus | null => {\n  if (!userRole) return null;\n  \n  switch (currentStatus) {\n    case ApprovalStatus.DRAFT:\n      return ApprovalStatus.SUBMITTED;\n      \n    case ApprovalStatus.SUBMITTED:\n      if (userRole === UserRole.SUB_PMO || userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.SUB_PMO_APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n      \n    case ApprovalStatus.SUB_PMO_APPROVED:\n      if (userRole === UserRole.MAIN_PMO || userRole === UserRole.ADMIN) {\n        if (action === 'APPROVE') {\n          return ApprovalStatus.APPROVED;\n        } else if (action === 'REJECT') {\n          return ApprovalStatus.REJECTED;\n        } else if (action === 'REQUEST_CHANGES') {\n          return ApprovalStatus.CHANGES_REQUESTED;\n        }\n      }\n      return null;\n      \n    case ApprovalStatus.CHANGES_REQUESTED:\n      return ApprovalStatus.SUBMITTED;\n      \n    default:\n      return null;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}