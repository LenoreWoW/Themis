{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/ExecutiveDashboardPage.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Box, Typography, LinearProgress, Dialog, DialogTitle, DialogContent, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Chip, Container, Tooltip, CircularProgress, Button, Tabs, Tab } from '@mui/material';\nimport { Close as CloseIcon, Refresh as RefreshIcon, CloudDownload as DownloadIcon, Dashboard as DashboardIcon, BarChart as BarChartIcon } from '@mui/icons-material';\nimport { ProjectStatus, UserRole, TaskPriority, RiskStatus, IssueStatus, RiskImpact } from '../types';\nimport api from '../services/api';\nimport { useAuth } from '../hooks/useAuth';\nimport { formatDate, getStatusColor, getDashboardAccess } from '../utils/helpers';\nimport { ProjectProvider } from '../context/ProjectContext';\nimport AnalyticsDashboard from '../components/Analytics/AnalyticsDashboard';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MetricCard from '../components/common/MetricCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectDialog = ({\n  open,\n  onClose,\n  title,\n  projects\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [title, /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: onClose,\n        sx: {\n          position: 'absolute',\n          right: 8,\n          top: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('project.name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('project.status')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('project.progress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('project.dueDate')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('project.department')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: projects.map(project => {\n              var _project$department;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: project.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: t(`status.${project.status.toLowerCase()}`),\n                    size: \"small\",\n                    sx: {\n                      backgroundColor: getStatusColor(project.status, project.endDate),\n                      color: 'white'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      width: \"100%\",\n                      mr: 1,\n                      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                        variant: \"determinate\",\n                        value: project.progress,\n                        sx: {\n                          height: 8,\n                          borderRadius: 5,\n                          backgroundColor: '#e0e0e0',\n                          '& .MuiLinearProgress-bar': {\n                            backgroundColor: project.progress < 30 ? '#f44336' : project.progress < 70 ? '#fb8c00' : '#4caf50'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      minWidth: 35,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: `${Math.round(project.progress)}%`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: formatDate(project.endDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: ((_project$department = project.department) === null || _project$department === void 0 ? void 0 : _project$department.name) || t('common.noData')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, project.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDialog, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ProjectDialog;\nconst DashboardPage = () => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [risks, setRisks] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [selectedMetric, setSelectedMetric] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastRefresh, setLastRefresh] = useState(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    t\n  } = useTranslation();\n\n  // Set the initial tab value based on URL parameters\n  const tabParam = new URLSearchParams(location.search).get('tab');\n  const initialTabValue = tabParam === 'analytics' ? 1 : 0;\n  const [tabValue, setTabValue] = useState(initialTabValue);\n\n  // Get access permissions based on user role\n  const accessPermissions = useMemo(() => getDashboardAccess(user === null || user === void 0 ? void 0 : user.role), [user === null || user === void 0 ? void 0 : user.role]);\n\n  // Determine if user is an executive for customized UI\n  const isExecutive = (user === null || user === void 0 ? void 0 : user.role) === UserRole.EXECUTIVE || (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN;\n  const isDepartmentDirector = (user === null || user === void 0 ? void 0 : user.role) === UserRole.DEPARTMENT_DIRECTOR;\n\n  // Get dashboard title based on user role\n  const getDashboardTitle = () => {\n    var _user$department;\n    if (isExecutive) return t('dashboard.title');\n    if (isDepartmentDirector) return `${(user === null || user === void 0 ? void 0 : (_user$department = user.department) === null || _user$department === void 0 ? void 0 : _user$department.name) || t('project.department')} ${t('dashboard.title')}`;\n    if ((user === null || user === void 0 ? void 0 : user.role) === UserRole.PROJECT_MANAGER) return t('dashboard.pmDashboard', 'Project Manager Dashboard');\n    if ((user === null || user === void 0 ? void 0 : user.role) === UserRole.MAIN_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    if ((user === null || user === void 0 ? void 0 : user.role) === UserRole.SUB_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    return t('navigation.dashboard');\n  };\n\n  // New states for risks and issues dialogs\n  const [risksDialogOpen, setRisksDialogOpen] = useState(false);\n  const [issuesDialogOpen, setIssuesDialogOpen] = useState(false);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        setIsLoading(true);\n        const response = await api.projects.getAllProjects('');\n        if (response.data) {\n          let filteredProjects = response.data;\n\n          // Only filter projects if the user can't view all projects\n          if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user !== null && user !== void 0 && user.department) {\n            filteredProjects = filteredProjects.filter(project => {\n              var _project$department2, _user$department2;\n              return ((_project$department2 = project.department) === null || _project$department2 === void 0 ? void 0 : _project$department2.id) === ((_user$department2 = user.department) === null || _user$department2 === void 0 ? void 0 : _user$department2.id);\n            });\n          } else if (!accessPermissions.canViewAllProjects && (user === null || user === void 0 ? void 0 : user.role) === UserRole.PROJECT_MANAGER) {\n            filteredProjects = filteredProjects.filter(project => {\n              var _project$projectManag;\n              return ((_project$projectManag = project.projectManager) === null || _project$projectManag === void 0 ? void 0 : _project$projectManag.id) === user.id;\n            });\n          }\n          setProjects(filteredProjects);\n\n          // Fetch risks and issues\n          const risksPromises = filteredProjects.map(project => api.risks.getAllRisks(project.id, ''));\n          const issuesPromises = filteredProjects.map(project => api.issues.getAllIssues(project.id, ''));\n          const risksResponses = await Promise.all(risksPromises);\n          const issuesResponses = await Promise.all(issuesPromises);\n          const allRisks = risksResponses.filter(response => response.data).flatMap(response => response.data || []);\n          const allIssues = issuesResponses.filter(response => response.data).flatMap(response => response.data || []);\n          setRisks(allRisks);\n          setIssues(allIssues);\n\n          // Update last refresh time\n          setLastRefresh(new Date());\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProjects();\n  }, [accessPermissions.canViewAllProjects, isDepartmentDirector, user === null || user === void 0 ? void 0 : user.department, user === null || user === void 0 ? void 0 : user.id, user === null || user === void 0 ? void 0 : user.role]);\n  const metrics = useMemo(() => {\n    const now = new Date();\n    const twoWeeksFromNow = new Date();\n    twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n    const inProgressProjects = projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n    const completedProjects = projects.filter(project => project.status === ProjectStatus.COMPLETED);\n    const onHoldProjects = projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n    const overdueProjects = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate < now && project.status !== ProjectStatus.COMPLETED;\n    });\n    const approachingDeadline = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n    });\n    const openRisksCount = risks.filter(risk => risk.status === RiskStatus.IDENTIFIED || risk.status === RiskStatus.ASSESSED || risk.impact === RiskImpact.HIGH || risk.impact === RiskImpact.CRITICAL).length;\n    const openIssuesCount = issues.filter(issue => issue.status === IssueStatus.OPEN || issue.status === IssueStatus.IN_PROGRESS).length;\n\n    // Calculate budget metrics\n    const totalBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0);\n    const totalActualCost = projects.reduce((sum, project) => sum + (project.actualCost || 0), 0);\n    const remainingBudget = totalBudget - totalActualCost;\n    return {\n      totalProjects: projects.length,\n      inProgress: inProgressProjects.length,\n      completed: completedProjects.length,\n      onHold: onHoldProjects.length,\n      overdue: overdueProjects.length,\n      approachingDeadline: approachingDeadline.length,\n      openRisks: openRisksCount,\n      openIssues: openIssuesCount,\n      totalBudget,\n      totalActualCost,\n      remainingBudget\n    };\n  }, [projects, risks, issues]);\n  const getFilteredProjects = metricType => {\n    switch (metricType) {\n      case 'totalProjects':\n        return projects;\n      case 'inProgress':\n        return projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n      case 'completed':\n        return projects.filter(project => project.status === ProjectStatus.COMPLETED);\n      case 'onHold':\n        return projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n      case 'overdue':\n        const today = new Date();\n        return projects.filter(project => {\n          const endDate = new Date(project.endDate);\n          return endDate < today && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'approachingDeadline':\n        const now = new Date();\n        const twoWeeksFromNow = new Date();\n        twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n        return projects.filter(project => {\n          const dueDate = new Date(project.endDate);\n          return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'highBudget':\n        // Projects with budget above average\n        const avgBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0) / projects.length;\n        return projects.filter(project => (project.budget || 0) > avgBudget);\n      case 'overBudget':\n        // Projects that have exceeded their budget\n        return projects.filter(project => (project.actualCost || 0) > (project.budget || 0));\n      case 'underBudget':\n        // Projects that are under budget\n        return projects.filter(project => project.status !== ProjectStatus.COMPLETED && (project.actualCost || 0) < (project.budget || 0));\n      case 'totalActualCost':\n        // Sort projects by actual cost (highest first)\n        return [...projects].filter(project => project.actualCost && project.actualCost > 0).sort((a, b) => (b.actualCost || 0) - (a.actualCost || 0));\n      default:\n        return [];\n    }\n  };\n  const handleMetricClick = metricType => {\n    console.log(\"Metric clicked:\", metricType);\n\n    // Check if the metric type is valid\n    if (!metricType) {\n      console.error(\"Invalid metric type:\", metricType);\n      return;\n    }\n\n    // Get the filtered projects for this metric\n    const filteredProjects = getFilteredProjects(metricType);\n    console.log(`Found ${filteredProjects.length} projects for ${metricType}`);\n\n    // Set the selected metric and open the dialog\n    setSelectedMetric(metricType);\n    setDialogOpen(true);\n  };\n  const handleRefresh = async () => {\n    try {\n      setIsLoading(true);\n      const response = await api.projects.getAllProjects('');\n      if (response.data) {\n        // Process and update projects\n        let filteredProjects = response.data;\n\n        // Update with same filtering logic as above\n        if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user !== null && user !== void 0 && user.department) {\n          filteredProjects = filteredProjects.filter(project => {\n            var _project$department3, _user$department3;\n            return ((_project$department3 = project.department) === null || _project$department3 === void 0 ? void 0 : _project$department3.id) === ((_user$department3 = user.department) === null || _user$department3 === void 0 ? void 0 : _user$department3.id);\n          });\n        } else if (!accessPermissions.canViewAllProjects && (user === null || user === void 0 ? void 0 : user.role) === UserRole.PROJECT_MANAGER) {\n          filteredProjects = filteredProjects.filter(project => {\n            var _project$projectManag2;\n            return ((_project$projectManag2 = project.projectManager) === null || _project$projectManag2 === void 0 ? void 0 : _project$projectManag2.id) === user.id;\n          });\n        }\n        setProjects(filteredProjects);\n\n        // Refresh risks and issues\n        await Promise.all(filteredProjects.map(async project => {\n          // Refresh risks\n          const risksResponse = await api.risks.getAllRisks(project.id, '');\n          if (risksResponse.data) {\n            setRisks(prev => {\n              // Filter out risks for this project\n              const filtered = prev.filter(risk => risk.projectId !== project.id);\n              // Add updated risks\n              return [...filtered, ...(risksResponse.data || [])];\n            });\n          }\n\n          // Refresh issues\n          const issuesResponse = await api.issues.getAllIssues(project.id, '');\n          if (issuesResponse.data) {\n            setIssues(prev => {\n              // Filter out issues for this project\n              const filtered = prev.filter(issue => issue.projectId !== project.id);\n              // Add updated issues\n              return [...filtered, ...(issuesResponse.data || [])];\n            });\n          }\n        }));\n\n        // Update last refresh time\n        setLastRefresh(new Date());\n      }\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleNavigateToRisks = (type = 'risks') => {\n    if (type === 'risks') {\n      setRisksDialogOpen(true);\n    } else {\n      setIssuesDialogOpen(true);\n    }\n  };\n  const handleExportReport = () => {\n    // In a real app, this would trigger a report generation\n    console.log('Exporting dashboard report');\n    alert('Report exported successfully');\n  };\n  const getDialogTitle = metricType => {\n    switch (metricType) {\n      case 'totalProjects':\n        return t('dashboard.allProjects', 'All Projects');\n      case 'inProgress':\n        return t('dashboard.inProgressProjects', 'In Progress Projects');\n      case 'completed':\n        return t('dashboard.completedProjects', 'Completed Projects');\n      case 'onHold':\n        return t('dashboard.onHoldProjects', 'On Hold Projects');\n      case 'overdue':\n        return t('dashboard.overdueProjects', 'Overdue Projects');\n      case 'approachingDeadline':\n        return t('dashboard.approachingDeadline', 'Projects Approaching Deadline');\n      case 'highBudget':\n        return t('dashboard.highBudgetProjects', 'Projects with Above Average Budget');\n      case 'overBudget':\n        return t('dashboard.overBudgetProjects', 'Projects Over Budget');\n      case 'underBudget':\n        return t('dashboard.underBudgetProjects', 'Projects Under Budget');\n      case 'totalActualCost':\n        return t('dashboard.projectsByActualCost', 'Projects by Actual Cost');\n      default:\n        return t('dashboard.filteredProjects', 'Filtered Projects');\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n\n    // Update URL when switching tabs\n    if (newValue === 1) {\n      navigate('/dashboard?tab=analytics', {\n        replace: true\n      });\n    } else {\n      navigate('/dashboard', {\n        replace: true\n      });\n    }\n  };\n\n  // Update tab when URL changes\n  useEffect(() => {\n    const tabParam = new URLSearchParams(location.search).get('tab');\n    if (tabParam === 'analytics' && tabValue !== 1) {\n      setTabValue(1);\n    } else if (!tabParam && tabValue !== 0) {\n      setTabValue(0);\n    }\n  }, [location, tabValue]);\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  const renderDashboardContent = () => {\n    switch (tabValue) {\n      case 0:\n        // Dashboard tab\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                mb: 2\n              },\n              children: \"KPIs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Total Projects\",\n                  value: metrics.totalProjects,\n                  color: \"primary\",\n                  progress: 100,\n                  onClick: () => handleMetricClick('totalProjects')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"In Progress Projects\",\n                  value: metrics.inProgress,\n                  color: \"info\",\n                  progress: Math.round(metrics.inProgress / metrics.totalProjects * 100),\n                  onClick: () => handleMetricClick('inProgress')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Completed Projects\",\n                  value: metrics.completed,\n                  color: \"success\",\n                  progress: Math.round(metrics.completed / metrics.totalProjects * 100),\n                  onClick: () => handleMetricClick('completed')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"On Hold Projects\",\n                  value: metrics.onHold,\n                  color: \"warning\",\n                  progress: Math.round(metrics.onHold / metrics.totalProjects * 100),\n                  onClick: () => handleMetricClick('onHold')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"High Priority Risks\",\n                  value: metrics.openRisks,\n                  color: \"error\",\n                  progress: Math.round(metrics.openRisks / metrics.totalProjects * 100),\n                  onClick: () => handleNavigateToRisks('risks')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Open Issues\",\n                  value: metrics.openIssues,\n                  color: \"error\",\n                  progress: Math.round(metrics.openIssues / metrics.totalProjects * 100),\n                  onClick: () => handleNavigateToRisks('issues')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                mb: 2\n              },\n              children: \"Budget Metrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Total Budget Estimated\",\n                  value: `$${metrics.totalBudget.toLocaleString()}`,\n                  color: \"primary\",\n                  progress: 100,\n                  onClick: () => handleMetricClick('highBudget')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Total Actual Cost\",\n                  value: `$${metrics.totalActualCost.toLocaleString()}`,\n                  color: metrics.totalActualCost > metrics.totalBudget ? 'error' : 'info',\n                  progress: Math.round(metrics.totalActualCost / metrics.totalBudget * 100),\n                  onClick: () => handleMetricClick('totalActualCost')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: '1 1 300px'\n                },\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  title: \"Remaining Budget\",\n                  value: `$${metrics.remainingBudget.toLocaleString()}`,\n                  color: metrics.remainingBudget < 0 ? 'error' : 'success',\n                  progress: Math.round(metrics.remainingBudget / metrics.totalBudget * 100),\n                  subtitle: metrics.remainingBudget < 0 ? 'Budget Overrun' : '',\n                  onClick: () => handleMetricClick('underBudget')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 1:\n        // Analytics tab\n        return /*#__PURE__*/_jsxDEV(AnalyticsDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectProvider, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 3,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: getDashboardTitle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [accessPermissions.canExportReports && /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 30\n              }, this),\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: handleExportReport,\n              children: t('dashboard.export')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              children: [t('dashboard.lastUpdated'), \": \", lastRefresh.toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: t('dashboard.refresh'),\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleRefresh,\n                disabled: isLoading,\n                children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 32\n                }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 65\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider',\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tabValue,\n            onChange: handleTabChange,\n            \"aria-label\": \"dashboard tabs\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: t('navigation.dashboard'),\n              id: \"tab-0\",\n              \"aria-controls\": \"tabpanel-0\",\n              icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 23\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: t('dashboard.analytics', 'Analytics'),\n              id: \"tab-1\",\n              \"aria-controls\": \"tabpanel-1\",\n              icon: /*#__PURE__*/_jsxDEV(BarChartIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 23\n              }, this),\n              iconPosition: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), renderDashboardContent(), selectedMetric && /*#__PURE__*/_jsxDEV(ProjectDialog, {\n          open: dialogOpen,\n          onClose: () => setDialogOpen(false),\n          title: getDialogTitle(selectedMetric),\n          projects: getFilteredProjects(selectedMetric)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: risksDialogOpen,\n          onClose: () => setRisksDialogOpen(false),\n          maxWidth: \"md\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [t('dashboard.highPriorityRisks', 'High Priority Risks'), /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: () => setRisksDialogOpen(false),\n              sx: {\n                position: 'absolute',\n                right: 8,\n                top: 8\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('risk.title')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('project.name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('risk.impact')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('risk.status')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('risk.createdAt')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: risks.filter(risk => risk.status === RiskStatus.IDENTIFIED || risk.status === RiskStatus.ANALYZING || risk.status === RiskStatus.MONITORED).map(risk => {\n                    const project = projects.find(p => p.id === risk.projectId);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: risk.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 727,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: (project === null || project === void 0 ? void 0 : project.name) || t('common.noData')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 728,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: t(`risk.impact.${risk.impact.toLowerCase()}`),\n                          size: \"small\",\n                          color: risk.impact === RiskImpact.HIGH ? 'error' : risk.impact === RiskImpact.MEDIUM ? 'warning' : 'success'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 730,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: t(`risk.status.${risk.status.toLowerCase()}`),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 738,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: formatDate(risk.createdAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 743,\n                        columnNumber: 29\n                      }, this)]\n                    }, risk.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: issuesDialogOpen,\n          onClose: () => setIssuesDialogOpen(false),\n          maxWidth: \"md\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: [t('dashboard.openIssues', 'Open Issues'), /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: () => setIssuesDialogOpen(false),\n              sx: {\n                position: 'absolute',\n                right: 8,\n                top: 8\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('issue.title')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 775,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('project.name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 776,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('issue.impact')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 777,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('issue.status')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 778,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: t('issue.createdAt')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 779,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: issues.filter(issue => issue.status === IssueStatus.OPEN || issue.status === IssueStatus.IN_PROGRESS).map(issue => {\n                    const project = projects.find(p => p.id === issue.projectId);\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: issue.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 789,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: (project === null || project === void 0 ? void 0 : project.name) || t('common.noData')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 790,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: t(`issue.impact.${issue.impact.toLowerCase()}`),\n                          size: \"small\",\n                          color: issue.impact === RiskImpact.HIGH ? 'error' : issue.impact === RiskImpact.MEDIUM ? 'warning' : 'success'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 792,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 791,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: t(`issue.status.${issue.status.toLowerCase()}`),\n                          size: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 800,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 799,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: formatDate(issue.createdAt)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 29\n                      }, this)]\n                    }, issue.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 788,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 625,\n    columnNumber: 5\n  }, this);\n};\n_s2(DashboardPage, \"9vu8jTubR/oW6DjyhzfLdmtRbrA=\", false, function () {\n  return [useAuth, useNavigate, useLocation, useTranslation];\n});\n_c2 = DashboardPage;\nexport default DashboardPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectDialog\");\n$RefreshReg$(_c2, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Box","Typography","LinearProgress","Dialog","DialogTitle","DialogContent","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","Container","Tooltip","CircularProgress","Button","Tabs","Tab","Close","CloseIcon","Refresh","RefreshIcon","CloudDownload","DownloadIcon","Dashboard","DashboardIcon","BarChart","BarChartIcon","ProjectStatus","UserRole","TaskPriority","RiskStatus","IssueStatus","RiskImpact","api","useAuth","formatDate","getStatusColor","getDashboardAccess","ProjectProvider","AnalyticsDashboard","useNavigate","useLocation","useTranslation","MetricCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectDialog","open","onClose","title","projects","_s","t","maxWidth","fullWidth","children","onClick","sx","position","right","top","fileName","_jsxFileName","lineNumber","columnNumber","component","map","project","_project$department","name","label","status","toLowerCase","size","backgroundColor","endDate","color","display","alignItems","width","mr","variant","value","progress","height","borderRadius","minWidth","Math","round","department","id","_c","DashboardPage","_s2","user","setProjects","risks","setRisks","issues","setIssues","selectedMetric","setSelectedMetric","dialogOpen","setDialogOpen","isLoading","setIsLoading","lastRefresh","setLastRefresh","Date","navigate","location","tabParam","URLSearchParams","search","get","initialTabValue","tabValue","setTabValue","accessPermissions","role","isExecutive","EXECUTIVE","ADMIN","isDepartmentDirector","DEPARTMENT_DIRECTOR","getDashboardTitle","_user$department","PROJECT_MANAGER","MAIN_PMO","SUB_PMO","risksDialogOpen","setRisksDialogOpen","issuesDialogOpen","setIssuesDialogOpen","fetchProjects","response","getAllProjects","data","filteredProjects","canViewAllProjects","filter","_project$department2","_user$department2","_project$projectManag","projectManager","risksPromises","getAllRisks","issuesPromises","getAllIssues","risksResponses","Promise","all","issuesResponses","allRisks","flatMap","allIssues","error","console","metrics","now","twoWeeksFromNow","setDate","getDate","inProgressProjects","IN_PROGRESS","completedProjects","COMPLETED","onHoldProjects","ON_HOLD","overdueProjects","dueDate","approachingDeadline","openRisksCount","risk","IDENTIFIED","ASSESSED","impact","HIGH","CRITICAL","length","openIssuesCount","issue","OPEN","totalBudget","reduce","sum","budget","totalActualCost","actualCost","remainingBudget","totalProjects","inProgress","completed","onHold","overdue","openRisks","openIssues","getFilteredProjects","metricType","today","avgBudget","sort","a","b","handleMetricClick","log","handleRefresh","_project$department3","_user$department3","_project$projectManag2","risksResponse","prev","filtered","projectId","issuesResponse","handleNavigateToRisks","type","handleExportReport","alert","getDialogTitle","handleTabChange","event","newValue","replace","getPriorityColor","priority","MEDIUM","LOW","renderDashboardContent","mb","flexWrap","gap","flex","toLocaleString","subtitle","py","justifyContent","gutterBottom","canExportReports","startIcon","toLocaleTimeString","disabled","borderBottom","borderColor","onChange","icon","iconPosition","ANALYZING","MONITORED","find","p","createdAt","_c2","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/ExecutiveDashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  LinearProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Chip,\n  Container,\n  Stack,\n  Divider,\n  Tooltip,\n  CircularProgress,\n  Button,\n  Alert,\n  Tabs,\n  Tab\n} from '@mui/material';\nimport { \n  Close as CloseIcon,\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  Refresh as RefreshIcon,\n  CloudDownload as DownloadIcon,\n  Assignment as AssignmentIcon,\n  Dashboard as DashboardIcon,\n  BarChart as BarChartIcon\n} from '@mui/icons-material';\nimport { Project, ProjectStatus, UserRole, Assignment, AssignmentStatus, TaskPriority, RiskStatus, IssueStatus, Risk, Issue, RiskImpact } from '../types';\nimport api from '../services/api';\nimport { useAuth } from '../hooks/useAuth';\nimport { formatDate, getStatusColor, getDashboardAccess } from '../utils/helpers';\nimport { ProjectProvider } from '../context/ProjectContext';\nimport AnalyticsDashboard from '../components/Analytics/AnalyticsDashboard';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MetricCard from '../components/common/MetricCard';\n\ninterface DashboardMetrics {\n  totalProjects: number;\n  inProgress: number;\n  completed: number;\n  onHold: number;\n  overdue: number;\n  approachingDeadline: number;\n  openRisks: number;\n  openIssues: number;\n  totalBudget: number;\n  totalActualCost: number;\n  remainingBudget: number;\n}\n\ninterface ProjectDialogProps {\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  projects: Project[];\n}\n\ninterface AssignmentItem {\n  id: string;\n  title: string;\n  description: string;\n  priority: TaskPriority;\n  status: AssignmentStatus;\n  dueDate: string;\n  assignedBy: {\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst ProjectDialog: React.FC<ProjectDialogProps> = ({ open, onClose, title, projects }) => {\n  const { t } = useTranslation();\n  \n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>\n        {title}\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{ position: 'absolute', right: 8, top: 8 }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>{t('project.name')}</TableCell>\n                <TableCell>{t('project.status')}</TableCell>\n                <TableCell>{t('project.progress')}</TableCell>\n                <TableCell>{t('project.dueDate')}</TableCell>\n                <TableCell>{t('project.department')}</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map((project: Project) => (\n                <TableRow key={project.id}>\n                  <TableCell>{project.name}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={t(`status.${project.status.toLowerCase()}`)}\n                      size=\"small\"\n                      sx={{ backgroundColor: getStatusColor(project.status, project.endDate), color: 'white' }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Box width=\"100%\" mr={1}>\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={project.progress}\n                          sx={{\n                            height: 8,\n                            borderRadius: 5,\n                            backgroundColor: '#e0e0e0',\n                            '& .MuiLinearProgress-bar': {\n                              backgroundColor: project.progress < 30 ? '#f44336' :\n                                project.progress < 70 ? '#fb8c00' : '#4caf50',\n                            },\n                          }}\n                        />\n                      </Box>\n                      <Box minWidth={35}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {`${Math.round(project.progress)}%`}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>{formatDate(project.endDate)}</TableCell>\n                  <TableCell>{project.department?.name || t('common.noData')}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst DashboardPage: React.FC = () => {\n  const { user } = useAuth();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [risks, setRisks] = useState<Risk[]>([]);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const [selectedMetric, setSelectedMetric] = useState<string | null>(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastRefresh, setLastRefresh] = useState<Date>(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation();\n  \n  // Set the initial tab value based on URL parameters\n  const tabParam = new URLSearchParams(location.search).get('tab');\n  const initialTabValue = tabParam === 'analytics' ? 1 : 0;\n  const [tabValue, setTabValue] = useState(initialTabValue);\n  \n  // Get access permissions based on user role\n  const accessPermissions = useMemo(() => \n    getDashboardAccess(user?.role as UserRole),\n  [user?.role]);\n\n  // Determine if user is an executive for customized UI\n  const isExecutive = user?.role === UserRole.EXECUTIVE || user?.role === UserRole.ADMIN;\n  const isDepartmentDirector = user?.role === UserRole.DEPARTMENT_DIRECTOR;\n  \n  // Get dashboard title based on user role\n  const getDashboardTitle = () => {\n    if (isExecutive) return t('dashboard.title');\n    if (isDepartmentDirector) return `${user?.department?.name || t('project.department')} ${t('dashboard.title')}`;\n    if (user?.role === UserRole.PROJECT_MANAGER) return t('dashboard.pmDashboard', 'Project Manager Dashboard');\n    if (user?.role === UserRole.MAIN_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    if (user?.role === UserRole.SUB_PMO) return t('dashboard.pmoDashboard', 'PMO Dashboard');\n    return t('navigation.dashboard');\n  };\n\n  // New states for risks and issues dialogs\n  const [risksDialogOpen, setRisksDialogOpen] = useState(false);\n  const [issuesDialogOpen, setIssuesDialogOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        setIsLoading(true);\n        const response = await api.projects.getAllProjects('');\n        if (response.data) {\n          let filteredProjects = response.data;\n          \n          // Only filter projects if the user can't view all projects\n          if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user?.department) {\n            filteredProjects = filteredProjects.filter((project: Project) => \n              project.department?.id === user.department?.id\n            );\n          } else if (!accessPermissions.canViewAllProjects && user?.role === UserRole.PROJECT_MANAGER) {\n            filteredProjects = filteredProjects.filter((project: Project) => \n              project.projectManager?.id === user.id\n            );\n          }\n          \n          setProjects(filteredProjects);\n          \n          // Fetch risks and issues\n          const risksPromises = filteredProjects.map((project: Project) => \n            api.risks.getAllRisks(project.id, '')\n          );\n          \n          const issuesPromises = filteredProjects.map((project: Project) => \n            api.issues.getAllIssues(project.id, '')\n          );\n          \n          const risksResponses = await Promise.all(risksPromises);\n          const issuesResponses = await Promise.all(issuesPromises);\n          \n          const allRisks = risksResponses\n            .filter(response => response.data)\n            .flatMap(response => response.data || []);\n            \n          const allIssues = issuesResponses\n            .filter(response => response.data)\n            .flatMap(response => response.data || []);\n          \n          setRisks(allRisks);\n          setIssues(allIssues);\n          \n          // Update last refresh time\n          setLastRefresh(new Date());\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchProjects();\n  }, [\n    accessPermissions.canViewAllProjects,\n    isDepartmentDirector,\n    user?.department,\n    user?.id,\n    user?.role\n  ]);\n\n  const metrics = useMemo(() => {\n    const now = new Date();\n    const twoWeeksFromNow = new Date();\n    twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n    \n    const inProgressProjects = projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n    const completedProjects = projects.filter(project => project.status === ProjectStatus.COMPLETED);\n    const onHoldProjects = projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n    const overdueProjects = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate < now && project.status !== ProjectStatus.COMPLETED;\n    });\n    const approachingDeadline = projects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n    });\n    \n    const openRisksCount = risks.filter(risk => \n      risk.status === RiskStatus.IDENTIFIED || \n      risk.status === RiskStatus.ASSESSED ||\n      risk.impact === RiskImpact.HIGH ||\n      risk.impact === RiskImpact.CRITICAL\n    ).length;\n    \n    const openIssuesCount = issues.filter(issue => \n      issue.status === IssueStatus.OPEN || \n      issue.status === IssueStatus.IN_PROGRESS\n    ).length;\n    \n    // Calculate budget metrics\n    const totalBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0);\n    const totalActualCost = projects.reduce((sum, project) => sum + (project.actualCost || 0), 0);\n    const remainingBudget = totalBudget - totalActualCost;\n\n    return {\n      totalProjects: projects.length,\n      inProgress: inProgressProjects.length,\n      completed: completedProjects.length,\n      onHold: onHoldProjects.length,\n      overdue: overdueProjects.length,\n      approachingDeadline: approachingDeadline.length,\n      openRisks: openRisksCount,\n      openIssues: openIssuesCount,\n      totalBudget,\n      totalActualCost,\n      remainingBudget\n    };\n  }, [projects, risks, issues]);\n\n  const getFilteredProjects = (metricType: string): Project[] => {\n    switch (metricType) {\n      case 'totalProjects':\n        return projects;\n      case 'inProgress':\n        return projects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n      case 'completed':\n        return projects.filter(project => project.status === ProjectStatus.COMPLETED);\n      case 'onHold':\n        return projects.filter(project => project.status === ProjectStatus.ON_HOLD);\n      case 'overdue':\n        const today = new Date();\n        return projects.filter(project => {\n          const endDate = new Date(project.endDate);\n          return endDate < today && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'approachingDeadline':\n        const now = new Date();\n        const twoWeeksFromNow = new Date();\n        twoWeeksFromNow.setDate(twoWeeksFromNow.getDate() + 14);\n        return projects.filter(project => {\n          const dueDate = new Date(project.endDate);\n          return dueDate > now && dueDate < twoWeeksFromNow && project.status !== ProjectStatus.COMPLETED;\n        });\n      case 'highBudget':\n        // Projects with budget above average\n        const avgBudget = projects.reduce((sum, project) => sum + (project.budget || 0), 0) / projects.length;\n        return projects.filter(project => (project.budget || 0) > avgBudget);\n      case 'overBudget':\n        // Projects that have exceeded their budget\n        return projects.filter(project => (project.actualCost || 0) > (project.budget || 0));\n      case 'underBudget':\n        // Projects that are under budget\n        return projects.filter(project => \n          project.status !== ProjectStatus.COMPLETED && \n          (project.actualCost || 0) < (project.budget || 0)\n        );\n      case 'totalActualCost':\n        // Sort projects by actual cost (highest first)\n        return [...projects]\n          .filter(project => project.actualCost && project.actualCost > 0)\n          .sort((a, b) => (b.actualCost || 0) - (a.actualCost || 0));\n      default:\n        return [];\n    }\n  };\n\n  const handleMetricClick = (metricType: string) => {\n    console.log(\"Metric clicked:\", metricType);\n    \n    // Check if the metric type is valid\n    if (!metricType) {\n      console.error(\"Invalid metric type:\", metricType);\n      return;\n    }\n    \n    // Get the filtered projects for this metric\n    const filteredProjects = getFilteredProjects(metricType);\n    console.log(`Found ${filteredProjects.length} projects for ${metricType}`);\n    \n    // Set the selected metric and open the dialog\n    setSelectedMetric(metricType);\n    setDialogOpen(true);\n  };\n\n  const handleRefresh = async () => {\n    try {\n      setIsLoading(true);\n      const response = await api.projects.getAllProjects('');\n      if (response.data) {\n        // Process and update projects\n        let filteredProjects = response.data;\n        \n        // Update with same filtering logic as above\n        if (!accessPermissions.canViewAllProjects && isDepartmentDirector && user?.department) {\n          filteredProjects = filteredProjects.filter((project: Project) => \n            project.department?.id === user.department?.id\n          );\n        } else if (!accessPermissions.canViewAllProjects && user?.role === UserRole.PROJECT_MANAGER) {\n          filteredProjects = filteredProjects.filter((project: Project) => \n            project.projectManager?.id === user.id\n          );\n        }\n        \n        setProjects(filteredProjects);\n        \n        // Refresh risks and issues\n        await Promise.all(filteredProjects.map(async (project: Project) => {\n          // Refresh risks\n          const risksResponse = await api.risks.getAllRisks(project.id, '');\n          if (risksResponse.data) {\n            setRisks(prev => {\n              // Filter out risks for this project\n              const filtered = prev.filter(risk => risk.projectId !== project.id);\n              // Add updated risks\n              return [...filtered, ...(risksResponse.data || [])];\n            });\n          }\n          \n          // Refresh issues\n          const issuesResponse = await api.issues.getAllIssues(project.id, '');\n          if (issuesResponse.data) {\n            setIssues(prev => {\n              // Filter out issues for this project\n              const filtered = prev.filter(issue => issue.projectId !== project.id);\n              // Add updated issues\n              return [...filtered, ...(issuesResponse.data || [])];\n            });\n          }\n        }));\n        \n        // Update last refresh time\n        setLastRefresh(new Date());\n      }\n    } catch (error) {\n      console.error('Error refreshing data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleNavigateToRisks = (type: 'risks' | 'issues' = 'risks') => {\n    if (type === 'risks') {\n      setRisksDialogOpen(true);\n    } else {\n      setIssuesDialogOpen(true);\n    }\n  };\n\n  const handleExportReport = () => {\n    // In a real app, this would trigger a report generation\n    console.log('Exporting dashboard report');\n    alert('Report exported successfully');\n  };\n\n  const getDialogTitle = (metricType: string): string => {\n    switch (metricType) {\n      case 'totalProjects':\n        return t('dashboard.allProjects', 'All Projects');\n      case 'inProgress':\n        return t('dashboard.inProgressProjects', 'In Progress Projects');\n      case 'completed':\n        return t('dashboard.completedProjects', 'Completed Projects');\n      case 'onHold':\n        return t('dashboard.onHoldProjects', 'On Hold Projects');\n      case 'overdue':\n        return t('dashboard.overdueProjects', 'Overdue Projects');\n      case 'approachingDeadline':\n        return t('dashboard.approachingDeadline', 'Projects Approaching Deadline');\n      case 'highBudget':\n        return t('dashboard.highBudgetProjects', 'Projects with Above Average Budget');\n      case 'overBudget':\n        return t('dashboard.overBudgetProjects', 'Projects Over Budget');\n      case 'underBudget':\n        return t('dashboard.underBudgetProjects', 'Projects Under Budget');\n      case 'totalActualCost':\n        return t('dashboard.projectsByActualCost', 'Projects by Actual Cost');\n      default:\n        return t('dashboard.filteredProjects', 'Filtered Projects');\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n    \n    // Update URL when switching tabs\n    if (newValue === 1) {\n      navigate('/dashboard?tab=analytics', { replace: true });\n    } else {\n      navigate('/dashboard', { replace: true });\n    }\n  };\n\n  // Update tab when URL changes\n  useEffect(() => {\n    const tabParam = new URLSearchParams(location.search).get('tab');\n    if (tabParam === 'analytics' && tabValue !== 1) {\n      setTabValue(1);\n    } else if (!tabParam && tabValue !== 0) {\n      setTabValue(0);\n    }\n  }, [location, tabValue]);\n\n  const getPriorityColor = (priority: TaskPriority) => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const renderDashboardContent = () => {\n    switch (tabValue) {\n      case 0: // Dashboard tab\n        return (\n          <>\n            {/* KPI Section - Show complete KPI section for executives and admins */}\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\n                KPIs\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Projects\"\n                    value={metrics.totalProjects}\n                    color=\"primary\"\n                    progress={100}\n                    onClick={() => handleMetricClick('totalProjects')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"In Progress Projects\"\n                    value={metrics.inProgress}\n                    color=\"info\"\n                    progress={Math.round((metrics.inProgress / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('inProgress')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Completed Projects\"\n                    value={metrics.completed}\n                    color=\"success\"\n                    progress={Math.round((metrics.completed / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('completed')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"On Hold Projects\"\n                    value={metrics.onHold}\n                    color=\"warning\"\n                    progress={Math.round((metrics.onHold / metrics.totalProjects) * 100)}\n                    onClick={() => handleMetricClick('onHold')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"High Priority Risks\"\n                    value={metrics.openRisks}\n                    color=\"error\"\n                    progress={Math.round((metrics.openRisks / metrics.totalProjects) * 100)}\n                    onClick={() => handleNavigateToRisks('risks')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Open Issues\"\n                    value={metrics.openIssues}\n                    color=\"error\"\n                    progress={Math.round((metrics.openIssues / metrics.totalProjects) * 100)}\n                    onClick={() => handleNavigateToRisks('issues')}\n                  />\n                </Box>\n              </Box>\n            </Box>\n            \n            {/* Budget Metrics Section */}\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h5\" sx={{ mb: 2 }}>\n                Budget Metrics\n              </Typography>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Budget Estimated\"\n                    value={`$${metrics.totalBudget.toLocaleString()}`}\n                    color=\"primary\"\n                    progress={100}\n                    onClick={() => handleMetricClick('highBudget')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Total Actual Cost\"\n                    value={`$${metrics.totalActualCost.toLocaleString()}`}\n                    color={metrics.totalActualCost > metrics.totalBudget ? 'error' : 'info'}\n                    progress={Math.round((metrics.totalActualCost / metrics.totalBudget) * 100)}\n                    onClick={() => handleMetricClick('totalActualCost')}\n                  />\n                </Box>\n                <Box sx={{ flex: '1 1 300px' }}>\n                  <MetricCard\n                    title=\"Remaining Budget\"\n                    value={`$${metrics.remainingBudget.toLocaleString()}`}\n                    color={metrics.remainingBudget < 0 ? 'error' : 'success'}\n                    progress={Math.round((metrics.remainingBudget / metrics.totalBudget) * 100)}\n                    subtitle={metrics.remainingBudget < 0 ? 'Budget Overrun' : ''}\n                    onClick={() => handleMetricClick('underBudget')}\n                  />\n                </Box>\n              </Box>\n            </Box>\n          </>\n        );\n        \n      case 1: // Analytics tab\n        return (\n          <AnalyticsDashboard />\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <ProjectProvider>\n      <Container maxWidth=\"xl\">\n        <Box sx={{ py: 4 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              {getDashboardTitle()}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              {accessPermissions.canExportReports && (\n                <Button \n                  startIcon={<DownloadIcon />} \n                  variant=\"outlined\" \n                  size=\"small\"\n                  onClick={handleExportReport}\n                >\n                  {t('dashboard.export')}\n                </Button>\n              )}\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {t('dashboard.lastUpdated')}: {lastRefresh.toLocaleTimeString()}\n              </Typography>\n              <Tooltip title={t('dashboard.refresh')}>\n                <IconButton onClick={handleRefresh} disabled={isLoading}>\n                  {isLoading ? <CircularProgress size={24} /> : <RefreshIcon />}\n                </IconButton>\n              </Tooltip>\n            </Box>\n          </Box>\n\n          {/* Tabs for Dashboard and Assignments */}\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n            <Tabs\n              value={tabValue}\n              onChange={handleTabChange}\n              aria-label=\"dashboard tabs\"\n            >\n              <Tab \n                label={t('navigation.dashboard')} \n                id=\"tab-0\" \n                aria-controls=\"tabpanel-0\" \n                icon={<DashboardIcon />}\n                iconPosition=\"start\"\n              />\n              <Tab \n                label={t('dashboard.analytics', 'Analytics')} \n                id=\"tab-1\" \n                aria-controls=\"tabpanel-1\" \n                icon={<BarChartIcon />}\n                iconPosition=\"start\"\n              />\n            </Tabs>\n          </Box>\n\n          {renderDashboardContent()}\n          \n          {/* Project Dialog */}\n          {selectedMetric && (\n            <ProjectDialog\n              open={dialogOpen}\n              onClose={() => setDialogOpen(false)}\n              title={getDialogTitle(selectedMetric)}\n              projects={getFilteredProjects(selectedMetric)}\n            />\n          )}\n          \n          {/* Risks Dialog */}\n          <Dialog \n            open={risksDialogOpen} \n            onClose={() => setRisksDialogOpen(false)} \n            maxWidth=\"md\" \n            fullWidth\n          >\n            <DialogTitle>\n              {t('dashboard.highPriorityRisks', 'High Priority Risks')}\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => setRisksDialogOpen(false)}\n                sx={{ position: 'absolute', right: 8, top: 8 }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('risk.title')}</TableCell>\n                      <TableCell>{t('project.name')}</TableCell>\n                      <TableCell>{t('risk.impact')}</TableCell>\n                      <TableCell>{t('risk.status')}</TableCell>\n                      <TableCell>{t('risk.createdAt')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {risks.filter(risk => risk.status === RiskStatus.IDENTIFIED || \n                                          risk.status === RiskStatus.ANALYZING || \n                                          risk.status === RiskStatus.MONITORED)\n                      .map((risk) => {\n                        const project = projects.find(p => p.id === risk.projectId);\n                        return (\n                          <TableRow key={risk.id}>\n                            <TableCell>{risk.title}</TableCell>\n                            <TableCell>{project?.name || t('common.noData')}</TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`risk.impact.${risk.impact.toLowerCase()}`)}\n                                size=\"small\"\n                                color={risk.impact === RiskImpact.HIGH ? 'error' : \n                                      risk.impact === RiskImpact.MEDIUM ? 'warning' : 'success'}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`risk.status.${risk.status.toLowerCase()}`)}\n                                size=\"small\"\n                              />\n                            </TableCell>\n                            <TableCell>{formatDate(risk.createdAt)}</TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n          </Dialog>\n\n          {/* Issues Dialog */}\n          <Dialog \n            open={issuesDialogOpen} \n            onClose={() => setIssuesDialogOpen(false)} \n            maxWidth=\"md\" \n            fullWidth\n          >\n            <DialogTitle>\n              {t('dashboard.openIssues', 'Open Issues')}\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => setIssuesDialogOpen(false)}\n                sx={{ position: 'absolute', right: 8, top: 8 }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </DialogTitle>\n            <DialogContent>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>{t('issue.title')}</TableCell>\n                      <TableCell>{t('project.name')}</TableCell>\n                      <TableCell>{t('issue.impact')}</TableCell>\n                      <TableCell>{t('issue.status')}</TableCell>\n                      <TableCell>{t('issue.createdAt')}</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {issues.filter(issue => issue.status === IssueStatus.OPEN || \n                                            issue.status === IssueStatus.IN_PROGRESS)\n                      .map((issue) => {\n                        const project = projects.find(p => p.id === issue.projectId);\n                        return (\n                          <TableRow key={issue.id}>\n                            <TableCell>{issue.title}</TableCell>\n                            <TableCell>{project?.name || t('common.noData')}</TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`issue.impact.${issue.impact.toLowerCase()}`)}\n                                size=\"small\"\n                                color={issue.impact === RiskImpact.HIGH ? 'error' : \n                                      issue.impact === RiskImpact.MEDIUM ? 'warning' : 'success'}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <Chip\n                                label={t(`issue.status.${issue.status.toLowerCase()}`)}\n                                size=\"small\"\n                              />\n                            </TableCell>\n                            <TableCell>{formatDate(issue.createdAt)}</TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </DialogContent>\n          </Dialog>\n        </Box>\n      </Container>\n    </ProjectProvider>\n  );\n};\n\nexport default DashboardPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}