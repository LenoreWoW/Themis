{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/MindMap/EnhancedMindMap.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Tree from 'react-d3-tree';\nimport { Box, Typography, Paper, IconButton, Stack, Tooltip, Menu, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Chip, Divider } from '@mui/material';\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon, CenterFocusStrong as CenterIcon, Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon, Refresh as ReLayoutIcon, Save as SaveIcon, Dashboard as DashboardIcon } from '@mui/icons-material';\nimport { TaskStatus, TaskPriority, UserRole } from '../../types';\nimport './MindMap.css';\nimport { useTasks } from '../../context/TaskContext';\n\n// Define the structure of a node in the mind map\n\n// Props for the CustomNode component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Component to render the custom node\nconst CustomNode = ({\n  nodeDatum,\n  toggleNode,\n  onNodeClick,\n  onAddChild,\n  onAddSibling,\n  onDeleteNode,\n  onEditNode\n}) => {\n  _s();\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const handleMenuOpen = e => {\n    e.stopPropagation();\n    setMenuAnchor(e.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchor(null);\n  };\n  const handleAddChild = e => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddChild(nodeDatum);\n  };\n  const handleAddSibling = e => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddSibling(nodeDatum);\n  };\n  const handleDelete = e => {\n    e.stopPropagation();\n    handleMenuClose();\n    onDeleteNode(nodeDatum);\n  };\n  const handleEdit = e => {\n    e.stopPropagation();\n    handleMenuClose();\n    onEditNode(nodeDatum);\n  };\n  const handleNodeClick = e => {\n    e.stopPropagation();\n    toggleNode();\n    onNodeClick(nodeDatum);\n  };\n\n  // Determine node color based on type or status\n  const getNodeColor = () => {\n    if (nodeDatum.__type === 'project') return '#3f51b5';\n    if (nodeDatum.__type === 'category') return '#7986cb';\n    if (nodeDatum.__type === 'milestone') return '#e91e63';\n\n    // For task nodes, color by status\n    if (nodeDatum.__type === 'task') {\n      switch (nodeDatum.status) {\n        case TaskStatus.TODO:\n          return '#9e9e9e';\n        case TaskStatus.IN_PROGRESS:\n          return '#2196f3';\n        case TaskStatus.REVIEW:\n          return '#ff9800';\n        case TaskStatus.DONE:\n          return '#4caf50';\n        default:\n          return '#90caf9';\n      }\n    }\n\n    // Default color for custom nodes\n    return '#90caf9';\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    onClick: handleNodeClick,\n    className: `mind-map-node ${nodeDatum.__type || 'custom'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      r: nodeDatum.__type === 'project' ? 25 : nodeDatum.__type === 'category' ? 20 : 15,\n      fill: getNodeColor()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"node-label\",\n      fill: \"white\",\n      textAnchor: \"middle\",\n      y: nodeDatum.__type === 'project' ? 5 : 4,\n      style: {\n        fontSize: nodeDatum.__type === 'project' ? '0.8em' : '0.7em',\n        fontWeight: 'bold'\n      },\n      children: nodeDatum.name.length > 20 ? `${nodeDatum.name.substring(0, 18)}...` : nodeDatum.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), nodeDatum.attributes && /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"node-attributes\",\n      fill: \"white\",\n      x: 30,\n      dy: \"1.2em\",\n      style: {\n        fontSize: '0.7em'\n      },\n      children: Object.entries(nodeDatum.attributes).map(([key, value], i) => /*#__PURE__*/_jsxDEV(\"tspan\", {\n        x: 30,\n        dy: i === 0 ? 0 : '1.2em',\n        children: `${key}: ${value}`\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      className: \"drag-indicator\",\n      r: 5,\n      cx: 40,\n      cy: 0,\n      fill: \"#f5f5f5\",\n      stroke: \"#333\",\n      strokeWidth: 1,\n      style: {\n        cursor: 'grab'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"action-button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        onClickCapture: handleMenuOpen,\n        className: \"action-button\",\n        r: 8,\n        cx: -35,\n        cy: 0,\n        fill: \"#f5f5f5\",\n        stroke: \"#ccc\",\n        strokeWidth: 1,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        onClickCapture: handleMenuOpen,\n        x: -35,\n        y: 3,\n        textAnchor: \"middle\",\n        style: {\n          fontSize: '0.7em',\n          fill: '#555',\n          cursor: 'pointer'\n        },\n        children: \"\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: handleMenuClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleAddChild,\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), \"Add Child\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleAddSibling,\n        children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), \"Add Sibling\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleEdit,\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), \"Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDelete,\n        sx: {\n          color: 'error.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomNode, \"AGZI7tfctpx0rkw2bcH8OTzQeYo=\");\n_c = CustomNode;\nconst EnhancedMindMap = ({\n  project,\n  tasks = [],\n  mode = 'tasks',\n  onSave,\n  initialData,\n  customizeEnabled = true\n}) => {\n  _s2();\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const [zoom, setZoom] = useState(1);\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0\n  });\n  const [treeData, setTreeData] = useState(null);\n  const [activeNode, setActiveNode] = useState(null);\n\n  // Dialog state for node operations\n  const [nodeDialogOpen, setNodeDialogOpen] = useState(false);\n  const [dialogAction, setDialogAction] = useState('add-child');\n  const [newNodeName, setNewNodeName] = useState('');\n\n  // Customize panel state\n  const [customizeOpen, setCustomizeOpen] = useState(false);\n\n  // Delete confirmation dialog\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [nodeToDelete, setNodeToDelete] = useState(null);\n  const {\n    addTask,\n    updateTask,\n    deleteTask\n  } = useTasks();\n\n  // Initialize mind map data\n  useEffect(() => {\n    if (initialData) {\n      setTreeData(initialData);\n      return;\n    }\n    if (mode === 'blank') {\n      // Create a blank mind map with a single root node\n      setTreeData({\n        id: `root-${Date.now()}`,\n        name: 'Central Idea',\n        type: 'custom',\n        children: []\n      });\n    } else if (mode === 'tasks' && project && tasks) {\n      // Create a mind map based on tasks\n      buildTasksBasedMindMap();\n    }\n  }, [project, tasks, mode, initialData]);\n\n  // Build a mind map structure from project and tasks\n  const buildTasksBasedMindMap = () => {\n    if (!project || !tasks) return;\n\n    // Group tasks by status\n    const tasksByStatus = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: []\n    };\n    tasks.forEach(task => {\n      if (tasksByStatus[task.status]) {\n        tasksByStatus[task.status].push(task);\n      } else {\n        tasksByStatus[TaskStatus.TODO].push(task);\n      }\n    });\n\n    // Create the mind map structure\n    const mindMapRoot = {\n      id: `project-${project.id}`,\n      name: project.name,\n      type: 'project',\n      attributes: {\n        status: project.status,\n        progress: `${project.progress}%`\n      },\n      children: Object.entries(tasksByStatus).map(([status, statusTasks]) => ({\n        id: `status-${status}`,\n        name: getStatusLabel(status),\n        type: 'category',\n        children: statusTasks.map(task => {\n          var _task$assignee;\n          return {\n            id: `task-${task.id}`,\n            name: task.title,\n            type: 'task',\n            taskId: task.id,\n            status: task.status,\n            attributes: {\n              priority: task.priority,\n              assignee: (_task$assignee = task.assignee) !== null && _task$assignee !== void 0 && _task$assignee.firstName ? `${task.assignee.firstName} ${task.assignee.lastName}` : 'Unassigned',\n              dueDate: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : 'No due date'\n            }\n          };\n        })\n      }))\n    };\n    setTreeData(mindMapRoot);\n  };\n\n  // Helper function to get status label\n  const getStatusLabel = status => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  // Function to reset view to center\n  const resetView = () => {\n    if (containerRef.current) {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      setTranslate({\n        x: width / 2,\n        y: height / 3\n      });\n      setZoom(1);\n    }\n  };\n\n  // Adjust zoom level\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\n\n  // Handle node clicks\n  const handleNodeClick = nodeDatum => {\n    setActiveNode(nodeDatum);\n  };\n\n  // Generate a unique node ID\n  const generateNodeId = () => `node-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n\n  // Open dialog to add a child node\n  const handleAddChild = parentNode => {\n    setDialogAction('add-child');\n    setActiveNode(parentNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to add a sibling node\n  const handleAddSibling = siblingNode => {\n    setDialogAction('add-sibling');\n    setActiveNode(siblingNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to edit a node\n  const handleEditNode = node => {\n    setDialogAction('edit');\n    setActiveNode(node);\n    setNewNodeName(node.name);\n    setNodeDialogOpen(true);\n  };\n\n  // Confirm deletion of a node\n  const handleDeleteNode = node => {\n    setNodeToDelete(node);\n    setDeleteDialogOpen(true);\n  };\n\n  // Save and close node edit dialog\n  const handleSaveNode = () => {\n    if (!treeData || !activeNode || !newNodeName.trim()) {\n      setNodeDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively update nodes in the tree\n    const updateTreeNodes = (nodes = []) => {\n      return nodes.map(node => {\n        // If this is the node to update\n        if (node.id === activeNode.id && dialogAction === 'edit') {\n          return {\n            ...node,\n            name: newNodeName\n          };\n        }\n\n        // If this is a parent where we need to add a child\n        if (node.id === activeNode.id && dialogAction === 'add-child') {\n          const children = node.children || [];\n          return {\n            ...node,\n            children: [...children, {\n              id: generateNodeId(),\n              name: newNodeName,\n              type: 'custom',\n              children: []\n            }]\n          };\n        }\n\n        // If this has children, recursively update them\n        if (node.children && node.children.length > 0) {\n          return {\n            ...node,\n            children: updateTreeNodes(node.children)\n          };\n        }\n        return node;\n      });\n    };\n\n    // Function to add a sibling\n    const addSibling = (root, targetNodeId) => {\n      var _root$children;\n      // If the root is the parent of the target node\n      if ((_root$children = root.children) !== null && _root$children !== void 0 && _root$children.some(child => child.id === targetNodeId)) {\n        return {\n          ...root,\n          children: [...(root.children || []), {\n            id: generateNodeId(),\n            name: newNodeName,\n            type: 'custom',\n            children: []\n          }]\n        };\n      }\n\n      // Otherwise search deeper in the tree\n      if (root.children) {\n        return {\n          ...root,\n          children: root.children.map(child => addSibling(child, targetNodeId))\n        };\n      }\n      return root;\n    };\n\n    // Update the tree data\n    if (dialogAction === 'add-sibling' && treeData) {\n      // Need to find the parent of the activeNode\n      setTreeData(addSibling(treeData, activeNode.id));\n    } else if (treeData) {\n      // Handle edit or add child\n      setTreeData({\n        ...treeData,\n        children: updateTreeNodes(treeData.children || [])\n      });\n    }\n    setNodeDialogOpen(false);\n  };\n\n  // Execute node deletion\n  const handleConfirmDelete = () => {\n    if (!treeData || !nodeToDelete) {\n      setDeleteDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively remove a node from the tree\n    const removeNode = (nodes = []) => {\n      return nodes.filter(node => node.id !== nodeToDelete.id).map(node => {\n        if (node.children && node.children.length > 0) {\n          return {\n            ...node,\n            children: removeNode(node.children)\n          };\n        }\n        return node;\n      });\n    };\n\n    // Update the tree data\n    if (treeData.id === nodeToDelete.id) {\n      // If we're deleting the root, this shouldn't normally happen\n      setTreeData(null);\n    } else {\n      setTreeData({\n        ...treeData,\n        children: removeNode(treeData.children || [])\n      });\n    }\n    setDeleteDialogOpen(false);\n    setNodeToDelete(null);\n  };\n\n  // Automatically rearrange the layout\n  const handleReLayout = () => {\n    // This is a placeholder - with react-d3-tree, we'd need to manipulate\n    // the tree coordinates or use a different approach to truly re-layout\n    // For now, we just reset the view to center the current tree\n    resetView();\n  };\n\n  // Handle saving the mind map\n  const handleSave = () => {\n    if (onSave && treeData) {\n      onSave(treeData);\n    }\n  };\n\n  // Update dimensions when component mounts or window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const {\n          width,\n          height\n        } = containerRef.current.getBoundingClientRect();\n        setDimensions({\n          width,\n          height\n        });\n        setTranslate({\n          x: width / 2,\n          y: height / 3\n        });\n      }\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n  const handleAddNode = async (parentNode, newNodeName) => {\n    if (!project) return;\n    const newTask = {\n      id: `temp-${Date.now()}`,\n      projectId: project.id,\n      title: newNodeName,\n      description: '',\n      status: TaskStatus.TODO,\n      priority: TaskPriority.MEDIUM,\n      dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n      // 7 days from now\n      startDate: new Date().toISOString(),\n      project: {\n        id: project.id,\n        name: project.name,\n        description: project.description,\n        client: project.client,\n        status: project.status,\n        priority: project.priority,\n        startDate: project.startDate,\n        endDate: project.endDate,\n        projectManager: project.projectManager,\n        department: project.department,\n        progress: 0,\n        // Default value\n        budget: 0,\n        // Default value\n        actualCost: 0,\n        // Default value\n        createdAt: project.createdAt,\n        updatedAt: project.updatedAt\n      },\n      assignee: undefined,\n      createdBy: {\n        id: 'current-user',\n        firstName: 'Current',\n        lastName: 'User',\n        email: 'user@example.com',\n        role: UserRole.PROJECT_MANAGER,\n        department: project.department,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    try {\n      await addTask(newTask);\n      // The TaskContext will automatically update the tasks list\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n  const handleEditTaskNode = async (node, newName) => {\n    if (!node.taskId) return;\n    try {\n      // Update the task with new name\n      const updatedTask = {\n        ...tasks.find(t => t.id === node.taskId),\n        title: newName\n      };\n      await updateTask(node.taskId, updatedTask);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n  const handleDeleteTaskNode = async node => {\n    if (!node.taskId) return;\n    try {\n      await deleteTask(node.taskId);\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 1,\n    sx: {\n      height: '100%',\n      borderRadius: 2,\n      overflow: 'hidden',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '100%',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          p: 1,\n          borderBottom: '1px solid #eee',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 26\n            }, this),\n            onClick: () => setCustomizeOpen(!customizeOpen),\n            variant: customizeOpen ? \"contained\" : \"outlined\",\n            disabled: !customizeEnabled,\n            children: \"Customize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(ReLayoutIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 26\n            }, this),\n            onClick: handleReLayout,\n            children: \"Re-Layout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 26\n            }, this),\n            onClick: handleSave,\n            disabled: !onSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          height: customizeEnabled ? 'calc(100% - 48px)' : '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          ref: containerRef,\n          className: \"mind-map-container\",\n          sx: {\n            width: customizeOpen ? 'calc(100% - 300px)' : '100%',\n            height: '100%',\n            transition: 'width 0.3s ease-in-out'\n          },\n          children: treeData && /*#__PURE__*/_jsxDEV(Tree, {\n            data: treeData,\n            orientation: \"horizontal\",\n            renderCustomNodeElement: rd3tProps => /*#__PURE__*/_jsxDEV(CustomNode, {\n              nodeDatum: rd3tProps.nodeDatum,\n              toggleNode: rd3tProps.toggleNode,\n              onNodeClick: handleNodeClick,\n              onAddChild: handleAddChild,\n              onAddSibling: handleAddSibling,\n              onDeleteNode: handleDeleteNode,\n              onEditNode: handleEditNode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this),\n            zoomable: true,\n            zoom: zoom,\n            translate: {\n              x: translate.x,\n              y: translate.y\n            },\n            separation: {\n              siblings: 1.5,\n              nonSiblings: 2\n            },\n            pathClassFunc: () => 'mind-map-link',\n            initialDepth: 1,\n            depthFactor: 300,\n            dimensions: dimensions,\n            draggable: true,\n            collapsible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }, this), customizeEnabled && customizeOpen && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 300,\n            height: '100%',\n            p: 2,\n            borderLeft: '1px solid #eee',\n            overflowY: 'auto',\n            backgroundColor: '#f9f9f9'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Customize Mind Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"Mind Map Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: mode === 'tasks' ? 'Tasks Mode' : 'Blank Mode',\n              color: \"primary\",\n              variant: \"outlined\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 15\n          }, this), activeNode && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"Selected Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 21\n              }, this), \" \", activeNode.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 19\n            }, this), activeNode.type && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 23\n              }, this), \" \", activeNode.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleAddChild(activeNode),\n                sx: {\n                  mr: 1,\n                  mb: 1\n                },\n                children: \"Add Child\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleEditNode(activeNode),\n                sx: {\n                  mr: 1,\n                  mb: 1\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                color: \"error\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleDeleteNode(activeNode),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"mind-map-controls\",\n        sx: {\n          position: 'absolute',\n          bottom: 16,\n          right: 16,\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          borderRadius: 2,\n          padding: 1,\n          boxShadow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Zoom In\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: handleZoomIn,\n              children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Zoom Out\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: handleZoomOut,\n              children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Center\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: resetView,\n              children: /*#__PURE__*/_jsxDEV(CenterIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: nodeDialogOpen,\n      onClose: () => setNodeDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: dialogAction === 'add-child' ? 'Add Child Node' : dialogAction === 'add-sibling' ? 'Add Sibling Node' : 'Edit Node'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Node Name\",\n          fullWidth: true,\n          value: newNodeName,\n          onChange: e => setNewNodeName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setNodeDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveNode,\n          variant: \"contained\",\n          disabled: !newNodeName.trim(),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: () => setDeleteDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Are you sure you want to delete \\\"\", nodeToDelete === null || nodeToDelete === void 0 ? void 0 : nodeToDelete.name, \"\\\"? This will also remove all of its children.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 878,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirmDelete,\n          variant: \"contained\",\n          color: \"error\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 651,\n    columnNumber: 5\n  }, this);\n};\n_s2(EnhancedMindMap, \"kgwMCG+AxavNaO5q2mXfmgcJq9c=\", false, function () {\n  return [useTasks];\n});\n_c2 = EnhancedMindMap;\nexport default EnhancedMindMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"EnhancedMindMap\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Tree","Box","Typography","Paper","IconButton","Stack","Tooltip","Menu","MenuItem","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Chip","Divider","ZoomIn","ZoomInIcon","ZoomOut","ZoomOutIcon","CenterFocusStrong","CenterIcon","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","Refresh","ReLayoutIcon","Save","SaveIcon","Dashboard","DashboardIcon","TaskStatus","TaskPriority","UserRole","useTasks","jsxDEV","_jsxDEV","CustomNode","nodeDatum","toggleNode","onNodeClick","onAddChild","onAddSibling","onDeleteNode","onEditNode","_s","menuAnchor","setMenuAnchor","handleMenuOpen","e","stopPropagation","currentTarget","handleMenuClose","handleAddChild","handleAddSibling","handleDelete","handleEdit","handleNodeClick","getNodeColor","__type","status","TODO","IN_PROGRESS","REVIEW","DONE","onClick","className","children","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","y","style","fontSize","fontWeight","name","length","substring","attributes","x","dy","Object","entries","map","key","value","i","cx","cy","stroke","strokeWidth","cursor","onClickCapture","anchorEl","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","sx","mr","color","_c","EnhancedMindMap","project","tasks","mode","onSave","initialData","customizeEnabled","_s2","containerRef","dimensions","setDimensions","width","height","zoom","setZoom","translate","setTranslate","treeData","setTreeData","activeNode","setActiveNode","nodeDialogOpen","setNodeDialogOpen","dialogAction","setDialogAction","newNodeName","setNewNodeName","customizeOpen","setCustomizeOpen","deleteDialogOpen","setDeleteDialogOpen","nodeToDelete","setNodeToDelete","addTask","updateTask","deleteTask","id","Date","now","type","buildTasksBasedMindMap","tasksByStatus","forEach","task","push","mindMapRoot","progress","statusTasks","getStatusLabel","_task$assignee","title","taskId","priority","assignee","firstName","lastName","dueDate","toLocaleDateString","resetView","current","getBoundingClientRect","handleZoomIn","prev","Math","min","handleZoomOut","max","generateNodeId","floor","random","parentNode","siblingNode","handleEditNode","node","handleDeleteNode","handleSaveNode","trim","updateTreeNodes","nodes","addSibling","root","targetNodeId","_root$children","some","child","handleConfirmDelete","removeNode","filter","handleReLayout","handleSave","updateDimensions","window","addEventListener","removeEventListener","handleAddNode","newTask","projectId","description","MEDIUM","toISOString","startDate","client","endDate","projectManager","department","budget","actualCost","createdAt","updatedAt","undefined","createdBy","email","role","PROJECT_MANAGER","err","console","error","handleEditTaskNode","newName","updatedTask","find","t","handleDeleteTaskNode","elevation","borderRadius","overflow","position","display","justifyContent","p","borderBottom","backgroundColor","direction","spacing","size","startIcon","variant","disabled","ref","transition","data","orientation","renderCustomNodeElement","rd3tProps","zoomable","separation","siblings","nonSiblings","pathClassFunc","initialDepth","depthFactor","draggable","collapsible","borderLeft","overflowY","gutterBottom","mb","label","mt","bottom","right","padding","boxShadow","autoFocus","margin","fullWidth","onChange","target","_c2","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/MindMap/EnhancedMindMap.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Tree from 'react-d3-tree';\nimport { \n  Box, \n  Typography, \n  Paper, \n  IconButton, \n  Stack, \n  Tooltip, \n  Menu,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Chip,\n  Divider\n} from '@mui/material';\nimport {\n  ZoomIn as ZoomInIcon,\n  ZoomOut as ZoomOutIcon,\n  CenterFocusStrong as CenterIcon,\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Menu as MenuIcon,\n  Refresh as ReLayoutIcon,\n  Save as SaveIcon,\n  Dashboard as DashboardIcon\n} from '@mui/icons-material';\nimport { Project, Task, TaskStatus, TaskPriority, UserRole } from '../../types';\nimport './MindMap.css';\nimport { useTasks } from '../../context/TaskContext';\n\n// Define the structure of a node in the mind map\ninterface MindMapNode {\n  id: string;\n  name: string;\n  type?: 'task' | 'project' | 'category' | 'milestone' | 'custom';\n  status?: TaskStatus;\n  attributes?: Record<string, any>;\n  taskId?: string; // Reference to actual task ID if applicable\n  children?: MindMapNode[];\n}\n\ninterface EnhancedMindMapProps {\n  project?: Project;\n  tasks?: Task[];\n  mode: 'tasks' | 'blank';\n  onSave?: (data: any) => void;\n  initialData?: MindMapNode;\n  customizeEnabled?: boolean;\n}\n\n// Props for the CustomNode component\ninterface CustomNodeProps {\n  nodeDatum: any;\n  toggleNode: () => void;\n  onNodeClick: (nodeDatum: any) => void;\n  onAddChild: (nodeDatum: any) => void;\n  onAddSibling: (nodeDatum: any) => void;\n  onDeleteNode: (nodeDatum: any) => void;\n  onEditNode: (nodeDatum: any) => void;\n}\n\n// Component to render the custom node\nconst CustomNode: React.FC<CustomNodeProps> = ({\n  nodeDatum,\n  toggleNode,\n  onNodeClick,\n  onAddChild,\n  onAddSibling,\n  onDeleteNode,\n  onEditNode\n}) => {\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n  \n  const handleMenuOpen = (e: React.MouseEvent<SVGCircleElement | SVGTextElement>) => {\n    e.stopPropagation();\n    setMenuAnchor(e.currentTarget as unknown as HTMLElement);\n  };\n  \n  const handleMenuClose = () => {\n    setMenuAnchor(null);\n  };\n  \n  const handleAddChild = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddChild(nodeDatum);\n  };\n\n  const handleAddSibling = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddSibling(nodeDatum);\n  };\n\n  const handleDelete = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onDeleteNode(nodeDatum);\n  };\n\n  const handleEdit = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onEditNode(nodeDatum);\n  };\n  \n  const handleNodeClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    toggleNode();\n    onNodeClick(nodeDatum);\n  };\n  \n  // Determine node color based on type or status\n  const getNodeColor = () => {\n    if (nodeDatum.__type === 'project') return '#3f51b5';\n    if (nodeDatum.__type === 'category') return '#7986cb';\n    if (nodeDatum.__type === 'milestone') return '#e91e63';\n    \n    // For task nodes, color by status\n    if (nodeDatum.__type === 'task') {\n      switch(nodeDatum.status) {\n        case TaskStatus.TODO: return '#9e9e9e';\n        case TaskStatus.IN_PROGRESS: return '#2196f3';\n        case TaskStatus.REVIEW: return '#ff9800';\n        case TaskStatus.DONE: return '#4caf50';\n        default: return '#90caf9';\n      }\n    }\n    \n    // Default color for custom nodes\n    return '#90caf9';\n  };\n\n  return (\n    <g \n      onClick={handleNodeClick}\n      className={`mind-map-node ${nodeDatum.__type || 'custom'}`}\n    >\n      <circle \n        r={nodeDatum.__type === 'project' ? 25 : nodeDatum.__type === 'category' ? 20 : 15} \n        fill={getNodeColor()}\n      />\n      \n      <text\n        className=\"node-label\"\n        fill=\"white\"\n        textAnchor=\"middle\"\n        y={nodeDatum.__type === 'project' ? 5 : 4}\n        style={{ fontSize: nodeDatum.__type === 'project' ? '0.8em' : '0.7em', fontWeight: 'bold' }}\n      >\n        {nodeDatum.name.length > 20 ? `${nodeDatum.name.substring(0, 18)}...` : nodeDatum.name}\n      </text>\n      \n      {nodeDatum.attributes && (\n        <text \n          className=\"node-attributes\"\n          fill=\"white\"\n          x={30}\n          dy=\"1.2em\"\n          style={{ fontSize: '0.7em' }}\n        >\n          {Object.entries(nodeDatum.attributes).map(([key, value], i) => (\n            <tspan key={key} x={30} dy={i === 0 ? 0 : '1.2em'}>\n              {`${key}: ${value}`}\n            </tspan>\n          ))}\n        </text>\n      )}\n      \n      {/* Drag diamond indicator */}\n      <circle\n        className=\"drag-indicator\"\n        r={5}\n        cx={40}\n        cy={0}\n        fill=\"#f5f5f5\"\n        stroke=\"#333\"\n        strokeWidth={1}\n        style={{ cursor: 'grab' }}\n      />\n      \n      {/* Action button */}\n      <g className=\"action-button-group\">\n        <circle\n          onClickCapture={handleMenuOpen}\n          className=\"action-button\"\n          r={8}\n          cx={-35}\n          cy={0}\n          fill=\"#f5f5f5\"\n          stroke=\"#ccc\"\n          strokeWidth={1}\n          style={{ cursor: 'pointer' }}\n        />\n        \n        <text\n          onClickCapture={handleMenuOpen}\n          x={-35}\n          y={3}\n          textAnchor=\"middle\"\n          style={{ fontSize: '0.7em', fill: '#555', cursor: 'pointer' }}\n        >\n          ⋮\n        </text>\n      </g>\n      \n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <MenuItem onClick={handleAddChild}>\n          <AddIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Add Child\n        </MenuItem>\n        <MenuItem onClick={handleAddSibling}>\n          <AddIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Add Sibling\n        </MenuItem>\n        <MenuItem onClick={handleEdit}>\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Edit\n        </MenuItem>\n        <Divider />\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Delete\n        </MenuItem>\n      </Menu>\n    </g>\n  );\n};\n\nconst EnhancedMindMap: React.FC<EnhancedMindMapProps> = ({ \n  project, \n  tasks = [], \n  mode = 'tasks',\n  onSave,\n  initialData,\n  customizeEnabled = true\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [zoom, setZoom] = useState(1);\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\n  const [treeData, setTreeData] = useState<MindMapNode | null>(null);\n  const [activeNode, setActiveNode] = useState<MindMapNode | null>(null);\n  \n  // Dialog state for node operations\n  const [nodeDialogOpen, setNodeDialogOpen] = useState(false);\n  const [dialogAction, setDialogAction] = useState<'add-child' | 'add-sibling' | 'edit'>('add-child');\n  const [newNodeName, setNewNodeName] = useState('');\n  \n  // Customize panel state\n  const [customizeOpen, setCustomizeOpen] = useState(false);\n  \n  // Delete confirmation dialog\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [nodeToDelete, setNodeToDelete] = useState<MindMapNode | null>(null);\n\n  const { addTask, updateTask, deleteTask } = useTasks();\n\n  // Initialize mind map data\n  useEffect(() => {\n    if (initialData) {\n      setTreeData(initialData);\n      return;\n    }\n    \n    if (mode === 'blank') {\n      // Create a blank mind map with a single root node\n      setTreeData({\n        id: `root-${Date.now()}`,\n        name: 'Central Idea',\n        type: 'custom',\n        children: []\n      });\n    } else if (mode === 'tasks' && project && tasks) {\n      // Create a mind map based on tasks\n      buildTasksBasedMindMap();\n    }\n  }, [project, tasks, mode, initialData]);\n\n  // Build a mind map structure from project and tasks\n  const buildTasksBasedMindMap = () => {\n    if (!project || !tasks) return;\n\n    // Group tasks by status\n    const tasksByStatus: Record<string, Task[]> = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: []\n    };\n\n    tasks.forEach(task => {\n      if (tasksByStatus[task.status]) {\n        tasksByStatus[task.status].push(task);\n      } else {\n        tasksByStatus[TaskStatus.TODO].push(task);\n      }\n    });\n\n    // Create the mind map structure\n    const mindMapRoot: MindMapNode = {\n      id: `project-${project.id}`,\n      name: project.name,\n      type: 'project',\n      attributes: {\n        status: project.status,\n        progress: `${project.progress}%`\n      },\n      children: Object.entries(tasksByStatus).map(([status, statusTasks]) => ({\n        id: `status-${status}`,\n        name: getStatusLabel(status as TaskStatus),\n        type: 'category',\n        children: statusTasks.map(task => ({\n          id: `task-${task.id}`,\n          name: task.title,\n          type: 'task',\n          taskId: task.id,\n          status: task.status,\n          attributes: {\n            priority: task.priority,\n            assignee: task.assignee?.firstName \n              ? `${task.assignee.firstName} ${task.assignee.lastName}`\n              : 'Unassigned',\n            dueDate: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : 'No due date'\n          }\n        }))\n      }))\n    };\n\n    setTreeData(mindMapRoot);\n  };\n\n  // Helper function to get status label\n  const getStatusLabel = (status: TaskStatus): string => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  // Function to reset view to center\n  const resetView = () => {\n    if (containerRef.current) {\n      const { width, height } = containerRef.current.getBoundingClientRect();\n      setTranslate({ x: width / 2, y: height / 3 });\n      setZoom(1);\n    }\n  };\n\n  // Adjust zoom level\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\n\n  // Handle node clicks\n  const handleNodeClick = (nodeDatum: any) => {\n    setActiveNode(nodeDatum);\n  };\n\n  // Generate a unique node ID\n  const generateNodeId = () => `node-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n\n  // Open dialog to add a child node\n  const handleAddChild = (parentNode: any) => {\n    setDialogAction('add-child');\n    setActiveNode(parentNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to add a sibling node\n  const handleAddSibling = (siblingNode: any) => {\n    setDialogAction('add-sibling');\n    setActiveNode(siblingNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to edit a node\n  const handleEditNode = (node: any) => {\n    setDialogAction('edit');\n    setActiveNode(node);\n    setNewNodeName(node.name);\n    setNodeDialogOpen(true);\n  };\n\n  // Confirm deletion of a node\n  const handleDeleteNode = (node: any) => {\n    setNodeToDelete(node);\n    setDeleteDialogOpen(true);\n  };\n\n  // Save and close node edit dialog\n  const handleSaveNode = () => {\n    if (!treeData || !activeNode || !newNodeName.trim()) {\n      setNodeDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively update nodes in the tree\n    const updateTreeNodes = (nodes: MindMapNode[] = []): MindMapNode[] => {\n      return nodes.map(node => {\n        // If this is the node to update\n        if (node.id === activeNode.id && dialogAction === 'edit') {\n          return { ...node, name: newNodeName };\n        }\n        \n        // If this is a parent where we need to add a child\n        if (node.id === activeNode.id && dialogAction === 'add-child') {\n          const children = node.children || [];\n          return {\n            ...node,\n            children: [\n              ...children,\n              {\n                id: generateNodeId(),\n                name: newNodeName,\n                type: 'custom',\n                children: []\n              }\n            ]\n          };\n        }\n        \n        // If this has children, recursively update them\n        if (node.children && node.children.length > 0) {\n          return {\n            ...node,\n            children: updateTreeNodes(node.children)\n          };\n        }\n        \n        return node;\n      });\n    };\n\n    // Function to add a sibling\n    const addSibling = (root: MindMapNode, targetNodeId: string): MindMapNode => {\n      // If the root is the parent of the target node\n      if (root.children?.some(child => child.id === targetNodeId)) {\n        return {\n          ...root,\n          children: [\n            ...(root.children || []),\n            {\n              id: generateNodeId(),\n              name: newNodeName,\n              type: 'custom',\n              children: []\n            }\n          ]\n        };\n      }\n      \n      // Otherwise search deeper in the tree\n      if (root.children) {\n        return {\n          ...root,\n          children: root.children.map(child => addSibling(child, targetNodeId))\n        };\n      }\n      \n      return root;\n    };\n\n    // Update the tree data\n    if (dialogAction === 'add-sibling' && treeData) {\n      // Need to find the parent of the activeNode\n      setTreeData(addSibling(treeData, activeNode.id));\n    } else if (treeData) {\n      // Handle edit or add child\n      setTreeData({\n        ...treeData,\n        children: updateTreeNodes(treeData.children || [])\n      });\n    }\n\n    setNodeDialogOpen(false);\n  };\n\n  // Execute node deletion\n  const handleConfirmDelete = () => {\n    if (!treeData || !nodeToDelete) {\n      setDeleteDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively remove a node from the tree\n    const removeNode = (nodes: MindMapNode[] = []): MindMapNode[] => {\n      return nodes\n        .filter(node => node.id !== nodeToDelete.id)\n        .map(node => {\n          if (node.children && node.children.length > 0) {\n            return {\n              ...node,\n              children: removeNode(node.children)\n            };\n          }\n          return node;\n        });\n    };\n\n    // Update the tree data\n    if (treeData.id === nodeToDelete.id) {\n      // If we're deleting the root, this shouldn't normally happen\n      setTreeData(null);\n    } else {\n      setTreeData({\n        ...treeData,\n        children: removeNode(treeData.children || [])\n      });\n    }\n\n    setDeleteDialogOpen(false);\n    setNodeToDelete(null);\n  };\n\n  // Automatically rearrange the layout\n  const handleReLayout = () => {\n    // This is a placeholder - with react-d3-tree, we'd need to manipulate\n    // the tree coordinates or use a different approach to truly re-layout\n    // For now, we just reset the view to center the current tree\n    resetView();\n  };\n\n  // Handle saving the mind map\n  const handleSave = () => {\n    if (onSave && treeData) {\n      onSave(treeData);\n    }\n  };\n\n  // Update dimensions when component mounts or window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n        setTranslate({ x: width / 2, y: height / 3 });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n\n  const handleAddNode = async (parentNode: MindMapNode, newNodeName: string) => {\n    if (!project) return;\n\n    const newTask: Task = {\n      id: `temp-${Date.now()}`,\n      projectId: project.id,\n      title: newNodeName,\n      description: '',\n      status: TaskStatus.TODO,\n      priority: TaskPriority.MEDIUM,\n      dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days from now\n      startDate: new Date().toISOString(),\n      project: {\n        id: project.id,\n        name: project.name,\n        description: project.description,\n        client: project.client,\n        status: project.status,\n        priority: project.priority,\n        startDate: project.startDate,\n        endDate: project.endDate,\n        projectManager: project.projectManager,\n        department: project.department,\n        progress: 0, // Default value\n        budget: 0, // Default value\n        actualCost: 0, // Default value\n        createdAt: project.createdAt,\n        updatedAt: project.updatedAt\n      },\n      assignee: undefined,\n      createdBy: {\n        id: 'current-user',\n        firstName: 'Current',\n        lastName: 'User',\n        email: 'user@example.com',\n        role: UserRole.PROJECT_MANAGER,\n        department: project.department,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    try {\n      await addTask(newTask);\n      // The TaskContext will automatically update the tasks list\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n\n  const handleEditTaskNode = async (node: MindMapNode, newName: string) => {\n    if (!node.taskId) return;\n\n    try {\n      // Update the task with new name\n      const updatedTask = { ...tasks.find(t => t.id === node.taskId), title: newName };\n      await updateTask(node.taskId, updatedTask);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  const handleDeleteTaskNode = async (node: MindMapNode) => {\n    if (!node.taskId) return;\n\n    try {\n      await deleteTask(node.taskId);\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ height: '100%', borderRadius: 2, overflow: 'hidden', position: 'relative' }}>\n      <Box sx={{ height: '100%', position: 'relative' }}>\n        {/* Top toolbar */}\n        <Box \n          sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            p: 1, \n            borderBottom: '1px solid #eee',\n            backgroundColor: '#f9f9f9'\n          }}\n        >\n          <Stack direction=\"row\" spacing={1}>\n            <Button \n              size=\"small\" \n              startIcon={<DashboardIcon />}\n              onClick={() => setCustomizeOpen(!customizeOpen)}\n              variant={customizeOpen ? \"contained\" : \"outlined\"}\n              disabled={!customizeEnabled}\n            >\n              Customize\n            </Button>\n          </Stack>\n          \n          <Stack direction=\"row\" spacing={1}>\n            <Button \n              size=\"small\" \n              startIcon={<ReLayoutIcon />}\n              onClick={handleReLayout}\n            >\n              Re-Layout\n            </Button>\n            \n            <Button \n              size=\"small\" \n              variant=\"contained\" \n              color=\"primary\" \n              startIcon={<SaveIcon />}\n              onClick={handleSave}\n              disabled={!onSave}\n            >\n              Save\n            </Button>\n          </Stack>\n        </Box>\n        \n        {/* Mind map view area */}\n        <Box sx={{ display: 'flex', height: customizeEnabled ? 'calc(100% - 48px)' : '100%' }}>\n          {/* Main tree visualization */}\n          <Box \n            ref={containerRef} \n            className=\"mind-map-container\" \n            sx={{ \n              width: customizeOpen ? 'calc(100% - 300px)' : '100%', \n              height: '100%',\n              transition: 'width 0.3s ease-in-out'\n            }}\n          >\n            {treeData && (\n              <Tree \n                data={treeData}\n                orientation=\"horizontal\"\n                renderCustomNodeElement={(rd3tProps) => (\n                  <CustomNode\n                    nodeDatum={rd3tProps.nodeDatum}\n                    toggleNode={rd3tProps.toggleNode}\n                    onNodeClick={handleNodeClick}\n                    onAddChild={handleAddChild}\n                    onAddSibling={handleAddSibling}\n                    onDeleteNode={handleDeleteNode}\n                    onEditNode={handleEditNode}\n                  />\n                )}\n                zoomable={true}\n                zoom={zoom}\n                translate={{ x: translate.x, y: translate.y }}\n                separation={{ siblings: 1.5, nonSiblings: 2 }}\n                pathClassFunc={() => 'mind-map-link'}\n                initialDepth={1}\n                depthFactor={300}\n                dimensions={dimensions}\n                draggable={true}\n                collapsible={true}\n              />\n            )}\n          </Box>\n          \n          {/* Customize panel */}\n          {customizeEnabled && customizeOpen && (\n            <Box \n              sx={{ \n                width: 300,\n                height: '100%',\n                p: 2,\n                borderLeft: '1px solid #eee',\n                overflowY: 'auto',\n                backgroundColor: '#f9f9f9'\n              }}\n            >\n              <Typography variant=\"h6\" gutterBottom>\n                Customize Mind Map\n              </Typography>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Mind Map Mode\n                </Typography>\n                <Chip \n                  label={mode === 'tasks' ? 'Tasks Mode' : 'Blank Mode'} \n                  color=\"primary\" \n                  variant=\"outlined\"\n                  sx={{ mr: 1 }}\n                />\n              </Box>\n              \n              {activeNode && (\n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Selected Node\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    <strong>Name:</strong> {activeNode.name}\n                  </Typography>\n                  {activeNode.type && (\n                    <Typography variant=\"body2\">\n                      <strong>Type:</strong> {activeNode.type}\n                    </Typography>\n                  )}\n                  <Box sx={{ mt: 2 }}>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      startIcon={<AddIcon />}\n                      onClick={() => handleAddChild(activeNode)}\n                      sx={{ mr: 1, mb: 1 }}\n                    >\n                      Add Child\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      startIcon={<EditIcon />}\n                      onClick={() => handleEditNode(activeNode)}\n                      sx={{ mr: 1, mb: 1 }}\n                    >\n                      Edit\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      color=\"error\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => handleDeleteNode(activeNode)}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Zoom controls */}\n        <Box \n          className=\"mind-map-controls\"\n          sx={{ \n            position: 'absolute', \n            bottom: 16, \n            right: 16, \n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderRadius: 2,\n            padding: 1,\n            boxShadow: 1\n          }}\n        >\n          <Stack direction=\"row\" spacing={1}>\n            <Tooltip title=\"Zoom In\">\n              <IconButton size=\"small\" onClick={handleZoomIn}>\n                <ZoomInIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Zoom Out\">\n              <IconButton size=\"small\" onClick={handleZoomOut}>\n                <ZoomOutIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Center\">\n              <IconButton size=\"small\" onClick={resetView}>\n                <CenterIcon />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </Box>\n      </Box>\n      \n      {/* Node edit dialog */}\n      <Dialog open={nodeDialogOpen} onClose={() => setNodeDialogOpen(false)}>\n        <DialogTitle>\n          {dialogAction === 'add-child' \n            ? 'Add Child Node' \n            : dialogAction === 'add-sibling' \n              ? 'Add Sibling Node' \n              : 'Edit Node'}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Node Name\"\n            fullWidth\n            value={newNodeName}\n            onChange={(e) => setNewNodeName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNodeDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleSaveNode} variant=\"contained\" disabled={!newNodeName.trim()}>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Delete confirmation dialog */}\n      <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n        <DialogTitle>Delete Node</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete \"{nodeToDelete?.name}\"? This will also remove all of its children.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default EnhancedMindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}