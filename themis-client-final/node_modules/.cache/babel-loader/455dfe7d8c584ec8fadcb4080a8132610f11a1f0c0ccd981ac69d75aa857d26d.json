{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/AssignmentsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Grid } from '@mui/material';\nimport { Add as AddIcon, CheckCircle as CheckCircleIcon, Schedule as ScheduleIcon, Warning as WarningIcon } from '@mui/icons-material';\nimport { TaskPriority, AssignmentStatus } from '../types';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { useTranslation } from 'react-i18next';\nimport AssignmentCard from '../components/Assignment/AssignmentCard';\nimport AssignmentDetailDialog from '../components/Assignment/AssignmentDetailDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentsPage = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n  const [assignments, setAssignments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingAssignment, setEditingAssignment] = useState(null);\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState(null);\n  const [isDetailDialogOpen, setIsDetailDialogOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    priority: TaskPriority.MEDIUM,\n    dueDate: '',\n    assignedTo: ''\n  });\n  const fetchAssignments = async () => {\n    try {\n      const response = await api.assignments.getAllAssignments('');\n      if (response.success && response.data) {\n        setAssignments(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching assignments:', error);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await api.users.getAllUsers('');\n      if (response.success && response.data) {\n        setUsers(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAssignments();\n    fetchUsers();\n  }, []);\n  const handleOpenDialog = assignment => {\n    if (assignment) {\n      setEditingAssignment(assignment);\n      setFormData({\n        title: assignment.title,\n        description: assignment.description,\n        priority: assignment.priority,\n        dueDate: assignment.dueDate.split('T')[0],\n        assignedTo: assignment.assignedTo.id\n      });\n    } else {\n      setEditingAssignment(null);\n      setFormData({\n        title: '',\n        description: '',\n        priority: TaskPriority.MEDIUM,\n        dueDate: '',\n        assignedTo: ''\n      });\n    }\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingAssignment(null);\n  };\n  const handleSaveAssignment = async () => {\n    try {\n      const selectedUser = users.find(u => u.id === formData.assignedTo);\n      if (!selectedUser) {\n        console.error('Selected user not found');\n        return;\n      }\n      const assignmentData = {\n        ...formData,\n        assignedBy: user || undefined,\n        assignedTo: selectedUser\n      };\n      const response = editingAssignment ? await api.assignments.updateAssignment(editingAssignment.id, assignmentData, '') : await api.assignments.createAssignment(assignmentData, '');\n      if (response.success) {\n        fetchAssignments();\n        handleCloseDialog();\n      }\n    } catch (error) {\n      console.error('Error saving assignment:', error);\n    }\n  };\n  const handleDeleteAssignment = async assignmentId => {\n    try {\n      const response = await api.assignments.deleteAssignment(assignmentId, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error deleting assignment:', error);\n    }\n  };\n  const handleStatusChange = async (assignment, newStatus) => {\n    try {\n      const response = await api.assignments.updateAssignment(assignment.id, {\n        ...assignment,\n        status: newStatus\n      }, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error updating assignment status:', error);\n    }\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this);\n      case AssignmentStatus.IN_PROGRESS:\n        return /*#__PURE__*/_jsxDEV(ScheduleIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n      case AssignmentStatus.CANCELLED:\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getFormattedStatus = status => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return 'Completed';\n      case AssignmentStatus.IN_PROGRESS:\n        return 'In Progress';\n      case AssignmentStatus.CANCELLED:\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n  const handleAssignmentClick = assignmentId => {\n    setSelectedAssignmentId(assignmentId);\n    setIsDetailDialogOpen(true);\n  };\n  const handleCloseDetailDialog = () => {\n    setIsDetailDialogOpen(false);\n    setSelectedAssignmentId(null);\n  };\n  const handleAddComment = async (assignmentId, content) => {\n    // In a real app, this would call an API to add a comment\n    console.log('Add comment to assignment', assignmentId, content);\n    return Promise.resolve();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: t('assignments.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 22\n        }, this),\n        onClick: () => handleOpenDialog(),\n        children: \"New Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 1\n      },\n      children: assignments.map(assignment => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(AssignmentCard, {\n          assignment: {\n            id: assignment.id,\n            title: assignment.title,\n            description: assignment.description,\n            status: assignment.status === AssignmentStatus.COMPLETED ? 'COMPLETED' : assignment.status === AssignmentStatus.IN_PROGRESS ? 'IN_PROGRESS' : 'PENDING',\n            dueDate: assignment.dueDate,\n            assignedBy: assignment.assignedBy || {\n              id: '1',\n              firstName: 'Default',\n              lastName: 'Manager'\n            },\n            assignedTo: assignment.assignedTo,\n            createdAt: assignment.createdAt || new Date().toISOString(),\n            updatedAt: assignment.updatedAt || new Date().toISOString()\n          },\n          onClick: () => handleAssignmentClick(assignment.id),\n          onAddComment: handleAddComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, assignment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingAssignment ? 'Edit Assignment' : 'New Assignment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            fullWidth: true,\n            value: formData.title,\n            onChange: e => setFormData({\n              ...formData,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: t('priority.title'),\n            fullWidth: true,\n            value: formData.priority,\n            onChange: e => setFormData({\n              ...formData,\n              priority: e.target.value\n            }),\n            children: Object.values(TaskPriority).map(priority => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: priority,\n              children: priority\n            }, priority, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Assign To\",\n            fullWidth: true,\n            value: formData.assignedTo,\n            onChange: e => setFormData({\n              ...formData,\n              assignedTo: e.target.value\n            }),\n            children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: user.id,\n              children: [user.firstName, \" \", user.lastName]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Due Date\",\n            type: \"date\",\n            fullWidth: true,\n            value: formData.dueDate,\n            onChange: e => setFormData({\n              ...formData,\n              dueDate: e.target.value\n            }),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveAssignment,\n          variant: \"contained\",\n          color: \"primary\",\n          children: editingAssignment ? 'Save Changes' : 'Create Assignment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignmentDetailDialog, {\n      open: isDetailDialogOpen,\n      onClose: handleCloseDetailDialog,\n      assignmentId: selectedAssignmentId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentsPage, \"Fl2KKWVFGtlkgPk9wrXbw/lDxOo=\", false, function () {\n  return [useTranslation, useAuth];\n});\n_c = AssignmentsPage;\nexport default AssignmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Grid","Add","AddIcon","CheckCircle","CheckCircleIcon","Schedule","ScheduleIcon","Warning","WarningIcon","TaskPriority","AssignmentStatus","useAuth","api","useTranslation","AssignmentCard","AssignmentDetailDialog","jsxDEV","_jsxDEV","AssignmentsPage","_s","t","user","assignments","setAssignments","users","setUsers","openDialog","setOpenDialog","editingAssignment","setEditingAssignment","selectedAssignmentId","setSelectedAssignmentId","isDetailDialogOpen","setIsDetailDialogOpen","formData","setFormData","title","description","priority","MEDIUM","dueDate","assignedTo","fetchAssignments","response","getAllAssignments","success","data","error","console","fetchUsers","getAllUsers","handleOpenDialog","assignment","split","id","handleCloseDialog","handleSaveAssignment","selectedUser","find","u","assignmentData","assignedBy","undefined","updateAssignment","createAssignment","handleDeleteAssignment","assignmentId","deleteAssignment","handleStatusChange","newStatus","status","getPriorityColor","HIGH","LOW","getStatusIcon","COMPLETED","color","fileName","_jsxFileName","lineNumber","columnNumber","IN_PROGRESS","CANCELLED","getFormattedStatus","handleAssignmentClick","handleCloseDetailDialog","handleAddComment","content","log","Promise","resolve","sx","p","children","display","justifyContent","mb","variant","startIcon","onClick","container","spacing","mt","map","item","xs","sm","md","firstName","lastName","createdAt","Date","toISOString","updatedAt","onAddComment","open","onClose","maxWidth","fullWidth","pt","flexDirection","gap","label","value","onChange","e","target","multiline","rows","select","Object","values","type","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/AssignmentsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  Card,\n  CardContent,\n  CardActions,\n  Chip,\n  IconButton,\n  Tooltip,\n  Grid\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  CheckCircle as CheckCircleIcon,\n  Schedule as ScheduleIcon,\n  Warning as WarningIcon,\n} from '@mui/icons-material';\nimport { User, TaskPriority, Assignment, AssignmentStatus } from '../types';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { useTranslation } from 'react-i18next';\nimport AssignmentCard from '../components/Assignment/AssignmentCard';\nimport AssignmentDetailDialog from '../components/Assignment/AssignmentDetailDialog';\n\ninterface AssignmentFormData {\n  title: string;\n  description: string;\n  priority: TaskPriority;\n  dueDate: string;\n  assignedTo: string;\n}\n\nconst AssignmentsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingAssignment, setEditingAssignment] = useState<Assignment | null>(null);\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState<string | null>(null);\n  const [isDetailDialogOpen, setIsDetailDialogOpen] = useState(false);\n  const [formData, setFormData] = useState<AssignmentFormData>({\n    title: '',\n    description: '',\n    priority: TaskPriority.MEDIUM,\n    dueDate: '',\n    assignedTo: '',\n  });\n\n  const fetchAssignments = async () => {\n    try {\n      const response = await api.assignments.getAllAssignments('');\n      if (response.success && response.data) {\n        setAssignments(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching assignments:', error);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await api.users.getAllUsers('');\n      if (response.success && response.data) {\n        setUsers(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAssignments();\n    fetchUsers();\n  }, []);\n\n  const handleOpenDialog = (assignment?: Assignment) => {\n    if (assignment) {\n      setEditingAssignment(assignment);\n      setFormData({\n        title: assignment.title,\n        description: assignment.description,\n        priority: assignment.priority,\n        dueDate: assignment.dueDate.split('T')[0],\n        assignedTo: assignment.assignedTo.id,\n      });\n    } else {\n      setEditingAssignment(null);\n      setFormData({\n        title: '',\n        description: '',\n        priority: TaskPriority.MEDIUM,\n        dueDate: '',\n        assignedTo: '',\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingAssignment(null);\n  };\n\n  const handleSaveAssignment = async () => {\n    try {\n      const selectedUser = users.find(u => u.id === formData.assignedTo);\n      if (!selectedUser) {\n        console.error('Selected user not found');\n        return;\n      }\n\n      const assignmentData = {\n        ...formData,\n        assignedBy: user || undefined,\n        assignedTo: selectedUser\n      };\n\n      const response = editingAssignment\n        ? await api.assignments.updateAssignment(editingAssignment.id, assignmentData, '')\n        : await api.assignments.createAssignment(assignmentData, '');\n\n      if (response.success) {\n        fetchAssignments();\n        handleCloseDialog();\n      }\n    } catch (error) {\n      console.error('Error saving assignment:', error);\n    }\n  };\n\n  const handleDeleteAssignment = async (assignmentId: string) => {\n    try {\n      const response = await api.assignments.deleteAssignment(assignmentId, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error deleting assignment:', error);\n    }\n  };\n\n  const handleStatusChange = async (assignment: Assignment, newStatus: AssignmentStatus) => {\n    try {\n      const response = await api.assignments.updateAssignment(\n        assignment.id,\n        { ...assignment, status: newStatus },\n        ''\n      );\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error updating assignment status:', error);\n    }\n  };\n\n  const getPriorityColor = (priority: TaskPriority) => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: AssignmentStatus) => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return <CheckCircleIcon color=\"success\" />;\n      case AssignmentStatus.IN_PROGRESS:\n        return <ScheduleIcon color=\"primary\" />;\n      case AssignmentStatus.CANCELLED:\n        return <WarningIcon color=\"error\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getFormattedStatus = (status: AssignmentStatus): string => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return 'Completed';\n      case AssignmentStatus.IN_PROGRESS:\n        return 'In Progress';\n      case AssignmentStatus.CANCELLED:\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n  \n  const handleAssignmentClick = (assignmentId: string) => {\n    setSelectedAssignmentId(assignmentId);\n    setIsDetailDialogOpen(true);\n  };\n  \n  const handleCloseDetailDialog = () => {\n    setIsDetailDialogOpen(false);\n    setSelectedAssignmentId(null);\n  };\n  \n  const handleAddComment = async (assignmentId: string, content: string) => {\n    // In a real app, this would call an API to add a comment\n    console.log('Add comment to assignment', assignmentId, content);\n    return Promise.resolve();\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">{t('assignments.title')}</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n        >\n          New Assignment\n        </Button>\n      </Box>\n\n      <Grid container spacing={3} sx={{ mt: 1 }}>\n        {assignments.map((assignment) => (\n          <Grid item xs={12} sm={6} md={4} key={assignment.id}>\n            <AssignmentCard\n              assignment={{\n                id: assignment.id,\n                title: assignment.title,\n                description: assignment.description,\n                status: (assignment.status === AssignmentStatus.COMPLETED \n                  ? 'COMPLETED' \n                  : assignment.status === AssignmentStatus.IN_PROGRESS \n                  ? 'IN_PROGRESS' \n                  : 'PENDING') as 'PENDING' | 'IN_PROGRESS' | 'COMPLETED' | 'OVERDUE',\n                dueDate: assignment.dueDate,\n                assignedBy: assignment.assignedBy || {\n                  id: '1',\n                  firstName: 'Default',\n                  lastName: 'Manager'\n                },\n                assignedTo: assignment.assignedTo,\n                createdAt: assignment.createdAt || new Date().toISOString(),\n                updatedAt: assignment.updatedAt || new Date().toISOString()\n              }}\n              onClick={() => handleAssignmentClick(assignment.id)}\n              onAddComment={handleAddComment}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          {editingAssignment ? 'Edit Assignment' : 'New Assignment'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              label=\"Title\"\n              fullWidth\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            />\n            <TextField\n              label=\"Description\"\n              fullWidth\n              multiline\n              rows={4}\n              value={formData.description}\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n            />\n            <TextField\n              select\n              label={t('priority.title')}\n              fullWidth\n              value={formData.priority}\n              onChange={(e) => setFormData({ ...formData, priority: e.target.value as TaskPriority })}\n            >\n              {Object.values(TaskPriority).map((priority) => (\n                <MenuItem key={priority} value={priority}>\n                  {priority}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              select\n              label=\"Assign To\"\n              fullWidth\n              value={formData.assignedTo}\n              onChange={(e) => setFormData({ ...formData, assignedTo: e.target.value })}\n            >\n              {users.map((user) => (\n                <MenuItem key={user.id} value={user.id}>\n                  {user.firstName} {user.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              label=\"Due Date\"\n              type=\"date\"\n              fullWidth\n              value={formData.dueDate}\n              onChange={(e) => setFormData({ ...formData, dueDate: e.target.value })}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSaveAssignment} variant=\"contained\" color=\"primary\">\n            {editingAssignment ? 'Save Changes' : 'Create Assignment'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Assignment Detail Dialog */}\n      <AssignmentDetailDialog\n        open={isDetailDialogOpen}\n        onClose={handleCloseDetailDialog}\n        assignmentId={selectedAssignmentId}\n      />\n    </Box>\n  );\n};\n\nexport default AssignmentsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}