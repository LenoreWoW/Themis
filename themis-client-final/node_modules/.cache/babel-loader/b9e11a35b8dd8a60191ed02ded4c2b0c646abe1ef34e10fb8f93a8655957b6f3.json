{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/LanguageSwitcher.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, ListItemText, IconButton, Menu } from '@mui/material';\nimport { Language as LanguageIcon } from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LanguageSwitcher = ({\n  onDirectionChange\n}) => {\n  _s();\n  const {\n    i18n,\n    t\n  } = useTranslation();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const auth = useAuth();\n  const currentLanguage = i18n.language;\n  const languages = [{\n    code: 'en',\n    name: t('language.english'),\n    dir: 'ltr'\n  }, {\n    code: 'ar',\n    name: t('language.arabic'),\n    dir: 'rtl'\n  }];\n\n  // Initialize language from localStorage on component mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('themisLanguage');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      const langDirection = savedLanguage === 'ar' ? 'rtl' : 'ltr';\n      i18n.changeLanguage(savedLanguage);\n      onDirectionChange(langDirection);\n      console.log('Initialized language from localStorage:', savedLanguage, langDirection);\n    }\n  }, []);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleLanguageChange = (langCode, direction) => {\n    i18n.changeLanguage(langCode);\n    localStorage.setItem('themisLanguage', langCode);\n    onDirectionChange(direction);\n    handleClose();\n\n    // Preserve auth state when changing language\n    if (auth.isAuthenticated && auth.user) {\n      // Save minimal auth data to sessionStorage (temporary storage)\n      const authState = {\n        isPreserved: true,\n        userId: auth.user.id,\n        username: auth.user.username\n      };\n      sessionStorage.setItem('themis_preserve_auth', JSON.stringify(authState));\n    }\n\n    // Force a page reload to ensure all components update with the new language\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"change language\",\n      \"aria-controls\": \"language-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      size: \"small\",\n      sx: {\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(LanguageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"language-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: languages.map(lang => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleLanguageChange(lang.code, lang.dir),\n        selected: currentLanguage === lang.code,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: lang.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, lang.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LanguageSwitcher, \"1+consv3Y9Uon9fmjbb6iKjj4GU=\", false, function () {\n  return [useTranslation, useAuth];\n});\n_c = LanguageSwitcher;\nexport default LanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"names":["React","useState","useEffect","MenuItem","ListItemText","IconButton","Menu","Language","LanguageIcon","useTranslation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","LanguageSwitcher","onDirectionChange","_s","i18n","t","anchorEl","setAnchorEl","auth","currentLanguage","language","languages","code","name","dir","savedLanguage","localStorage","getItem","langDirection","changeLanguage","console","log","handleClick","event","currentTarget","handleClose","handleLanguageChange","langCode","direction","setItem","isAuthenticated","user","authState","isPreserved","userId","id","username","sessionStorage","JSON","stringify","window","location","reload","children","color","onClick","size","sx","ml","fileName","_jsxFileName","lineNumber","columnNumber","keepMounted","open","Boolean","onClose","map","lang","selected","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/LanguageSwitcher.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  MenuItem, \n  ListItemText,\n  IconButton,\n  Menu,\n} from '@mui/material';\nimport { \n  Language as LanguageIcon,\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { Direction } from '@mui/material/styles';\nimport { useAuth } from '../context/AuthContext';\n\ninterface LanguageSwitcherProps {\n  onDirectionChange: (direction: Direction) => void;\n}\n\nconst LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ onDirectionChange }) => {\n  const { i18n, t } = useTranslation();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const auth = useAuth();\n  \n  const currentLanguage = i18n.language;\n  \n  const languages = [\n    { code: 'en', name: t('language.english'), dir: 'ltr' },\n    { code: 'ar', name: t('language.arabic'), dir: 'rtl' }\n  ];\n\n  // Initialize language from localStorage on component mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('themisLanguage');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      const langDirection = savedLanguage === 'ar' ? 'rtl' : 'ltr';\n      i18n.changeLanguage(savedLanguage);\n      onDirectionChange(langDirection as Direction);\n      console.log('Initialized language from localStorage:', savedLanguage, langDirection);\n    }\n  }, []);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleLanguageChange = (langCode: string, direction: Direction) => {\n    i18n.changeLanguage(langCode);\n    localStorage.setItem('themisLanguage', langCode);\n    onDirectionChange(direction);\n    handleClose();\n    \n    // Preserve auth state when changing language\n    if (auth.isAuthenticated && auth.user) {\n      // Save minimal auth data to sessionStorage (temporary storage)\n      const authState = {\n        isPreserved: true,\n        userId: auth.user.id,\n        username: auth.user.username\n      };\n      sessionStorage.setItem('themis_preserve_auth', JSON.stringify(authState));\n    }\n    \n    // Force a page reload to ensure all components update with the new language\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"change language\"\n        aria-controls=\"language-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        size=\"small\"\n        sx={{ ml: 1 }}\n      >\n        <LanguageIcon />\n      </IconButton>\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang) => (\n          <MenuItem \n            key={lang.code} \n            onClick={() => handleLanguageChange(lang.code, lang.dir as Direction)}\n            selected={currentLanguage === lang.code}\n          >\n            <ListItemText>{lang.name}</ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageSwitcher; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,QAAQ,EACRC,YAAY,EACZC,UAAU,EACVC,IAAI,QACC,eAAe;AACtB,SACEC,QAAQ,IAAIC,YAAY,QACnB,qBAAqB;AAC5B,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMjD,MAAMC,gBAAiD,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM;IAAEC,IAAI;IAAEC;EAAE,CAAC,GAAGV,cAAc,CAAC,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAqB,IAAI,CAAC;EAClE,MAAMqB,IAAI,GAAGZ,OAAO,CAAC,CAAC;EAEtB,MAAMa,eAAe,GAAGL,IAAI,CAACM,QAAQ;EAErC,MAAMC,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAER,CAAC,CAAC,kBAAkB,CAAC;IAAES,GAAG,EAAE;EAAM,CAAC,EACvD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAER,CAAC,CAAC,iBAAiB,CAAC;IAAES,GAAG,EAAE;EAAM,CAAC,CACvD;;EAED;EACA1B,SAAS,CAAC,MAAM;IACd,MAAM2B,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC5D,IAAIF,aAAa,IAAIA,aAAa,KAAKX,IAAI,CAACM,QAAQ,EAAE;MACpD,MAAMQ,aAAa,GAAGH,aAAa,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK;MAC5DX,IAAI,CAACe,cAAc,CAACJ,aAAa,CAAC;MAClCb,iBAAiB,CAACgB,aAA0B,CAAC;MAC7CE,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEN,aAAa,EAAEG,aAAa,CAAC;IACtF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAIC,KAAoC,IAAK;IAC5DhB,WAAW,CAACgB,KAAK,CAACC,aAAa,CAAC;EAClC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBlB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMmB,oBAAoB,GAAGA,CAACC,QAAgB,EAAEC,SAAoB,KAAK;IACvExB,IAAI,CAACe,cAAc,CAACQ,QAAQ,CAAC;IAC7BX,YAAY,CAACa,OAAO,CAAC,gBAAgB,EAAEF,QAAQ,CAAC;IAChDzB,iBAAiB,CAAC0B,SAAS,CAAC;IAC5BH,WAAW,CAAC,CAAC;;IAEb;IACA,IAAIjB,IAAI,CAACsB,eAAe,IAAItB,IAAI,CAACuB,IAAI,EAAE;MACrC;MACA,MAAMC,SAAS,GAAG;QAChBC,WAAW,EAAE,IAAI;QACjBC,MAAM,EAAE1B,IAAI,CAACuB,IAAI,CAACI,EAAE;QACpBC,QAAQ,EAAE5B,IAAI,CAACuB,IAAI,CAACK;MACtB,CAAC;MACDC,cAAc,CAACR,OAAO,CAAC,sBAAsB,EAAES,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAC;IAC3E;;IAEA;IACAQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC;EAED,oBACE5C,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBACE7C,OAAA,CAACP,UAAU;MACTqD,KAAK,EAAC,SAAS;MACf,cAAW,iBAAiB;MAC5B,iBAAc,eAAe;MAC7B,iBAAc,MAAM;MACpBC,OAAO,EAAEvB,WAAY;MACrBwB,IAAI,EAAC,OAAO;MACZC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAL,QAAA,eAEd7C,OAAA,CAACJ,YAAY;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACbtD,OAAA,CAACN,IAAI;MACH2C,EAAE,EAAC,eAAe;MAClB7B,QAAQ,EAAEA,QAAS;MACnB+C,WAAW;MACXC,IAAI,EAAEC,OAAO,CAACjD,QAAQ,CAAE;MACxBkD,OAAO,EAAE/B,WAAY;MAAAkB,QAAA,EAEpBhC,SAAS,CAAC8C,GAAG,CAAEC,IAAI,iBAClB5D,OAAA,CAACT,QAAQ;QAEPwD,OAAO,EAAEA,CAAA,KAAMnB,oBAAoB,CAACgC,IAAI,CAAC9C,IAAI,EAAE8C,IAAI,CAAC5C,GAAgB,CAAE;QACtE6C,QAAQ,EAAElD,eAAe,KAAKiD,IAAI,CAAC9C,IAAK;QAAA+B,QAAA,eAExC7C,OAAA,CAACR,YAAY;UAAAqD,QAAA,EAAEe,IAAI,CAAC7C;QAAI;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC,GAJnCM,IAAI,CAAC9C,IAAI;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACP,CAAC;AAEP,CAAC;AAACjD,EAAA,CApFIF,gBAAiD;EAAA,QACjCN,cAAc,EAErBC,OAAO;AAAA;AAAAgE,EAAA,GAHhB3D,gBAAiD;AAsFvD,eAAeA,gBAAgB;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}