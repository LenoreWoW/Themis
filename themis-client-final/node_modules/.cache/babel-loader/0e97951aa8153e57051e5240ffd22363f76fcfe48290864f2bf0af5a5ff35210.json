{"ast":null,"code":"import LocalStorageService from'../services/LocalStorageService';/**\n * Clears all test data from localStorage\n * This function removes all items with keys that start with 'themis_'\n */export const clearAllTestData=()=>{console.log('Clearing all test data from the application...');// Clear localStorage entries\nLocalStorageService.clearAllData();// Force clear specific key items\nlocalStorage.removeItem('token');localStorage.removeItem('user');localStorage.removeItem('themis_projects');localStorage.removeItem('themis_tasks');localStorage.removeItem('themis_meetings');localStorage.removeItem('themis_risks');localStorage.removeItem('themis_issues');localStorage.removeItem('themis_independent_tasks');localStorage.removeItem('themis_departments');// Clear any session-specific data as well\nsessionStorage.clear();console.log('All application data has been cleared');};/**\n * Initializes the application with empty state\n * This should be called on application startup\n */export const initializeCleanApplication=()=>{// Clear all localStorage and sessionStorage data\nclearAllTestData();// Set flag in localStorage to indicate the app has been cleaned\nlocalStorage.setItem('themis_clean_initialized','true');console.log('Application initialized with clean state');};/**\n * Check if the app has been properly cleaned\n */export const isAppClean=()=>{return localStorage.getItem('themis_clean_initialized')==='true';};","map":{"version":3,"names":["LocalStorageService","clearAllTestData","console","log","clearAllData","localStorage","removeItem","sessionStorage","clear","initializeCleanApplication","setItem","isAppClean","getItem"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/utils/cleanupUtils.ts"],"sourcesContent":["import LocalStorageService from '../services/LocalStorageService';\n\n/**\n * Clears all test data from localStorage\n * This function removes all items with keys that start with 'themis_'\n */\nexport const clearAllTestData = (): void => {\n  console.log('Clearing all test data from the application...');\n  \n  // Clear localStorage entries\n  LocalStorageService.clearAllData();\n  \n  // Force clear specific key items\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('themis_projects');\n  localStorage.removeItem('themis_tasks');\n  localStorage.removeItem('themis_meetings');\n  localStorage.removeItem('themis_risks');\n  localStorage.removeItem('themis_issues');\n  localStorage.removeItem('themis_independent_tasks');\n  localStorage.removeItem('themis_departments');\n  \n  // Clear any session-specific data as well\n  sessionStorage.clear();\n  \n  console.log('All application data has been cleared');\n};\n\n/**\n * Initializes the application with empty state\n * This should be called on application startup\n */\nexport const initializeCleanApplication = (): void => {\n  // Clear all localStorage and sessionStorage data\n  clearAllTestData();\n  \n  // Set flag in localStorage to indicate the app has been cleaned\n  localStorage.setItem('themis_clean_initialized', 'true');\n  \n  console.log('Application initialized with clean state');\n};\n\n/**\n * Check if the app has been properly cleaned\n */\nexport const isAppClean = (): boolean => {\n  return localStorage.getItem('themis_clean_initialized') === 'true';\n}; "],"mappings":"AAAA,MAAO,CAAAA,mBAAmB,KAAM,iCAAiC,CAEjE;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAY,CAC1CC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC,CAE7D;AACAH,mBAAmB,CAACI,YAAY,CAAC,CAAC,CAElC;AACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAC/BD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC,CAC1CD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CACvCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC,CAC1CD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CACvCD,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC,CACxCD,YAAY,CAACC,UAAU,CAAC,0BAA0B,CAAC,CACnDD,YAAY,CAACC,UAAU,CAAC,oBAAoB,CAAC,CAE7C;AACAC,cAAc,CAACC,KAAK,CAAC,CAAC,CAEtBN,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACtD,CAAC,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAM,0BAA0B,CAAGA,CAAA,GAAY,CACpD;AACAR,gBAAgB,CAAC,CAAC,CAElB;AACAI,YAAY,CAACK,OAAO,CAAC,0BAA0B,CAAE,MAAM,CAAC,CAExDR,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC,CACzD,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAe,CACvC,MAAO,CAAAN,YAAY,CAACO,OAAO,CAAC,0BAA0B,CAAC,GAAK,MAAM,CACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}