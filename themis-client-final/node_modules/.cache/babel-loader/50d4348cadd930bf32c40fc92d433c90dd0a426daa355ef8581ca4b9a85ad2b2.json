{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/ProjectContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { projectService } from '../services/ProjectService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContext = /*#__PURE__*/createContext(undefined);\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await projectService.getProjects();\n      setProjects(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      projects,\n      loading,\n      error,\n      fetchProjects\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectProvider, \"pA9l46V8/XDi4K2nb5ZKNKZHKi8=\");\n_c = ProjectProvider;\nexport const useProjects = () => {\n  _s2();\n  const context = useContext(ProjectContext);\n  if (context === undefined) {\n    throw new Error('useProjects must be used within a ProjectProvider');\n  }\n  return context;\n};\n_s2(useProjects, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","projectService","jsxDEV","_jsxDEV","ProjectContext","undefined","ProjectProvider","children","_s","projects","setProjects","loading","setLoading","error","setError","fetchProjects","data","getProjects","err","Error","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProjects","_s2","context","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/ProjectContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Project } from '../types';\nimport { projectService } from '../services/ProjectService';\n\ninterface ProjectContextType {\n  projects: Project[];\n  loading: boolean;\n  error: string | null;\n  fetchProjects: () => Promise<void>;\n}\n\nconst ProjectContext = createContext<ProjectContextType | undefined>(undefined);\n\nexport const ProjectProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await projectService.getProjects();\n      setProjects(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  return (\n    <ProjectContext.Provider value={{ projects, loading, error, fetchProjects }}>\n      {children}\n    </ProjectContext.Provider>\n  );\n};\n\nexport const useProjects = () => {\n  const context = useContext(ProjectContext);\n  if (context === undefined) {\n    throw new Error('useProjects must be used within a ProjectProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE7E,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5D,MAAMC,cAAc,gBAAGP,aAAa,CAAiCQ,SAAS,CAAC;AAE/E,OAAO,MAAMC,eAAwD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAME,IAAI,GAAG,MAAMf,cAAc,CAACgB,WAAW,CAAC,CAAC;MAC/CP,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,YAAYC,KAAK,GAAGD,GAAG,CAACE,OAAO,GAAG,0BAA0B,CAAC;IAC3E,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACde,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,QAAQ;MAAEE,OAAO;MAAEE,KAAK;MAAEE;IAAc,CAAE;IAAAR,QAAA,EACzEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAClB,EAAA,CA3BWF,eAAwD;AAAAqB,EAAA,GAAxDrB,eAAwD;AA6BrE,OAAO,MAAMsB,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGhC,UAAU,CAACM,cAAc,CAAC;EAC1C,IAAI0B,OAAO,KAAKzB,SAAS,EAAE;IACzB,MAAM,IAAIc,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOW,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}