{"ast":null,"code":"import React,{useState,useEffect}from'react';import{DragDropContext}from'react-beautiful-dnd';import{Box,Typography,Button,useTheme}from'@mui/material';import{Add as AddIcon,RequestQuote as RequestIcon}from'@mui/icons-material';import{TaskStatus,canAddTasks,canRequestTasks}from'../../types';import{useTasks}from'../../context/TaskContext';import{useAuth}from'../../context/AuthContext';import KanbanColumn from'./Board/KanbanColumn';// Define the props interface for the KanbanBoard component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Helper function to get column color based on status\nconst getColumnColor=status=>{switch(status){case TaskStatus.TODO:return'#e0e0e0';case TaskStatus.IN_PROGRESS:return'#bbdefb';case TaskStatus.REVIEW:return'#fff9c4';case TaskStatus.DONE:return'#c8e6c9';default:return'#e0e0e0';}};// Helper function to get column title based on status\nconst getColumnTitle=status=>{switch(status){case TaskStatus.TODO:return'To Do';case TaskStatus.IN_PROGRESS:return'In Progress';case TaskStatus.REVIEW:return'Review';case TaskStatus.DONE:return'Done';default:return'Unknown';}};const KanbanBoard=_ref=>{let{project,onTaskClick,onAddTask,onRequestTask,maxTasksPerStatus}=_ref;const theme=useTheme();const{tasks,moveTask}=useTasks();const{user}=useAuth();const[columns,setColumns]=useState({});// Check if user has permission to add tasks\nconst userCanAddTasks=user!==null&&user!==void 0&&user.role?canAddTasks(user.role):false;const userCanRequestTasks=user!==null&&user!==void 0&&user.role?canRequestTasks(user.role):false;// Organize tasks into columns by status\nuseEffect(()=>{const newColumns={[TaskStatus.TODO]:[],[TaskStatus.IN_PROGRESS]:[],[TaskStatus.REVIEW]:[],[TaskStatus.DONE]:[]};tasks.forEach(task=>{if(!task.id){console.warn('Task without ID found, skipping:',task);return;}const status=task.status||TaskStatus.TODO;if(newColumns[status]){newColumns[status].push({...task,id:String(task.id)});}else{console.warn(`Unknown status ${status} for task ${task.id}, placing in TODO`);newColumns[TaskStatus.TODO].push({...task,id:String(task.id)});}});setColumns(newColumns);},[tasks]);const handleDragEnd=async result=>{const{destination,source,draggableId}=result;if(!destination)return;if(destination.droppableId===source.droppableId&&destination.index===source.index){return;}try{await moveTask(draggableId,destination.droppableId);}catch(err){console.error('Error moving task:',err);}};return/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Kanban Board\"}),userCanAddTasks&&onAddTask?/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:onAddTask,children:\"Add Task\"}):userCanRequestTasks&&onRequestTask?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(RequestIcon,{}),onClick:onRequestTask,children:\"Request Task\"}):null]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:2,overflowX:'auto',pb:2},children:Object.entries(columns).map(_ref2=>{let[status,columnTasks]=_ref2;return/*#__PURE__*/_jsx(KanbanColumn,{id:status,title:getColumnTitle(status),status:status,color:getColumnColor(status),tasks:columnTasks,onTaskClick:onTaskClick,maxTasks:maxTasksPerStatus},status);})})})]});};export default KanbanBoard;","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Box","Typography","Button","useTheme","Add","AddIcon","RequestQuote","RequestIcon","TaskStatus","canAddTasks","canRequestTasks","useTasks","useAuth","KanbanColumn","jsx","_jsx","jsxs","_jsxs","getColumnColor","status","TODO","IN_PROGRESS","REVIEW","DONE","getColumnTitle","KanbanBoard","_ref","project","onTaskClick","onAddTask","onRequestTask","maxTasksPerStatus","theme","tasks","moveTask","user","columns","setColumns","userCanAddTasks","role","userCanRequestTasks","newColumns","forEach","task","id","console","warn","push","String","handleDragEnd","result","destination","source","draggableId","droppableId","index","err","error","sx","p","children","display","justifyContent","alignItems","mb","variant","startIcon","onClick","onDragEnd","gap","overflowX","pb","Object","entries","map","_ref2","columnTasks","title","color","maxTasks"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { Box, Typography, Button, useTheme } from '@mui/material';\nimport { Add as AddIcon, RequestQuote as RequestIcon } from '@mui/icons-material';\nimport { Task, TaskStatus, Project, UserRole, canAddTasks, canRequestTasks } from '../../types';\nimport { useTasks } from '../../context/TaskContext';\nimport { useAuth } from '../../context/AuthContext';\nimport KanbanColumn from './Board/KanbanColumn';\n\n// Define the props interface for the KanbanBoard component\ninterface KanbanBoardProps {\n  project?: Project;\n  onTaskClick?: (taskId: string) => void;\n  onAddTask?: () => void;\n  onRequestTask?: () => void;\n  maxTasksPerStatus?: number;\n}\n\n// Helper function to get column color based on status\nconst getColumnColor = (status: TaskStatus): string => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return '#e0e0e0';\n    case TaskStatus.IN_PROGRESS:\n      return '#bbdefb';\n    case TaskStatus.REVIEW:\n      return '#fff9c4';\n    case TaskStatus.DONE:\n      return '#c8e6c9';\n    default:\n      return '#e0e0e0';\n  }\n};\n\n// Helper function to get column title based on status\nconst getColumnTitle = (status: TaskStatus): string => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return 'To Do';\n    case TaskStatus.IN_PROGRESS:\n      return 'In Progress';\n    case TaskStatus.REVIEW:\n      return 'Review';\n    case TaskStatus.DONE:\n      return 'Done';\n    default:\n      return 'Unknown';\n  }\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({\n  project,\n  onTaskClick,\n  onAddTask,\n  onRequestTask,\n  maxTasksPerStatus,\n}) => {\n  const theme = useTheme();\n  const { tasks, moveTask } = useTasks();\n  const { user } = useAuth();\n  const [columns, setColumns] = useState<Record<string, Task[]>>({});\n  \n  // Check if user has permission to add tasks\n  const userCanAddTasks = user?.role ? canAddTasks(user.role) : false;\n  const userCanRequestTasks = user?.role ? canRequestTasks(user.role) : false;\n  \n  // Organize tasks into columns by status\n  useEffect(() => {\n    const newColumns: Record<string, Task[]> = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: [],\n    };\n    \n    tasks.forEach(task => {\n      if (!task.id) {\n        console.warn('Task without ID found, skipping:', task);\n        return;\n      }\n      \n      const status = task.status || TaskStatus.TODO;\n      \n      if (newColumns[status]) {\n        newColumns[status].push({\n          ...task,\n          id: String(task.id)\n        });\n      } else {\n        console.warn(`Unknown status ${status} for task ${task.id}, placing in TODO`);\n        newColumns[TaskStatus.TODO].push({\n          ...task,\n          id: String(task.id)\n        });\n      }\n    });\n    \n    setColumns(newColumns);\n  }, [tasks]);\n\n  const handleDragEnd = async (result: DropResult) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) return;\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    try {\n      await moveTask(draggableId, destination.droppableId as TaskStatus);\n    } catch (err) {\n      console.error('Error moving task:', err);\n    }\n  };\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">Kanban Board</Typography>\n        {userCanAddTasks && onAddTask ? (\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={onAddTask}\n          >\n            Add Task\n          </Button>\n        ) : userCanRequestTasks && onRequestTask ? (\n          <Button\n            variant=\"outlined\"\n            startIcon={<RequestIcon />}\n            onClick={onRequestTask}\n          >\n            Request Task\n          </Button>\n        ) : null}\n      </Box>\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Box sx={{ display: 'flex', gap: 2, overflowX: 'auto', pb: 2 }}>\n          {Object.entries(columns).map(([status, columnTasks]) => (\n            <KanbanColumn\n              key={status}\n              id={status}\n              title={getColumnTitle(status as TaskStatus)}\n              status={status as TaskStatus}\n              color={getColumnColor(status as TaskStatus)}\n              tasks={columnTasks}\n              onTaskClick={onTaskClick}\n              maxTasks={maxTasksPerStatus}\n            />\n          ))}\n        </Box>\n      </DragDropContext>\n    </Box>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}