{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Divider, Stack, Chip } from '@mui/material';\nimport { TaskStatus } from '../../types';\nimport TaskCard from '../Task/TaskCard';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  tasks,\n  onTaskClick,\n  onAddComment,\n  onUpdateProgress\n}) => {\n  _s();\n  const theme = useTheme();\n  const [columns, setColumns] = useState({\n    [TaskStatus.TODO]: [],\n    [TaskStatus.IN_PROGRESS]: [],\n    [TaskStatus.REVIEW]: [],\n    [TaskStatus.DONE]: []\n  });\n  useEffect(() => {\n    // Organize tasks by status\n    const newColumns = {\n      [TaskStatus.TODO]: tasks.filter(task => task.status === TaskStatus.TODO),\n      [TaskStatus.IN_PROGRESS]: tasks.filter(task => task.status === TaskStatus.IN_PROGRESS),\n      [TaskStatus.REVIEW]: tasks.filter(task => task.status === TaskStatus.REVIEW),\n      [TaskStatus.DONE]: tasks.filter(task => task.status === TaskStatus.DONE)\n    };\n    setColumns(newColumns);\n  }, [tasks]);\n  const getColumnTitle = status => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'In Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return status;\n    }\n  };\n  const getColumnColor = status => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return theme.palette.grey[300];\n      case TaskStatus.IN_PROGRESS:\n        return theme.palette.primary.light;\n      case TaskStatus.REVIEW:\n        return theme.palette.warning.light;\n      case TaskStatus.DONE:\n        return theme.palette.success.light;\n      default:\n        return theme.palette.grey[300];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      overflowX: 'auto',\n      p: 1,\n      gap: 2,\n      minHeight: 500\n    },\n    children: Object.keys(columns).map(status => /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        minWidth: 300,\n        width: 300,\n        maxHeight: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        borderTop: 5,\n        borderColor: getColumnColor(status)\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: 'background.default'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h3\",\n          fontWeight: \"bold\",\n          children: [getColumnTitle(status), /*#__PURE__*/_jsxDEV(Chip, {\n            label: columns[status].length,\n            size: \"small\",\n            sx: {\n              ml: 1\n            },\n            color: status === TaskStatus.DONE ? 'success' : status === TaskStatus.REVIEW ? 'warning' : status === TaskStatus.IN_PROGRESS ? 'primary' : 'default'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        sx: {\n          p: 2,\n          overflowY: 'auto',\n          flexGrow: 1\n        },\n        children: [columns[status].map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task,\n          onClick: () => onTaskClick && onTaskClick(task.id),\n          onAddComment: onAddComment,\n          onUpdateProgress: onUpdateProgress\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)), columns[status].length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            textAlign: 'center',\n            color: 'text.secondary',\n            bgcolor: 'background.paper',\n            borderRadius: 1,\n            border: '1px dashed',\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"No tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"R7FUh1qbja2U5RboUXwf/7wo9sQ=\", false, function () {\n  return [useTheme];\n});\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Divider","Stack","Chip","TaskStatus","TaskCard","useTheme","jsxDEV","_jsxDEV","KanbanBoard","tasks","onTaskClick","onAddComment","onUpdateProgress","_s","theme","columns","setColumns","TODO","IN_PROGRESS","REVIEW","DONE","newColumns","filter","task","status","getColumnTitle","getColumnColor","palette","grey","primary","light","warning","success","sx","display","overflowX","p","gap","minHeight","children","Object","keys","map","minWidth","width","maxHeight","flexDirection","borderTop","borderColor","bgcolor","variant","component","fontWeight","label","length","size","ml","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","overflowY","flexGrow","onClick","id","textAlign","borderRadius","border","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Divider,\n  Stack,\n  Chip\n} from '@mui/material';\nimport { Task, TaskStatus, UserRole } from '../../types';\nimport TaskCard from '../Task/TaskCard';\nimport { useTheme } from '@mui/material/styles';\n\ninterface KanbanBoardProps {\n  tasks: Task[];\n  onTaskClick?: (taskId: string) => void;\n  onAddComment?: (taskId: string, comment: string) => Promise<void>;\n  onUpdateProgress?: (taskId: string, progress: number, newStatus: TaskStatus) => void;\n}\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ \n  tasks, \n  onTaskClick, \n  onAddComment,\n  onUpdateProgress\n}) => {\n  const theme = useTheme();\n  const [columns, setColumns] = useState<{[key: string]: Task[]}>({\n    [TaskStatus.TODO]: [],\n    [TaskStatus.IN_PROGRESS]: [],\n    [TaskStatus.REVIEW]: [],\n    [TaskStatus.DONE]: []\n  });\n  \n  useEffect(() => {\n    // Organize tasks by status\n    const newColumns = {\n      [TaskStatus.TODO]: tasks.filter(task => task.status === TaskStatus.TODO),\n      [TaskStatus.IN_PROGRESS]: tasks.filter(task => task.status === TaskStatus.IN_PROGRESS),\n      [TaskStatus.REVIEW]: tasks.filter(task => task.status === TaskStatus.REVIEW),\n      [TaskStatus.DONE]: tasks.filter(task => task.status === TaskStatus.DONE)\n    };\n    setColumns(newColumns);\n  }, [tasks]);\n\n  const getColumnTitle = (status: TaskStatus) => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'In Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return status;\n    }\n  };\n\n  const getColumnColor = (status: TaskStatus) => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return theme.palette.grey[300];\n      case TaskStatus.IN_PROGRESS:\n        return theme.palette.primary.light;\n      case TaskStatus.REVIEW:\n        return theme.palette.warning.light;\n      case TaskStatus.DONE:\n        return theme.palette.success.light;\n      default:\n        return theme.palette.grey[300];\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', overflowX: 'auto', p: 1, gap: 2, minHeight: 500 }}>\n      {/* Render each status column */}\n      {Object.keys(columns).map((status) => (\n        <Paper \n          key={status}\n          sx={{ \n            minWidth: 300,\n            width: 300,\n            maxHeight: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            borderTop: 5, \n            borderColor: getColumnColor(status as TaskStatus)\n          }}\n        >\n          <Box sx={{ p: 2, bgcolor: 'background.default' }}>\n            <Typography variant=\"h6\" component=\"h3\" fontWeight=\"bold\">\n              {getColumnTitle(status as TaskStatus)}\n              <Chip \n                label={columns[status].length} \n                size=\"small\" \n                sx={{ ml: 1 }}\n                color={status === TaskStatus.DONE ? 'success' : \n                      status === TaskStatus.REVIEW ? 'warning' : \n                      status === TaskStatus.IN_PROGRESS ? 'primary' : 'default'}\n              />\n            </Typography>\n          </Box>\n          <Divider />\n          <Stack spacing={2} sx={{ p: 2, overflowY: 'auto', flexGrow: 1 }}>\n            {columns[status].map((task) => (\n              <TaskCard\n                key={task.id}\n                task={task}\n                onClick={() => onTaskClick && onTaskClick(task.id)}\n                onAddComment={onAddComment}\n                onUpdateProgress={onUpdateProgress}\n              />\n            ))}\n            {columns[status].length === 0 && (\n              <Box \n                sx={{ \n                  p: 2, \n                  textAlign: 'center', \n                  color: 'text.secondary',\n                  bgcolor: 'background.paper',\n                  borderRadius: 1,\n                  border: '1px dashed',\n                  borderColor: 'divider'\n                }}\n              >\n                <Typography variant=\"body2\">No tasks</Typography>\n              </Box>\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}