{"ast":null,"code":"import axios from'axios';import{API_BASE_URL,FEATURES}from'../config';import{v4 as uuidv4}from'uuid';import{UserRole,TaskPriority,RiskStatus,RiskImpact,IssueStatus,TaskRequestStatus}from'../types';import{mockProjects,mockUsers,mockDepartments as importedMockDepartments,createDefaultTasks}from'./mockData';import AuthService from'./AuthService';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Helper function to simulate delay\nconst delay=()=>new Promise(resolve=>setTimeout(resolve,500));// Helper to simulate network delay\nconst sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));// Standard delay duration\nconst simulateDelay=()=>sleep(Math.random()*300+200);// 200-500ms\n// Create empty mock objects for all data types\nconst mockITDepartment={id:'',name:'',description:'',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};// Empty arrays for all mock data\nconst defaultProjectId='';const mockTasks=[];const defaultProjects=[];const defaultMeetings=[];// Empty test users\nconst testUsers={admin:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.ADMIN,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},manager1:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.MANAGER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},manager2:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.MANAGER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},developer:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.DEVELOPER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},designer:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.DESIGNER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}};function getMockData(endpoint,config){return new Promise(resolve=>{// Simulate network delay\nsetTimeout(()=>{console.log(`[MOCK] GET request to ${endpoint}`);// Handle departments\nif(endpoint.startsWith('/departments')){var _endpoint$match;const departmentId=(_endpoint$match=endpoint.match(/\\/departments\\/([^\\/]+)/))===null||_endpoint$match===void 0?void 0:_endpoint$match[1];if(departmentId){const department=importedMockDepartments.find(d=>d.id===departmentId);return resolve(department||null);}return resolve(importedMockDepartments);}// Handle users\nif(endpoint.startsWith('/users')){var _endpoint$match2;const userId=(_endpoint$match2=endpoint.match(/\\/users\\/([^\\/]+)/))===null||_endpoint$match2===void 0?void 0:_endpoint$match2[1];if(userId){const user=mockUsers.find(u=>u.id===userId);return resolve(user||null);}return resolve(mockUsers);}// Handle projects\nif(endpoint.startsWith('/projects')){var _endpoint$match3;const projectId=(_endpoint$match3=endpoint.match(/\\/projects\\/([^\\/]+)/))===null||_endpoint$match3===void 0?void 0:_endpoint$match3[1];if(endpoint.includes('/tasks')){// Handle tasks for a specific project\nif(projectId){const project=mockProjects.find(p=>p.id===projectId);if(project){const tasks=createDefaultTasks(project.id);return resolve(tasks);}}return resolve([]);}if(projectId){// Return a specific project\nconst project=mockProjects.find(p=>p.id===projectId);return resolve(project||null);}// Return all projects, possibly filtered\nlet filteredProjects=[...mockProjects];// Handle query parameters for filtering\nif(config!==null&&config!==void 0&&config.params){const{departmentId,status,priority,search}=config.params;if(departmentId){filteredProjects=filteredProjects.filter(p=>p.departmentId===departmentId);}if(status){filteredProjects=filteredProjects.filter(p=>p.status===status);}if(priority){filteredProjects=filteredProjects.filter(p=>p.priority===priority);}if(search){const searchLower=search.toLowerCase();filteredProjects=filteredProjects.filter(p=>p.name.toLowerCase().includes(searchLower)||p.description.toLowerCase().includes(searchLower));}}return resolve(filteredProjects);}// If no handler for this endpoint\nconsole.log(`[MOCK] No handler for endpoint: ${endpoint}`);resolve([]);},600);// Simulate network delay\n});}// Handle POST requests for mock data\nfunction postMockData(endpoint,data){return new Promise(resolve=>{// Simulate network delay\nsetTimeout(()=>{console.log(`[MOCK] POST request to ${endpoint}`,data);// Handle project creation\nif(endpoint==='/projects'){const newProject={...data,id:`p${mockProjects.length+1}`,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),progress:0};// Link department\nif(data.departmentId){const department=importedMockDepartments.find(d=>d.id===data.departmentId);if(department){newProject.department=department;}}// Link project manager\nif(data.projectManagerId){const manager=mockUsers.find(u=>u.id===data.projectManagerId);if(manager){newProject.projectManager=manager;}}// Link team members\nif(data.teamMemberIds&&Array.isArray(data.teamMemberIds)){newProject.teamMembers=data.teamMemberIds.map(id=>mockUsers.find(u=>u.id===id)).filter(Boolean);}mockProjects.push(newProject);return resolve(newProject);}// If no handler for this endpoint\nconsole.log(`[MOCK] No POST handler for endpoint: ${endpoint}`);resolve(data);},800);});}/**\n * Handles the API response\n */function handleResponse(response){if(response.status>=200&&response.status<300){return{data:response.data,success:true};}else{return{data:response.data,success:false,message:`Request failed with status ${response.status}`};}}/**\n * Main API request function that handles authentication and error handling\n */export const apiRequest=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2?arguments[2]:undefined;const USE_MOCK_DATA=true;// Set to true for development without backend\ntry{const token=AuthService.getToken();const headers={'Content-Type':'application/json'};if(token){headers['Authorization']=`Bearer ${token}`;}if(USE_MOCK_DATA){// Return mock data (with persistence)\nconsole.log(`Using mock data for endpoint: ${endpoint}, method: ${method}`);if(method==='GET'){const responseData=await getMockData(endpoint,{params:data});return{data:responseData,success:true};}else if(method==='POST'){const responseData=await postMockData(endpoint,data);return{data:responseData,success:true};}else{// For other methods, just return success\nreturn{data:data||{},success:true};}}// Real API request\nconst config={method,url:endpoint,headers,...(method==='GET'?{params:data}:{data})};const response=await axios(config);return handleResponse(response);}catch(error){console.error('API request failed:',error);if(USE_MOCK_DATA){console.log(`Falling back to mock data for endpoint: ${endpoint}`);if(method==='GET'){const responseData=await getMockData(endpoint,{params:data});return{data:responseData,success:true};}else if(method==='POST'){const responseData=await postMockData(endpoint,data);return{data:responseData,success:true};}}throw error;}};// Default mock risks\nconst createDefaultRisks=projectId=>[{id:'1',projectId,title:'Data Migration Risk',description:'Risk of data loss during migration process',status:RiskStatus.IDENTIFIED,impact:RiskImpact.HIGH,probability:70,mitigation:'Create multiple backups before migration and perform test migrations on sample data',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-10T00:00:00Z',updatedAt:'2023-01-10T00:00:00Z'},{id:'2',projectId,title:'Resource Availability Risk',description:'Risk of key team members being unavailable during critical project phases',status:RiskStatus.ASSESSED,impact:RiskImpact.MEDIUM,probability:50,mitigation:'Develop contingency plans and cross-train team members',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-15T00:00:00Z',updatedAt:'2023-01-15T00:00:00Z'}];// Default mock issues\nconst createDefaultIssues=projectId=>[{id:'1',projectId,title:'Integration Failure with Legacy System',description:'The new system cannot properly integrate with the existing legacy system',status:IssueStatus.OPEN,impact:RiskImpact.HIGH,owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-02-10T00:00:00Z',updatedAt:'2023-02-10T00:00:00Z'},{id:'2',projectId,title:'Performance Bottleneck in Module A',description:'Module A performance is not meeting expected throughput requirements',status:IssueStatus.IN_PROGRESS,impact:RiskImpact.MEDIUM,owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-02-15T00:00:00Z',updatedAt:'2023-02-20T00:00:00Z'},{id:'3',projectId,title:'Security Vulnerability in Authentication',description:'Security audit identified a potential vulnerability in the authentication process',status:IssueStatus.RESOLVED,impact:RiskImpact.CRITICAL,resolutionSummary:'Implemented updated security protocols and fixed the vulnerability with patch 1.2.3',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-25T00:00:00Z',updatedAt:'2023-02-05T00:00:00Z'}];// Helper function to simulate login\nexport const login=async(email,password)=>{// Return a minimal user object\nreturn{success:true,data:{id:'',username:'',firstName:'',lastName:'',email:email||'',role:UserRole.ADMIN,// Still need admin role for access\ndepartment:{id:'',name:'',description:''},isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},message:'Login successful'};};const defaultUsers=[{id:'1',username:'john.doe',firstName:'John',lastName:'Doe',email:'john.doe@themis.com',role:UserRole.PROJECT_MANAGER,department:importedMockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'2',username:'jane.smith',firstName:'Jane',lastName:'Smith',email:'jane.smith@themis.com',role:UserRole.DEVELOPER,department:importedMockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'3',username:'mike.johnson',firstName:'Mike',lastName:'Johnson',email:'mike.johnson@themis.com',role:UserRole.DESIGNER,department:importedMockDepartments[1],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'4',username:'sarah.wilson',firstName:'Sarah',lastName:'Wilson',email:'sarah.wilson@themis.com',role:UserRole.DEVELOPER,department:importedMockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'5',username:'david.brown',firstName:'David',lastName:'Brown',email:'david.brown@themis.com',role:UserRole.PROJECT_MANAGER,department:importedMockDepartments[2],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];const assignments={getAllAssignments:async token=>{await delay();return{data:[],success:true};},getAssignmentById:async(id,token)=>{await delay();return null;},createAssignment:async(data,token)=>{await delay();const newAssignment={id:'',...data,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{success:true,data:newAssignment};},updateAssignment:async(id,data,token)=>{await delay();return{success:false,error:'Assignment not found'};},deleteAssignment:async(id,token)=>{await delay();return{success:true};}};// Create a named API object to export instead of using anonymous default export\nconst apiRoutes={// Auth endpoints\nauth:{login:adIdentifier=>{// Mock implementation for testing without backend\nconsole.log('Using mock login implementation');return Promise.resolve({userId:'1',username:adIdentifier,role:UserRole.ADMIN,// Defaulting to ADMIN for testing\ndepartmentId:'1',token:'mock-token-'+Date.now(),success:true,message:'Login successful'});},refreshToken:refreshToken=>apiRequest('/api/auth/refresh','POST',{refreshToken}),logout:token=>apiRequest('/api/auth/logout','POST',{})},// User endpoints\nusers:{getCurrentUser:async token=>{await delay();return{data:null,success:false,error:'User not found'};},getAllUsers:async token=>{await delay();return{data:[],success:true};},getUserById:async(userId,token)=>{await delay();return{data:null,success:false,error:'User not found'};},createUser:async(userData,token)=>{await delay();const newUser={id:'',username:userData.username||'',firstName:userData.firstName||'',lastName:userData.lastName||'',email:userData.email||'',role:userData.role||UserRole.DEVELOPER,isActive:true,department:{},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{data:newUser,success:true};},updateUser:async(userId,userData,token)=>{await delay();return{data:null,success:false,error:'User not found'};},deleteUser:async(userId,token)=>{await delay();return{success:true};},assignRole:(userId,role,token)=>apiRequest(`/api/users/${userId}/role`,'PUT',{role}),assignDepartment:(userId,departmentId,token)=>apiRequest(`/api/users/${userId}/department`,'PUT',{departmentId}),getAllDepartments:token=>apiRequest('/api/users/departments','GET')},// Project endpoints\nprojects:{getAllProjects:async token=>{await simulateDelay();return{data:[],success:true};},getProjectById:async(id,token)=>{await simulateDelay();return{data:null,success:false,error:'Project not found'};},createProject:async(projectData,token)=>{await simulateDelay();const newProject={id:projectData.id||uuidv4(),...projectData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{data:newProject,success:true};},updateProject:async(projectId,updatedData,token)=>{try{await simulateDelay();return{data:null,success:false,error:'Project not found'};}catch(error){console.error('Error updating project:',error);throw error;}},deleteProject:async(projectId,token)=>{await simulateDelay();return{data:{message:'Project deleted successfully'},success:true};},uploadAttachment:(projectId,formData,token)=>apiRequest(`/api/projects/${projectId}/attachments`,'POST',formData),getAttachments:(projectId,token)=>apiRequest(`/api/projects/${projectId}/attachments`,'GET'),deleteAttachment:(projectId,attachmentId,token)=>apiRequest(`/api/projects/${projectId}/attachments/${attachmentId}`,'DELETE'),getProject:async(projectId,token)=>{try{// In a real implementation, this would call the API\n// const response = await axios.get(`${API_BASE_URL}/projects/${projectId}`, {\n//   headers: { Authorization: `Bearer ${token}` }\n// });\n// return response;\n// For now, return mock data\nreturn{data:{id:projectId,name:\"Mock Project\",description:\"This is a mock project returned by the API\",startDate:new Date().toISOString(),endDate:new Date(Date.now()+30*24*60*60*1000).toISOString(),status:\"IN_PROGRESS\",priority:\"MEDIUM\",budget:100000,progress:50,department:{id:\"dept-1\",name:\"IT Department\"},projectManager:{id:\"user-1\",firstName:\"John\",lastName:\"Doe\"},approvalStatus:\"SUBMITTED\",comments:\"This is a sample comment on the project\",reviewHistory:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}};}catch(error){console.error('Error fetching project:',error);throw error;}}},// Task endpoints\ntasks:{getAllTasks:async(projectId,token)=>{await delay();return{data:[],success:true};},getAllIndependentTasks:async token=>{await delay();return{data:[],success:true};},getTaskById:async(projectId,taskId,token)=>{await delay();return{data:null,success:false,error:'Task not found'};},getIndependentTaskById:async(taskId,token)=>{await delay();return{data:null,success:false,error:'Task not found'};},createTask:async(projectId,taskData,token)=>{await delay();return{data:{...taskData,id:''},success:true};},createIndependentTask:async(taskData,token)=>{await delay();return{data:{...taskData,id:''},success:true};},updateTask:async(projectId,taskId,taskData,token)=>{await delay();return{data:null,success:false,error:'Task not found'};},updateIndependentTask:async(taskId,taskData,token)=>{await delay();return{data:null,success:false,error:'Task not found'};},deleteTask:async(projectId,taskId,token)=>{await delay();return{success:true};},deleteIndependentTask:async(taskId,token)=>{await delay();return{success:true};},// Add task comment\naddComment:async(projectId,taskId,commentData,token)=>{if(FEATURES.OFFLINE_MODE){// In offline mode, simulate API response\nawait simulateDelay();// Get existing tasks from localStorage\nconst allTasks=JSON.parse(localStorage.getItem('tasks')||'[]');// Find the specific task to add the comment to\nconst taskIndex=allTasks.findIndex(t=>t.id===taskId&&t.projectId===projectId);if(taskIndex!==-1){// Create a new comment\nconst newComment={id:`comment-${Date.now()}`,taskId,text:commentData.text,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),author:{id:commentData.authorId,firstName:commentData.authorFirstName||'User',lastName:commentData.authorLastName||commentData.authorId}};// Add comment to the task\nif(!allTasks[taskIndex].comments){allTasks[taskIndex].comments=[];}allTasks[taskIndex].comments.push(newComment);// Save back to localStorage\nlocalStorage.setItem('tasks',JSON.stringify(allTasks));return{success:true,data:newComment,message:'Comment added successfully'};}else{throw new Error('Task not found');}}else{// In online mode, make actual API call\nconst response=await axios.post(`${API_BASE_URL}/projects/${projectId}/tasks/${taskId}/comments`,commentData,{headers:{Authorization:`Bearer ${token}`}});return{data:[],success:true};}}},// Risk endpoints\nrisks:{getAllRisks:async(projectId,token)=>{await delay();return{data:[],success:true};},getRiskById:async(projectId,riskId,token)=>{await delay();return{data:null,success:false,error:'Risk not found'};},createRisk:async(projectId,riskData,token)=>{await delay();return{data:{...riskData,id:''},success:true};},updateRisk:async(projectId,riskId,riskData,token)=>{await delay();return{data:null,success:false,error:'Risk not found'};},deleteRisk:async(projectId,riskId,token)=>{await delay();return{success:true};}},// Issue endpoints\nissues:{getAllIssues:async(projectId,token)=>{await delay();return{data:[],success:true};},getIssueById:async(projectId,issueId,token)=>{await delay();return{data:null,success:false,error:'Issue not found'};},createIssue:async(projectId,issueData,token)=>{await delay();return{data:{...issueData,id:''},success:true};},updateIssue:async(projectId,issueId,issueData,token)=>{await delay();return{data:null,success:false,error:'Issue not found'};},deleteIssue:async(projectId,issueId,token)=>{await delay();return{success:true};}},// Task Request endpoints\ntaskRequests:{createTaskRequest:async(requestData,token)=>{await delay();// Create a minimal TaskRequest object to satisfy type requirements\nconst defaultTaskRequest={id:uuidv4(),title:requestData.title||'',description:requestData.description||'',priority:requestData.priority||TaskPriority.MEDIUM,status:TaskRequestStatus.PENDING,requestedBy:requestData.requestedBy||{},projectId:requestData.projectId||'',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),...requestData};return{data:defaultTaskRequest,success:true};},getTaskRequestsByProject:async(projectId,token)=>{await delay();return{data:[],success:true};},getTaskRequestById:async(requestId,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},updateTaskRequestStatus:async(requestId,status,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},approveTaskRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},rejectTaskRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};}},// Assignment endpoints\nassignments,auditLogs:{getAuditLogs:async token=>{await delay();return{data:[],success:true};},getAuditLogById:async(logId,token)=>{await delay();return{data:null,success:false,error:'Audit log not found'};}},// Department endpoints\ndepartments:{getAllDepartments:async token=>{await delay();return{data:[],success:true};},getDepartmentById:async(departmentId,token)=>{await delay();return null;},createDepartment:async(departmentData,token)=>{await delay();const newDepartment={id:'',name:departmentData.name||'',description:departmentData.description||'',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{data:newDepartment,success:true};},updateDepartment:async(departmentId,departmentData,token)=>{await delay();return{data:null,success:false,error:'Department not found'};},deleteDepartment:async(departmentId,token)=>{await delay();return{data:{success:true,message:\"Department deleted successfully\"}};}},// Change Request endpoints\nchangeRequests:{getChangeRequestsByProject:async(projectId,token)=>{await delay();return{data:[],success:true};},getChangeRequestById:async(requestId,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},createChangeRequest:async(requestData,token)=>{await delay();return{data:{id:'',...requestData},success:true};},updateChangeRequestStatus:async(requestId,status,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},approveChangeRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},rejectChangeRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},getAllChangeRequests:async token=>{await delay();return{data:[],success:true};}},// Add meetings API with correct types\nmeetings:{getAllMeetings:async token=>{await delay();return{data:[],success:true};},getMeetingById:async(meetingId,token)=>{await delay();return{data:null,success:false,error:'Meeting not found'};},createMeeting:async(meetingData,token)=>{await delay();const newMeeting={id:'',title:meetingData.title||'',description:meetingData.description||'',startTime:meetingData.startTime||new Date().toISOString(),endTime:meetingData.endTime||new Date().toISOString(),organizer:{},participants:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{data:newMeeting,success:true};},updateMeeting:async(meetingId,meetingData,token)=>{await delay();return{data:null,success:false,error:'Meeting not found'};},deleteMeeting:async(meetingId,token)=>{await delay();return{success:true};}}};export default apiRoutes;","map":{"version":3,"names":["axios","API_BASE_URL","FEATURES","v4","uuidv4","UserRole","TaskPriority","RiskStatus","RiskImpact","IssueStatus","TaskRequestStatus","mockProjects","mockUsers","mockDepartments","importedMockDepartments","createDefaultTasks","AuthService","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","delay","Promise","resolve","setTimeout","sleep","ms","simulateDelay","Math","random","mockITDepartment","id","name","description","createdAt","Date","toISOString","updatedAt","defaultProjectId","mockTasks","defaultProjects","defaultMeetings","testUsers","admin","username","firstName","lastName","email","role","ADMIN","department","isActive","manager1","MANAGER","manager2","developer","DEVELOPER","designer","DESIGNER","getMockData","endpoint","console","log","startsWith","_endpoint$match","departmentId","match","find","d","_endpoint$match2","userId","user","u","_endpoint$match3","projectId","includes","project","p","tasks","filteredProjects","params","status","priority","search","filter","searchLower","toLowerCase","postMockData","data","newProject","length","progress","projectManagerId","manager","projectManager","teamMemberIds","Array","isArray","teamMembers","map","Boolean","push","handleResponse","response","success","message","apiRequest","method","arguments","undefined","USE_MOCK_DATA","getToken","responseData","url","error","createDefaultRisks","title","IDENTIFIED","impact","HIGH","probability","mitigation","owner","createdBy","ASSESSED","MEDIUM","createDefaultIssues","OPEN","IN_PROGRESS","RESOLVED","CRITICAL","resolutionSummary","login","password","defaultUsers","PROJECT_MANAGER","assignments","getAllAssignments","getAssignmentById","createAssignment","newAssignment","updateAssignment","deleteAssignment","apiRoutes","auth","adIdentifier","now","refreshToken","logout","users","getCurrentUser","getAllUsers","getUserById","createUser","userData","newUser","updateUser","deleteUser","assignRole","assignDepartment","getAllDepartments","projects","getAllProjects","getProjectById","createProject","projectData","updateProject","updatedData","deleteProject","uploadAttachment","formData","getAttachments","deleteAttachment","attachmentId","getProject","startDate","endDate","budget","approvalStatus","comments","reviewHistory","getAllTasks","getAllIndependentTasks","getTaskById","taskId","getIndependentTaskById","createTask","taskData","createIndependentTask","updateTask","updateIndependentTask","deleteTask","deleteIndependentTask","addComment","commentData","OFFLINE_MODE","allTasks","JSON","parse","taskIndex","findIndex","t","newComment","text","author","authorId","authorFirstName","authorLastName","setItem","stringify","Error","post","risks","getAllRisks","getRiskById","riskId","createRisk","riskData","updateRisk","deleteRisk","issues","getAllIssues","getIssueById","issueId","createIssue","issueData","updateIssue","deleteIssue","taskRequests","createTaskRequest","requestData","defaultTaskRequest","PENDING","requestedBy","getTaskRequestsByProject","getTaskRequestById","requestId","updateTaskRequestStatus","reviewNotes","approveTaskRequest","rejectTaskRequest","auditLogs","getAuditLogs","getAuditLogById","logId","departments","getDepartmentById","createDepartment","departmentData","newDepartment","updateDepartment","deleteDepartment","changeRequests","getChangeRequestsByProject","getChangeRequestById","createChangeRequest","updateChangeRequestStatus","approveChangeRequest","rejectChangeRequest","getAllChangeRequests","meetings","getAllMeetings","getMeetingById","meetingId","createMeeting","meetingData","newMeeting","startTime","endTime","organizer","participants","updateMeeting","deleteMeeting"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/services/api.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { API_BASE_URL, FEATURES } from '../config';\nimport LocalStorageService from './LocalStorageService';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ProjectStatus, TaskStatus, UserRole, TaskPriority, RiskStatus, RiskImpact, IssueStatus, Project, Task, User, Department, Meeting, Risk, Issue, Assignment, AssignmentStatus, ApiResponse, MeetingStatus, ProjectPriority, ProjectTemplateType, TaskRequestStatus } from '../types';\nimport { \n  mockProjects, \n  mockUsers, \n  mockRisks, \n  mockMeetings, \n  mockIssues,\n  mockDepartments as importedMockDepartments,\n  createDefaultTasks\n} from './mockData';\nimport AuthService from './AuthService';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Helper function to simulate delay\nconst delay = () => new Promise(resolve => setTimeout(resolve, 500));\n\n// Helper to simulate network delay\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Standard delay duration\nconst simulateDelay = () => sleep(Math.random() * 300 + 200); // 200-500ms\n\n// Create empty mock objects for all data types\nconst mockITDepartment: Department = {\n  id: '',\n  name: '',\n  description: '',\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n};\n\n// Empty arrays for all mock data\nconst defaultProjectId = '';\nconst mockTasks: Task[] = [];\nconst defaultProjects: Project[] = [];\nconst defaultMeetings: Meeting[] = [];\n\n// Empty test users\nconst testUsers = {\n  admin: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.ADMIN,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  manager1: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.MANAGER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  manager2: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.MANAGER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  developer: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.DEVELOPER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  designer: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.DESIGNER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n};\n\nfunction getMockData(endpoint: string, config?: AxiosRequestConfig): Promise<any> {\n  return new Promise((resolve) => {\n    // Simulate network delay\n    setTimeout(() => {\n      console.log(`[MOCK] GET request to ${endpoint}`);\n      \n      // Handle departments\n      if (endpoint.startsWith('/departments')) {\n        const departmentId = endpoint.match(/\\/departments\\/([^\\/]+)/)?.[1];\n        if (departmentId) {\n          const department = importedMockDepartments.find(d => d.id === departmentId);\n          return resolve(department || null);\n        }\n        return resolve(importedMockDepartments);\n      }\n      \n      // Handle users\n      if (endpoint.startsWith('/users')) {\n        const userId = endpoint.match(/\\/users\\/([^\\/]+)/)?.[1];\n        if (userId) {\n          const user = mockUsers.find(u => u.id === userId);\n          return resolve(user || null);\n        }\n        return resolve(mockUsers);\n      }\n      \n      // Handle projects\n      if (endpoint.startsWith('/projects')) {\n        const projectId = endpoint.match(/\\/projects\\/([^\\/]+)/)?.[1];\n        \n        if (endpoint.includes('/tasks')) {\n          // Handle tasks for a specific project\n          if (projectId) {\n            const project = mockProjects.find(p => p.id === projectId);\n            if (project) {\n              const tasks = createDefaultTasks(project.id);\n              return resolve(tasks);\n            }\n          }\n          return resolve([]);\n        }\n        \n        if (projectId) {\n          // Return a specific project\n          const project = mockProjects.find(p => p.id === projectId);\n          return resolve(project || null);\n        }\n        \n        // Return all projects, possibly filtered\n        let filteredProjects = [...mockProjects];\n        \n        // Handle query parameters for filtering\n        if (config?.params) {\n          const { departmentId, status, priority, search } = config.params;\n          \n          if (departmentId) {\n            filteredProjects = filteredProjects.filter(p => p.departmentId === departmentId);\n          }\n          \n          if (status) {\n            filteredProjects = filteredProjects.filter(p => p.status === status);\n          }\n          \n          if (priority) {\n            filteredProjects = filteredProjects.filter(p => p.priority === priority);\n          }\n          \n          if (search) {\n            const searchLower = search.toLowerCase();\n            filteredProjects = filteredProjects.filter(p => \n              p.name.toLowerCase().includes(searchLower) || \n              p.description.toLowerCase().includes(searchLower)\n            );\n          }\n        }\n        \n        return resolve(filteredProjects);\n      }\n      \n      // If no handler for this endpoint\n      console.log(`[MOCK] No handler for endpoint: ${endpoint}`);\n      resolve([]);\n    }, 600); // Simulate network delay\n  });\n}\n\n// Handle POST requests for mock data\nfunction postMockData(endpoint: string, data: any): Promise<any> {\n  return new Promise((resolve) => {\n    // Simulate network delay\n    setTimeout(() => {\n      console.log(`[MOCK] POST request to ${endpoint}`, data);\n      \n      // Handle project creation\n      if (endpoint === '/projects') {\n        const newProject = {\n          ...data,\n          id: `p${mockProjects.length + 1}`,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          progress: 0,\n        };\n        \n        // Link department\n        if (data.departmentId) {\n          const department = importedMockDepartments.find(d => d.id === data.departmentId);\n          if (department) {\n            newProject.department = department;\n          }\n        }\n        \n        // Link project manager\n        if (data.projectManagerId) {\n          const manager = mockUsers.find(u => u.id === data.projectManagerId);\n          if (manager) {\n            newProject.projectManager = manager;\n          }\n        }\n        \n        // Link team members\n        if (data.teamMemberIds && Array.isArray(data.teamMemberIds)) {\n          newProject.teamMembers = data.teamMemberIds\n            .map(id => mockUsers.find(u => u.id === id))\n            .filter(Boolean);\n        }\n        \n        mockProjects.push(newProject);\n        return resolve(newProject);\n      }\n      \n      // If no handler for this endpoint\n      console.log(`[MOCK] No POST handler for endpoint: ${endpoint}`);\n      resolve(data);\n    }, 800);\n  });\n}\n\n/**\n * Handles the API response\n */\nfunction handleResponse<T>(response: AxiosResponse): ApiResponse<T> {\n  if (response.status >= 200 && response.status < 300) {\n    return {\n      data: response.data,\n      success: true\n    };\n  } else {\n    return {\n      data: response.data,\n      success: false,\n      message: `Request failed with status ${response.status}`\n    };\n  }\n}\n\n/**\n * Main API request function that handles authentication and error handling\n */\nexport const apiRequest = async (endpoint: string, method: string = 'GET', data?: any): Promise<ApiResponse<any>> => {\n  const USE_MOCK_DATA = true; // Set to true for development without backend\n  \n  try {\n    const token = AuthService.getToken();\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n    };\n\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (USE_MOCK_DATA) {\n      // Return mock data (with persistence)\n      console.log(`Using mock data for endpoint: ${endpoint}, method: ${method}`);\n      if (method === 'GET') {\n        const responseData = await getMockData(endpoint, { params: data });\n        return {\n          data: responseData,\n          success: true\n        };\n      } else if (method === 'POST') {\n        const responseData = await postMockData(endpoint, data);\n        return {\n          data: responseData,\n          success: true\n        };\n      } else {\n        // For other methods, just return success\n        return {\n          data: data || {},\n          success: true\n        };\n      }\n    }\n\n    // Real API request\n    const config: AxiosRequestConfig = {\n      method,\n      url: endpoint,\n      headers,\n      ...(method === 'GET' ? { params: data } : { data }),\n    };\n\n    const response = await axios(config);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('API request failed:', error);\n    if (USE_MOCK_DATA) {\n      console.log(`Falling back to mock data for endpoint: ${endpoint}`);\n      if (method === 'GET') {\n        const responseData = await getMockData(endpoint, { params: data });\n        return {\n          data: responseData,\n          success: true\n        };\n      } else if (method === 'POST') {\n        const responseData = await postMockData(endpoint, data);\n        return {\n          data: responseData,\n          success: true\n        };\n      }\n    }\n    throw error;\n  }\n};\n\n// Default mock risks\nconst createDefaultRisks = (projectId: string) => [\n  {\n    id: '1',\n    projectId,\n    title: 'Data Migration Risk',\n    description: 'Risk of data loss during migration process',\n    status: RiskStatus.IDENTIFIED,\n    impact: RiskImpact.HIGH,\n    probability: 70,\n    mitigation: 'Create multiple backups before migration and perform test migrations on sample data',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-10T00:00:00Z',\n    updatedAt: '2023-01-10T00:00:00Z'\n  },\n  {\n    id: '2',\n    projectId,\n    title: 'Resource Availability Risk',\n    description: 'Risk of key team members being unavailable during critical project phases',\n    status: RiskStatus.ASSESSED,\n    impact: RiskImpact.MEDIUM,\n    probability: 50,\n    mitigation: 'Develop contingency plans and cross-train team members',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-15T00:00:00Z',\n    updatedAt: '2023-01-15T00:00:00Z'\n  }\n];\n\n// Default mock issues\nconst createDefaultIssues = (projectId: string) => [\n  {\n    id: '1',\n    projectId,\n    title: 'Integration Failure with Legacy System',\n    description: 'The new system cannot properly integrate with the existing legacy system',\n    status: IssueStatus.OPEN,\n    impact: RiskImpact.HIGH,\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-02-10T00:00:00Z',\n    updatedAt: '2023-02-10T00:00:00Z'\n  },\n  {\n    id: '2',\n    projectId,\n    title: 'Performance Bottleneck in Module A',\n    description: 'Module A performance is not meeting expected throughput requirements',\n    status: IssueStatus.IN_PROGRESS,\n    impact: RiskImpact.MEDIUM,\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-02-15T00:00:00Z',\n    updatedAt: '2023-02-20T00:00:00Z'\n  },\n  {\n    id: '3',\n    projectId,\n    title: 'Security Vulnerability in Authentication',\n    description: 'Security audit identified a potential vulnerability in the authentication process',\n    status: IssueStatus.RESOLVED,\n    impact: RiskImpact.CRITICAL,\n    resolutionSummary: 'Implemented updated security protocols and fixed the vulnerability with patch 1.2.3',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-25T00:00:00Z',\n    updatedAt: '2023-02-05T00:00:00Z'\n  }\n];\n\n// Helper function to simulate login\nexport const login = async (email: string, password: string) => {\n  // Return a minimal user object\n  return {\n    success: true,\n    data: {\n      id: '',\n      username: '',\n      firstName: '',\n      lastName: '',\n      email: email || '',\n      role: UserRole.ADMIN, // Still need admin role for access\n      department: {\n        id: '',\n        name: '',\n        description: ''\n      },\n      isActive: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    message: 'Login successful'\n  };\n};\n\nconst defaultUsers: User[] = [\n  {\n    id: '1',\n    username: 'john.doe',\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: importedMockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '2',\n    username: 'jane.smith',\n    firstName: 'Jane',\n    lastName: 'Smith',\n    email: 'jane.smith@themis.com',\n    role: UserRole.DEVELOPER,\n    department: importedMockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '3',\n    username: 'mike.johnson',\n    firstName: 'Mike',\n    lastName: 'Johnson',\n    email: 'mike.johnson@themis.com',\n    role: UserRole.DESIGNER,\n    department: importedMockDepartments[1],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '4',\n    username: 'sarah.wilson',\n    firstName: 'Sarah',\n    lastName: 'Wilson',\n    email: 'sarah.wilson@themis.com',\n    role: UserRole.DEVELOPER,\n    department: importedMockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '5',\n    username: 'david.brown',\n    firstName: 'David',\n    lastName: 'Brown',\n    email: 'david.brown@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: importedMockDepartments[2],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  }\n];\n\nconst assignments = {\n  getAllAssignments: async (token: string) => {\n    await delay();\n    return {\n      data: [],\n      success: true\n    };\n  },\n  \n  getAssignmentById: async (id: string, token: string): Promise<Assignment | null> => {\n    await delay();\n    return null;\n  },\n\n  createAssignment: async (data: Partial<Assignment>, token: string) => {\n    await delay();\n    const newAssignment: Assignment = {\n      id: '',\n      ...data,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    } as Assignment;\n    return {\n      success: true,\n      data: newAssignment,\n    };\n  },\n\n  updateAssignment: async (id: string, data: Partial<Assignment>, token: string) => {\n    await delay();\n    return {\n      success: false,\n      error: 'Assignment not found',\n    };\n  },\n\n  deleteAssignment: async (id: string, token: string) => {\n    await delay();\n    return {\n      success: true,\n    };\n  },\n};\n\n// Create a named API object to export instead of using anonymous default export\nconst apiRoutes = {\n  // Auth endpoints\n  auth: {\n    login: (adIdentifier: string) => {\n      // Mock implementation for testing without backend\n      console.log('Using mock login implementation');\n      return Promise.resolve({\n        userId: '1',\n        username: adIdentifier,\n        role: UserRole.ADMIN, // Defaulting to ADMIN for testing\n        departmentId: '1',\n        token: 'mock-token-' + Date.now(),\n        success: true,\n        message: 'Login successful'\n      });\n    },\n    \n    refreshToken: (refreshToken: string) => \n      apiRequest('/api/auth/refresh', 'POST', { refreshToken }),\n    \n    logout: (token: string) => \n      apiRequest('/api/auth/logout', 'POST', {}),\n  },\n\n  // User endpoints\n  users: {\n    getCurrentUser: async (token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'User not found'\n      };\n    },\n    \n    getAllUsers: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getUserById: async (userId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'User not found'\n      };\n    },\n    \n    createUser: async (userData: Partial<User>, token: string) => {\n      await delay();\n      const newUser: User = {\n        id: '',\n        username: userData.username || '',\n        firstName: userData.firstName || '',\n        lastName: userData.lastName || '',\n        email: userData.email || '',\n        role: userData.role || UserRole.DEVELOPER,\n        isActive: true,\n        department: {} as Department,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      } as User;\n      \n      return {\n        data: newUser,\n        success: true\n      };\n    },\n    \n    updateUser: async (userId: string, userData: Partial<User>, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'User not found'\n      };\n    },\n    \n    deleteUser: async (userId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    },\n    \n    assignRole: (userId: string, role: string, token: string) => \n      apiRequest(`/api/users/${userId}/role`, 'PUT', { role }),\n      \n    assignDepartment: (userId: string, departmentId: string, token: string) => \n      apiRequest(`/api/users/${userId}/department`, 'PUT', { departmentId }),\n      \n    getAllDepartments: (token: string) => \n      apiRequest('/api/users/departments', 'GET'),\n  },\n\n  // Project endpoints\n  projects: {\n    getAllProjects: async (token: string) => {\n      await simulateDelay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getProjectById: async (id: string, token: string) => {\n      await simulateDelay();\n      return {\n        data: null,\n        success: false,\n        error: 'Project not found'\n      };\n    },\n    \n    createProject: async (projectData: any, token: string) => {\n      await simulateDelay();\n      const newProject = {\n        id: projectData.id || uuidv4(),\n        ...projectData,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      \n      return {\n        data: newProject,\n        success: true\n      };\n    },\n    \n    updateProject: async (projectId: string, updatedData: Partial<Project>, token: string) => {\n      try {\n        await simulateDelay();\n        return {\n          data: null,\n          success: false,\n          error: 'Project not found'\n        };\n      } catch (error) {\n        console.error('Error updating project:', error);\n        throw error;\n      }\n    },\n    \n    deleteProject: async (projectId: string, token: string) => {\n      await simulateDelay();\n      return {\n        data: { message: 'Project deleted successfully' },\n        success: true\n      };\n    },\n      \n    uploadAttachment: (projectId: string, formData: FormData, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments`, 'POST', formData),\n      \n    getAttachments: (projectId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments`, 'GET'),\n      \n    deleteAttachment: (projectId: string, attachmentId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments/${attachmentId}`, 'DELETE'),\n\n    getProject: async (projectId: string, token: string) => {\n      try {\n        // In a real implementation, this would call the API\n        // const response = await axios.get(`${API_BASE_URL}/projects/${projectId}`, {\n        //   headers: { Authorization: `Bearer ${token}` }\n        // });\n        // return response;\n        \n        // For now, return mock data\n        return {\n          data: {\n            id: projectId,\n            name: \"Mock Project\",\n            description: \"This is a mock project returned by the API\",\n            startDate: new Date().toISOString(),\n            endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n            status: \"IN_PROGRESS\",\n            priority: \"MEDIUM\",\n            budget: 100000,\n            progress: 50,\n            department: {\n              id: \"dept-1\",\n              name: \"IT Department\"\n            },\n            projectManager: {\n              id: \"user-1\",\n              firstName: \"John\",\n              lastName: \"Doe\"\n            },\n            approvalStatus: \"SUBMITTED\",\n            comments: \"This is a sample comment on the project\",\n            reviewHistory: [],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        };\n      } catch (error) {\n        console.error('Error fetching project:', error);\n        throw error;\n      }\n    },\n  },\n\n  // Task endpoints\n  tasks: {\n    getAllTasks: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getAllIndependentTasks: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getTaskById: async (projectId: string, taskId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task not found'\n      };\n    },\n    \n    getIndependentTaskById: async (taskId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task not found'\n      };\n    },\n    \n    createTask: async (projectId: string, taskData: any, token: string) => {\n      await delay();\n      return {\n        data: { ...taskData, id: '' },\n        success: true\n      };\n    },\n    \n    createIndependentTask: async (taskData: any, token: string) => {\n      await delay();\n      return {\n        data: { ...taskData, id: '' },\n        success: true\n      };\n    },\n    \n    updateTask: async (projectId: string, taskId: string, taskData: any, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task not found'\n      };\n    },\n    \n    updateIndependentTask: async (taskId: string, taskData: any, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task not found'\n      };\n    },\n    \n    deleteTask: async (projectId: string, taskId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    },\n    \n    deleteIndependentTask: async (taskId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    },\n\n    // Add task comment\n    addComment: async (projectId: string, taskId: string, commentData: any, token: string) => {\n      if (FEATURES.OFFLINE_MODE) {\n        // In offline mode, simulate API response\n        await simulateDelay();\n        \n        // Get existing tasks from localStorage\n        const allTasks = JSON.parse(localStorage.getItem('tasks') || '[]');\n        \n        // Find the specific task to add the comment to\n        const taskIndex = allTasks.findIndex((t: any) => t.id === taskId && t.projectId === projectId);\n        \n        if (taskIndex !== -1) {\n          // Create a new comment\n          const newComment = {\n            id: `comment-${Date.now()}`,\n            taskId,\n            text: commentData.text,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            author: {\n              id: commentData.authorId,\n              firstName: commentData.authorFirstName || 'User',\n              lastName: commentData.authorLastName || commentData.authorId,\n            }\n          };\n          \n          // Add comment to the task\n          if (!allTasks[taskIndex].comments) {\n            allTasks[taskIndex].comments = [];\n          }\n          \n          allTasks[taskIndex].comments.push(newComment);\n          \n          // Save back to localStorage\n          localStorage.setItem('tasks', JSON.stringify(allTasks));\n          \n          return {\n            success: true,\n            data: newComment,\n            message: 'Comment added successfully'\n          };\n        } else {\n          throw new Error('Task not found');\n        }\n      } else {\n        // In online mode, make actual API call\n        const response = await axios.post(\n          `${API_BASE_URL}/projects/${projectId}/tasks/${taskId}/comments`,\n          commentData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n        );\n        return {\n          data: [],\n          success: true\n        };\n      }\n    },\n  },\n\n  // Risk endpoints\n  risks: {\n    getAllRisks: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getRiskById: async (projectId: string, riskId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Risk not found'\n      };\n    },\n    \n    createRisk: async (projectId: string, riskData: any, token: string) => {\n      await delay();\n      return {\n        data: { ...riskData, id: '' },\n        success: true\n      };\n    },\n    \n    updateRisk: async (projectId: string, riskId: string, riskData: any, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Risk not found'\n      };\n    },\n    \n    deleteRisk: async (projectId: string, riskId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    },\n  },\n\n  // Issue endpoints\n  issues: {\n    getAllIssues: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getIssueById: async (projectId: string, issueId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Issue not found'\n      };\n    },\n    \n    createIssue: async (projectId: string, issueData: Partial<Issue>, token: string) => {\n      await delay();\n      return {\n        data: { ...issueData, id: '' } as Issue,\n        success: true\n      };\n    },\n    \n    updateIssue: async (projectId: string, issueId: string, issueData: Partial<Issue>, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Issue not found'\n      };\n    },\n    \n    deleteIssue: async (projectId: string, issueId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    }\n  },\n\n  // Task Request endpoints\n  taskRequests: {\n    createTaskRequest: async (requestData: any, token: string) => {\n      await delay();\n      // Create a minimal TaskRequest object to satisfy type requirements\n      const defaultTaskRequest = {\n        id: uuidv4(),\n        title: requestData.title || '',\n        description: requestData.description || '',\n        priority: requestData.priority || TaskPriority.MEDIUM,\n        status: TaskRequestStatus.PENDING,\n        requestedBy: requestData.requestedBy || {},\n        projectId: requestData.projectId || '',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        ...requestData\n      };\n      \n      return {\n        data: defaultTaskRequest,\n        success: true\n      };\n    },\n      \n    getTaskRequestsByProject: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n      \n    getTaskRequestById: async (requestId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    updateTaskRequestStatus: async (requestId: string, status: any, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    approveTaskRequest: async (requestId: string, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    rejectTaskRequest: async (requestId: string, reviewNotes: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    }\n  },\n\n  // Assignment endpoints\n  assignments,\n\n  auditLogs: {\n    getAuditLogs: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getAuditLogById: async (logId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Audit log not found'\n      };\n    }\n  },\n\n  // Department endpoints\n  departments: {\n    getAllDepartments: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getDepartmentById: async (departmentId: string, token: string): Promise<Department | null> => {\n      await delay();\n      return null;\n    },\n    \n    createDepartment: async (departmentData: Partial<Department>, token: string) => {\n      await delay();\n      const newDepartment: Department = {\n        id: '',\n        name: departmentData.name || '',\n        description: departmentData.description || '',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      } as Department;\n      \n      return {\n        data: newDepartment,\n        success: true\n      };\n    },\n    \n    updateDepartment: async (departmentId: string, departmentData: Partial<Department>, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Department not found'\n      };\n    },\n    \n    deleteDepartment: async (departmentId: string, token: string) => {\n      await delay();\n      return {\n        data: {\n          success: true,\n          message: \"Department deleted successfully\"\n        }\n      };\n    }\n  },\n  \n  // Change Request endpoints\n  changeRequests: {\n    getChangeRequestsByProject: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n      \n    getChangeRequestById: async (requestId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    createChangeRequest: async (requestData: any, token: string) => {\n      await delay();\n      return {\n        data: { id: '', ...requestData },\n        success: true\n      };\n    },\n      \n    updateChangeRequestStatus: async (requestId: string, status: any, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    approveChangeRequest: async (requestId: string, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    rejectChangeRequest: async (requestId: string, reviewNotes: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    getAllChangeRequests: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    }\n  },\n\n  // Add meetings API with correct types\n  meetings: {\n    getAllMeetings: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getMeetingById: async (meetingId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Meeting not found'\n      };\n    },\n    \n    createMeeting: async (meetingData: Partial<Meeting>, token: string) => {\n      await delay();\n      const newMeeting: Meeting = {\n        id: '',\n        title: meetingData.title || '',\n        description: meetingData.description || '',\n        startTime: meetingData.startTime || new Date().toISOString(),\n        endTime: meetingData.endTime || new Date().toISOString(),\n        organizer: {} as User,\n        participants: [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      } as Meeting;\n      \n      return {\n        data: newMeeting,\n        success: true\n      };\n    },\n    \n    updateMeeting: async (meetingId: string, meetingData: Partial<Meeting>, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Meeting not found'\n      };\n    },\n    \n    deleteMeeting: async (meetingId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    }\n  },\n};\n\nexport default apiRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}