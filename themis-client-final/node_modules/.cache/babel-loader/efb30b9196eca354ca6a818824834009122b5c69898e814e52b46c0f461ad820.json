{"ast":null,"code":"import { ProjectStatus, ProjectPriority } from './types/index';\n\n// Re-export from types/index\nexport { ProjectStatus, ProjectPriority };\n\n// Define and export enums directly\nexport let TaskStatus = /*#__PURE__*/function (TaskStatus) {\n  TaskStatus[\"TODO\"] = \"TODO\";\n  TaskStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n  TaskStatus[\"REVIEW\"] = \"REVIEW\";\n  TaskStatus[\"DONE\"] = \"DONE\";\n  return TaskStatus;\n}({});\nexport let TaskPriority = /*#__PURE__*/function (TaskPriority) {\n  TaskPriority[\"LOW\"] = \"LOW\";\n  TaskPriority[\"MEDIUM\"] = \"MEDIUM\";\n  TaskPriority[\"HIGH\"] = \"HIGH\";\n  return TaskPriority;\n}({});\nexport let UserRole = /*#__PURE__*/function (UserRole) {\n  UserRole[\"ADMIN\"] = \"ADMIN\";\n  UserRole[\"PROJECT_MANAGER\"] = \"PROJECT_MANAGER\";\n  UserRole[\"TEAM_LEAD\"] = \"TEAM_LEAD\";\n  UserRole[\"DEVELOPER\"] = \"DEVELOPER\";\n  UserRole[\"DESIGNER\"] = \"DESIGNER\";\n  UserRole[\"QA\"] = \"QA\";\n  UserRole[\"SUB_PMO\"] = \"SUB_PMO\";\n  UserRole[\"MAIN_PMO\"] = \"MAIN_PMO\";\n  UserRole[\"DEPARTMENT_DIRECTOR\"] = \"DEPARTMENT_DIRECTOR\";\n  UserRole[\"EXECUTIVE\"] = \"EXECUTIVE\";\n  UserRole[\"MANAGER\"] = \"MANAGER\";\n  UserRole[\"PENDING\"] = \"PENDING\";\n  return UserRole;\n}({});\nexport let RiskStatus = /*#__PURE__*/function (RiskStatus) {\n  RiskStatus[\"IDENTIFIED\"] = \"IDENTIFIED\";\n  RiskStatus[\"ANALYZING\"] = \"ANALYZING\";\n  RiskStatus[\"MONITORED\"] = \"MONITORED\";\n  RiskStatus[\"ASSESSED\"] = \"ASSESSED\";\n  RiskStatus[\"MITIGATED\"] = \"MITIGATED\";\n  RiskStatus[\"CLOSED\"] = \"CLOSED\";\n  return RiskStatus;\n}({});\nexport let RiskImpact = /*#__PURE__*/function (RiskImpact) {\n  RiskImpact[\"LOW\"] = \"LOW\";\n  RiskImpact[\"MEDIUM\"] = \"MEDIUM\";\n  RiskImpact[\"HIGH\"] = \"HIGH\";\n  RiskImpact[\"CRITICAL\"] = \"CRITICAL\";\n  return RiskImpact;\n}({});\nexport let IssueStatus = /*#__PURE__*/function (IssueStatus) {\n  IssueStatus[\"OPEN\"] = \"OPEN\";\n  IssueStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n  IssueStatus[\"RESOLVED\"] = \"RESOLVED\";\n  IssueStatus[\"CLOSED\"] = \"CLOSED\";\n  return IssueStatus;\n}({});\nexport let TaskRequestStatus = /*#__PURE__*/function (TaskRequestStatus) {\n  TaskRequestStatus[\"PENDING\"] = \"PENDING\";\n  TaskRequestStatus[\"APPROVED\"] = \"APPROVED\";\n  TaskRequestStatus[\"REJECTED\"] = \"REJECTED\";\n  TaskRequestStatus[\"IN_REVIEW\"] = \"IN_REVIEW\";\n  return TaskRequestStatus;\n}({});\nexport let MeetingStatus = /*#__PURE__*/function (MeetingStatus) {\n  MeetingStatus[\"SCHEDULED\"] = \"SCHEDULED\";\n  MeetingStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n  MeetingStatus[\"COMPLETED\"] = \"COMPLETED\";\n  MeetingStatus[\"CANCELLED\"] = \"CANCELLED\";\n  return MeetingStatus;\n}({});\nexport let AssignmentStatus = /*#__PURE__*/function (AssignmentStatus) {\n  AssignmentStatus[\"PENDING\"] = \"PENDING\";\n  AssignmentStatus[\"ACCEPTED\"] = \"ACCEPTED\";\n  AssignmentStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n  AssignmentStatus[\"COMPLETED\"] = \"COMPLETED\";\n  AssignmentStatus[\"REJECTED\"] = \"REJECTED\";\n  AssignmentStatus[\"CANCELLED\"] = \"CANCELLED\";\n  return AssignmentStatus;\n}({});\n\n// Interfaces\n\n// Helper functions for role-based permissions\nexport const canManageProjects = role => {\n  return role === UserRole.ADMIN || role === UserRole.PROJECT_MANAGER || role === UserRole.SUB_PMO || role === UserRole.MAIN_PMO;\n};\nexport const canApproveProjects = role => {\n  return role === UserRole.ADMIN || role === UserRole.SUB_PMO || role === UserRole.MAIN_PMO;\n};\nexport const canAddTasks = role => {\n  return role === UserRole.ADMIN || role === UserRole.PROJECT_MANAGER || role === UserRole.SUB_PMO || role === UserRole.MAIN_PMO;\n};\nexport const canRequestTasks = role => {\n  return role === UserRole.PROJECT_MANAGER || role === UserRole.SUB_PMO || role === UserRole.MAIN_PMO;\n};\nexport const canViewAllProjects = role => {\n  return role === UserRole.ADMIN || role === UserRole.MAIN_PMO || role === UserRole.EXECUTIVE;\n};","map":{"version":3,"names":["ProjectStatus","ProjectPriority","TaskStatus","TaskPriority","UserRole","RiskStatus","RiskImpact","IssueStatus","TaskRequestStatus","MeetingStatus","AssignmentStatus","canManageProjects","role","ADMIN","PROJECT_MANAGER","SUB_PMO","MAIN_PMO","canApproveProjects","canAddTasks","canRequestTasks","canViewAllProjects","EXECUTIVE"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/types.ts"],"sourcesContent":["import { ProjectStatus, ProjectPriority, ProjectTemplateType } from './types/index';\n\n// Re-export from types/index\nexport { ProjectStatus, ProjectPriority };\n\n// Define and export enums directly\nexport enum TaskStatus {\n  TODO = 'TODO',\n  IN_PROGRESS = 'IN_PROGRESS',\n  REVIEW = 'REVIEW',\n  DONE = 'DONE'\n}\n\nexport enum TaskPriority {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH'\n}\n\nexport enum UserRole {\n  ADMIN = 'ADMIN',\n  PROJECT_MANAGER = 'PROJECT_MANAGER',\n  TEAM_LEAD = 'TEAM_LEAD',\n  DEVELOPER = 'DEVELOPER',\n  DESIGNER = 'DESIGNER',\n  QA = 'QA',\n  SUB_PMO = 'SUB_PMO',\n  MAIN_PMO = 'MAIN_PMO',\n  DEPARTMENT_DIRECTOR = 'DEPARTMENT_DIRECTOR',\n  EXECUTIVE = 'EXECUTIVE',\n  MANAGER = 'MANAGER',\n  PENDING = 'PENDING'\n}\n\nexport enum RiskStatus {\n  IDENTIFIED = 'IDENTIFIED',\n  ANALYZING = 'ANALYZING',\n  MONITORED = 'MONITORED',\n  ASSESSED = 'ASSESSED',\n  MITIGATED = 'MITIGATED',\n  CLOSED = 'CLOSED'\n}\n\nexport enum RiskImpact {\n  LOW = 'LOW',\n  MEDIUM = 'MEDIUM',\n  HIGH = 'HIGH',\n  CRITICAL = 'CRITICAL'\n}\n\nexport enum IssueStatus {\n  OPEN = 'OPEN',\n  IN_PROGRESS = 'IN_PROGRESS',\n  RESOLVED = 'RESOLVED',\n  CLOSED = 'CLOSED'\n}\n\nexport enum TaskRequestStatus {\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  REJECTED = 'REJECTED',\n  IN_REVIEW = 'IN_REVIEW'\n}\n\nexport enum MeetingStatus {\n  SCHEDULED = 'SCHEDULED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n  CANCELLED = 'CANCELLED'\n}\n\nexport enum AssignmentStatus {\n  PENDING = 'PENDING',\n  ACCEPTED = 'ACCEPTED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n  REJECTED = 'REJECTED',\n  CANCELLED = 'CANCELLED'\n}\n\n// Interfaces\nexport interface Department {\n  id: string;\n  name: string;\n  description?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: UserRole;\n  department: Department;\n  username?: string;\n  isActive?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  description: string;\n  client: string;\n  status: ProjectStatus;\n  priority: ProjectPriority;\n  startDate: string;\n  endDate: string;\n  projectManager: User;\n  department: Department;\n  progress: number;\n  budget: number;\n  actualCost: number;\n  createdBy?: User;\n  createdAt?: string;\n  updatedAt?: string;\n  templateType?: ProjectTemplateType;\n}\n\nexport interface ProjectWithTeam extends Project {\n  team: User[];\n}\n\nexport interface Attachment {\n  id: string;\n  name: string;\n  filename?: string;\n  url: string;\n  size: number;\n  type: string;\n  uploadedBy: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Task {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n  priority: TaskPriority;\n  startDate: string;\n  dueDate: string;\n  projectId: string;\n  assignee?: User;\n  project: Project;\n  isMilestone?: boolean;\n  createdBy?: User;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Comment {\n  id: string;\n  content: string;\n  task: {\n    id: string;\n    title: string;\n  };\n  user: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Request {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskRequestStatus;\n  priority: TaskPriority;\n  dueDate: string;\n  requestor: User;\n  project: Project;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface TaskRequest {\n  id?: string;\n  title: string;\n  description: string;\n  priority: TaskPriority;\n  status: TaskRequestStatus;\n  dueDate: string;\n  projectId: string;\n  requestedBy: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  reviewer?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  reviewNotes?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Risk {\n  id: string;\n  title: string;\n  description: string;\n  status: RiskStatus;\n  impact: RiskImpact;\n  probability: number;\n  projectId: string;\n  owner: User;\n  createdBy: User;\n  mitigation?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Issue {\n  id: string;\n  title: string;\n  description: string;\n  status: IssueStatus;\n  impact: RiskImpact;\n  projectId: string;\n  owner: User;\n  createdBy: User;\n  resolutionSummary?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Meeting {\n  id: string;\n  title: string;\n  description: string;\n  date?: string;\n  startTime: string;\n  endTime: string;\n  location?: string;\n  status: MeetingStatus;\n  organizer: User;\n  attendees?: User[];\n  participants: User[];\n  isActive?: boolean;\n  meetingLink?: string;\n  projectId?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Assignment {\n  id: string;\n  title: string;\n  description: string;\n  status: AssignmentStatus;\n  priority: TaskPriority;\n  dueDate: string;\n  assignedTo: User;\n  assignedBy: User;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface KPI {\n  id: string;\n  name: string;\n  description: string;\n  value: number;\n  target: number;\n  unit: string;\n  projectId?: string;\n  departmentId?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface FinancialEntry {\n  id: string;\n  amount: number;\n  description: string;\n  date: string;\n  type: 'INCOME' | 'EXPENSE';\n  category: string;\n  projectId: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n  userId?: string;\n  username?: string;\n  role?: UserRole;\n  departmentId?: string;\n  success?: boolean;\n  message?: string;\n}\n\n// Helper functions for role-based permissions\nexport const canManageProjects = (role: UserRole): boolean => {\n  return role === UserRole.ADMIN || \n         role === UserRole.PROJECT_MANAGER || \n         role === UserRole.SUB_PMO || \n         role === UserRole.MAIN_PMO;\n};\n\nexport const canApproveProjects = (role: UserRole): boolean => {\n  return role === UserRole.ADMIN || \n         role === UserRole.SUB_PMO || \n         role === UserRole.MAIN_PMO;\n};\n\nexport const canAddTasks = (role: UserRole): boolean => {\n  return role === UserRole.ADMIN || \n         role === UserRole.PROJECT_MANAGER || \n         role === UserRole.SUB_PMO || \n         role === UserRole.MAIN_PMO;\n};\n\nexport const canRequestTasks = (role: UserRole): boolean => {\n  return role === UserRole.PROJECT_MANAGER || \n         role === UserRole.SUB_PMO || \n         role === UserRole.MAIN_PMO;\n};\n\nexport const canViewAllProjects = (role: UserRole): boolean => {\n  return role === UserRole.ADMIN || \n         role === UserRole.MAIN_PMO || \n         role === UserRole.EXECUTIVE;\n}; "],"mappings":"AAAA,SAASA,aAAa,EAAEC,eAAe,QAA6B,eAAe;;AAEnF;AACA,SAASD,aAAa,EAAEC,eAAe;;AAEvC;AACA,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAOtB,WAAYC,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAMxB,WAAYC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAepB,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAStB,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAOtB,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAOvB,WAAYC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;AAO7B,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAOzB,WAAYC,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;;AAS5B;;AA2OA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,IAAc,IAAc;EAC5D,OAAOA,IAAI,KAAKR,QAAQ,CAACS,KAAK,IACvBD,IAAI,KAAKR,QAAQ,CAACU,eAAe,IACjCF,IAAI,KAAKR,QAAQ,CAACW,OAAO,IACzBH,IAAI,KAAKR,QAAQ,CAACY,QAAQ;AACnC,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIL,IAAc,IAAc;EAC7D,OAAOA,IAAI,KAAKR,QAAQ,CAACS,KAAK,IACvBD,IAAI,KAAKR,QAAQ,CAACW,OAAO,IACzBH,IAAI,KAAKR,QAAQ,CAACY,QAAQ;AACnC,CAAC;AAED,OAAO,MAAME,WAAW,GAAIN,IAAc,IAAc;EACtD,OAAOA,IAAI,KAAKR,QAAQ,CAACS,KAAK,IACvBD,IAAI,KAAKR,QAAQ,CAACU,eAAe,IACjCF,IAAI,KAAKR,QAAQ,CAACW,OAAO,IACzBH,IAAI,KAAKR,QAAQ,CAACY,QAAQ;AACnC,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIP,IAAc,IAAc;EAC1D,OAAOA,IAAI,KAAKR,QAAQ,CAACU,eAAe,IACjCF,IAAI,KAAKR,QAAQ,CAACW,OAAO,IACzBH,IAAI,KAAKR,QAAQ,CAACY,QAAQ;AACnC,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAIR,IAAc,IAAc;EAC7D,OAAOA,IAAI,KAAKR,QAAQ,CAACS,KAAK,IACvBD,IAAI,KAAKR,QAAQ,CAACY,QAAQ,IAC1BJ,IAAI,KAAKR,QAAQ,CAACiB,SAAS;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}