{"ast":null,"code":"import React from'react';import{Box}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";export const GridItem=props=>{const{children,xs,sm,md,lg,xl,sx,...rest}=props;// Determine flex basis based on columns (12 grid system)\nconst getFlexBasis=columns=>{if(columns===undefined)return undefined;if(columns===true)return'0 0 auto';if(columns===false)return undefined;return`${columns/12*100}%`;};return/*#__PURE__*/_jsx(Box,{sx:{flexGrow:0,flexBasis:{xs:getFlexBasis(xs),sm:getFlexBasis(sm),md:getFlexBasis(md),lg:getFlexBasis(lg),xl:getFlexBasis(xl)},maxWidth:{xs:xs?xs===true?'100%':`${Number(xs)/12*100}%`:undefined,sm:sm?sm===true?'100%':`${Number(sm)/12*100}%`:undefined,md:md?md===true?'100%':`${Number(md)/12*100}%`:undefined,lg:lg?lg===true?'100%':`${Number(lg)/12*100}%`:undefined,xl:xl?xl===true?'100%':`${Number(xl)/12*100}%`:undefined},...sx},...rest,children:children});};export const GridContainer=_ref=>{let{children,spacing=2,sx,...rest}=_ref;// Convert spacing to margin/padding\nconst gap=spacing*8;// MUI spacing unit is 8px\nreturn/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:`${gap}px`,width:'100%',...sx},...rest,children:children});};","map":{"version":3,"names":["React","Box","jsx","_jsx","GridItem","props","children","xs","sm","md","lg","xl","sx","rest","getFlexBasis","columns","undefined","flexGrow","flexBasis","maxWidth","Number","GridContainer","_ref","spacing","gap","display","flexWrap","width"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/common/MuiGridWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport { Box } from '@mui/material';\nimport { SxProps, Theme } from '@mui/material/styles';\n\ninterface GridItemProps {\n  children: React.ReactNode;\n  xs?: number | boolean;\n  sm?: number | boolean;\n  md?: number | boolean;\n  lg?: number | boolean;\n  xl?: number | boolean;\n  sx?: SxProps<Theme>;\n}\n\nexport const GridItem: React.FC<GridItemProps> = (props) => {\n  const { children, xs, sm, md, lg, xl, sx, ...rest } = props;\n  \n  // Determine flex basis based on columns (12 grid system)\n  const getFlexBasis = (columns: number | boolean | undefined) => {\n    if (columns === undefined) return undefined;\n    if (columns === true) return '0 0 auto';\n    if (columns === false) return undefined;\n    return `${(columns / 12) * 100}%`;\n  };\n\n  return (\n    <Box\n      sx={{\n        flexGrow: 0,\n        flexBasis: {\n          xs: getFlexBasis(xs),\n          sm: getFlexBasis(sm),\n          md: getFlexBasis(md),\n          lg: getFlexBasis(lg),\n          xl: getFlexBasis(xl),\n        },\n        maxWidth: {\n          xs: xs ? (xs === true ? '100%' : `${(Number(xs) / 12) * 100}%`) : undefined,\n          sm: sm ? (sm === true ? '100%' : `${(Number(sm) / 12) * 100}%`) : undefined,\n          md: md ? (md === true ? '100%' : `${(Number(md) / 12) * 100}%`) : undefined,\n          lg: lg ? (lg === true ? '100%' : `${(Number(lg) / 12) * 100}%`) : undefined,\n          xl: xl ? (xl === true ? '100%' : `${(Number(xl) / 12) * 100}%`) : undefined,\n        },\n        ...sx\n      }}\n      {...rest}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport const GridContainer: React.FC<{\n  children: React.ReactNode;\n  spacing?: number;\n  sx?: SxProps<Theme>;\n}> = ({ children, spacing = 2, sx, ...rest }) => {\n  // Convert spacing to margin/padding\n  const gap = spacing * 8; // MUI spacing unit is 8px\n  \n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: `${gap}px`,\n        width: '100%',\n        ...sx,\n      }}\n      {...rest}\n    >\n      {children}\n    </Box>\n  );\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAapC,MAAO,MAAM,CAAAC,QAAiC,CAAIC,KAAK,EAAK,CAC1D,KAAM,CAAEC,QAAQ,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAE,GAAGC,IAAK,CAAC,CAAGR,KAAK,CAE3D;AACA,KAAM,CAAAS,YAAY,CAAIC,OAAqC,EAAK,CAC9D,GAAIA,OAAO,GAAKC,SAAS,CAAE,MAAO,CAAAA,SAAS,CAC3C,GAAID,OAAO,GAAK,IAAI,CAAE,MAAO,UAAU,CACvC,GAAIA,OAAO,GAAK,KAAK,CAAE,MAAO,CAAAC,SAAS,CACvC,MAAO,GAAID,OAAO,CAAG,EAAE,CAAI,GAAG,GAAG,CACnC,CAAC,CAED,mBACEZ,IAAA,CAACF,GAAG,EACFW,EAAE,CAAE,CACFK,QAAQ,CAAE,CAAC,CACXC,SAAS,CAAE,CACTX,EAAE,CAAEO,YAAY,CAACP,EAAE,CAAC,CACpBC,EAAE,CAAEM,YAAY,CAACN,EAAE,CAAC,CACpBC,EAAE,CAAEK,YAAY,CAACL,EAAE,CAAC,CACpBC,EAAE,CAAEI,YAAY,CAACJ,EAAE,CAAC,CACpBC,EAAE,CAAEG,YAAY,CAACH,EAAE,CACrB,CAAC,CACDQ,QAAQ,CAAE,CACRZ,EAAE,CAAEA,EAAE,CAAIA,EAAE,GAAK,IAAI,CAAG,MAAM,CAAG,GAAIa,MAAM,CAACb,EAAE,CAAC,CAAG,EAAE,CAAI,GAAG,GAAG,CAAIS,SAAS,CAC3ER,EAAE,CAAEA,EAAE,CAAIA,EAAE,GAAK,IAAI,CAAG,MAAM,CAAG,GAAIY,MAAM,CAACZ,EAAE,CAAC,CAAG,EAAE,CAAI,GAAG,GAAG,CAAIQ,SAAS,CAC3EP,EAAE,CAAEA,EAAE,CAAIA,EAAE,GAAK,IAAI,CAAG,MAAM,CAAG,GAAIW,MAAM,CAACX,EAAE,CAAC,CAAG,EAAE,CAAI,GAAG,GAAG,CAAIO,SAAS,CAC3EN,EAAE,CAAEA,EAAE,CAAIA,EAAE,GAAK,IAAI,CAAG,MAAM,CAAG,GAAIU,MAAM,CAACV,EAAE,CAAC,CAAG,EAAE,CAAI,GAAG,GAAG,CAAIM,SAAS,CAC3EL,EAAE,CAAEA,EAAE,CAAIA,EAAE,GAAK,IAAI,CAAG,MAAM,CAAG,GAAIS,MAAM,CAACT,EAAE,CAAC,CAAG,EAAE,CAAI,GAAG,GAAG,CAAIK,SACpE,CAAC,CACD,GAAGJ,EACL,CAAE,IACEC,IAAI,CAAAP,QAAA,CAEPA,QAAQ,CACN,CAAC,CAEV,CAAC,CAED,MAAO,MAAM,CAAAe,aAIX,CAAGC,IAAA,EAA4C,IAA3C,CAAEhB,QAAQ,CAAEiB,OAAO,CAAG,CAAC,CAAEX,EAAE,CAAE,GAAGC,IAAK,CAAC,CAAAS,IAAA,CAC1C;AACA,KAAM,CAAAE,GAAG,CAAGD,OAAO,CAAG,CAAC,CAAE;AAEzB,mBACEpB,IAAA,CAACF,GAAG,EACFW,EAAE,CAAE,CACFa,OAAO,CAAE,MAAM,CACfC,QAAQ,CAAE,MAAM,CAChBF,GAAG,CAAE,GAAGA,GAAG,IAAI,CACfG,KAAK,CAAE,MAAM,CACb,GAAGf,EACL,CAAE,IACEC,IAAI,CAAAP,QAAA,CAEPA,QAAQ,CACN,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}