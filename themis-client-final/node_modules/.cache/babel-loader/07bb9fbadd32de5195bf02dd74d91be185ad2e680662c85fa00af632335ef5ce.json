{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Analytics/AnalyticsDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Box, Paper, Typography, FormControl, InputLabel, Select, MenuItem, Button, Stack, Alert } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, LineChart, Line, AreaChart, Area, ScatterChart, Scatter, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar, ComposedChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Cell, ResponsiveContainer } from 'recharts';\nimport { useProjects } from '../../context/ProjectContext';\nimport { ProjectStatus, UserRole, AssignmentStatus, RiskImpact, IssueStatus } from '../../types';\nimport { useAuth } from '../../hooks/useAuth';\nimport api from '../../services/api';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\nconst AnalyticsDashboard = () => {\n  _s();\n  var _metrics$find3;\n  const {\n    projects\n  } = useProjects();\n  const {\n    user,\n    canViewAllProjects\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const [currentProject, setCurrentProject] = useState(null);\n  const [risks, setRisks] = useState([]);\n  const [issues, setIssues] = useState([]);\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedMetric, setSelectedMetric] = useState('');\n  const [selectedChartType, setSelectedChartType] = useState('bar');\n  const [charts, setCharts] = useState([]);\n  const metrics = [{\n    value: 'client',\n    label: t('analytics.projectsByClient', 'Number of Projects by Client'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO]\n  }, {\n    value: 'projectManager',\n    label: t('analytics.projectsByManager', 'Number of Projects by Project Manager'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR]\n  }, {\n    value: 'priority',\n    label: t('analytics.projectsByPriority', 'Number of Projects by Priority'),\n    allowedRoles: Object.values(UserRole)\n  }, {\n    value: 'status',\n    label: t('analytics.projectsByStatus', 'Number of Projects by Status'),\n    allowedRoles: Object.values(UserRole)\n  }, {\n    value: 'department',\n    label: t('analytics.projectsByDepartment', 'Number of Projects by Department'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO]\n  }, {\n    value: 'delayed',\n    label: t('analytics.delayedProjects', 'Number of Delayed Projects'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER]\n  }, {\n    value: 'stalled',\n    label: t('analytics.stalledProjects', 'Number of Stalled Projects'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER]\n  }, {\n    value: 'inProgress',\n    label: t('analytics.inProgressProjects', 'Number of Projects In Progress'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.SUB_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER, UserRole.DEVELOPER]\n  },\n  // Budget metrics\n  {\n    value: 'budgetByDepartment',\n    label: t('analytics.budgetByDepartment', 'Budget Allocation by Department'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO],\n    description: t('analytics.budgetByDepartmentDesc', 'Shows how budget is distributed across departments')\n  }, {\n    value: 'budgetVsActual',\n    label: t('analytics.budgetVsActual', 'Budget vs Actual Cost'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER],\n    description: t('analytics.budgetVsActualDesc', 'Compares planned budget with actual expenditure')\n  }, {\n    value: 'topBudgetProjects',\n    label: t('analytics.topBudgetProjects', 'Top Projects by Budget'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR],\n    description: t('analytics.topBudgetProjectsDesc', 'Shows projects with the highest budget allocation')\n  }, {\n    value: 'budgetUtilization',\n    label: t('analytics.budgetUtilization', 'Budget Utilization Rate'),\n    allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER],\n    description: t('analytics.budgetUtilizationDesc', 'Shows percentage of budget utilized by projects')\n  },\n  // Risk metrics\n  {\n    value: 'riskStatus',\n    label: t('analytics.risksByStatus', 'Risks by Status'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.risksByStatusDesc', 'Shows the distribution of risks by their status')\n  }, {\n    value: 'riskImpact',\n    label: t('analytics.risksByImpact', 'Risks by Impact Level'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.risksByImpactDesc', 'Shows the distribution of risks by their impact level')\n  }, {\n    value: 'highProbabilityRisks',\n    label: t('analytics.highProbRisks', 'High Probability Risks'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.highProbRisksDesc', 'Shows risks with probability greater than 70%')\n  },\n  // Issue metrics\n  {\n    value: 'issueStatus',\n    label: t('analytics.issuesByStatus', 'Issues by Status'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.issuesByStatusDesc', 'Shows the distribution of issues by their status')\n  }, {\n    value: 'issuePriority',\n    label: t('analytics.issuesByPriority', 'Issues by Priority'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.issuesByPriorityDesc', 'Shows the distribution of issues by their priority')\n  }, {\n    value: 'openIssues',\n    label: t('analytics.openIssuesByProject', 'Open Issues by Project'),\n    allowedRoles: Object.values(UserRole),\n    description: t('analytics.openIssuesByProjectDesc', 'Shows the number of open issues for each project')\n  }];\n\n  // Filter projects based on user role and permissions\n  const filteredProjects = useMemo(() => {\n    if (canViewAllProjects || !(user !== null && user !== void 0 && user.role)) return projects;\n    if (user.role === UserRole.DEPARTMENT_DIRECTOR && user.department) {\n      return projects.filter(project => project.department.id === user.department.id);\n    } else if (user.role === UserRole.PROJECT_MANAGER) {\n      return projects.filter(project => project.projectManager.id === user.id);\n    }\n    return projects;\n  }, [projects, user, canViewAllProjects]);\n\n  // Fetch risks and issues data for all visible projects\n  const fetchRisksAndIssues = async () => {\n    try {\n      const allRisks = [];\n      const allIssues = [];\n      for (const project of filteredProjects) {\n        // Fetch risks\n        const risksResponse = await api.risks.getAllRisks(project.id, '');\n        if (risksResponse.success && risksResponse.data) {\n          risksResponse.data.forEach(risk => allRisks.push({\n            ...risk,\n            projectId: project.id\n          }));\n        }\n\n        // Fetch issues\n        const issuesResponse = await api.issues.getAllIssues(project.id, '');\n        if (issuesResponse.success && issuesResponse.data) {\n          issuesResponse.data.forEach(issue => allIssues.push({\n            ...issue,\n            projectId: project.id\n          }));\n        }\n      }\n      setRisks(allRisks);\n      setIssues(allIssues);\n    } catch (error) {\n      console.error('Error fetching risks and issues:', error);\n    }\n  };\n  const processData = metric => {\n    if (!metric) return [];\n    switch (metric) {\n      case 'client':\n        return processClientData();\n      case 'projectManager':\n        return processProjectManagerData();\n      case 'priority':\n        return processPriorityData();\n      case 'status':\n        return processStatusData();\n      case 'delayed':\n        return processDelayedData();\n      case 'department':\n        return processDepartmentData();\n      case 'stalled':\n        return processStalledData();\n      case 'inProgress':\n        return processInProgressData();\n      // Budget metrics\n      case 'budgetByDepartment':\n        return processBudgetByDepartmentData();\n      case 'budgetVsActual':\n        return processBudgetVsActualData();\n      case 'topBudgetProjects':\n        return processTopBudgetProjectsData();\n      case 'budgetUtilization':\n        return processBudgetUtilizationData();\n      // Risk metrics\n      case 'riskStatus':\n        return processRiskStatusData();\n      case 'riskImpact':\n        return processRiskImpactData();\n      case 'highProbabilityRisks':\n        return processHighProbabilityRisksData();\n      // Issue metrics\n      case 'issueStatus':\n        return processIssueStatusData();\n      case 'issuePriority':\n        return processIssuePriorityData();\n      case 'openIssues':\n        return processOpenIssuesData();\n      default:\n        return [];\n    }\n  };\n  const processClientData = () => {\n    const clientCounts = filteredProjects.reduce((acc, project) => {\n      var _project$department;\n      const client = ((_project$department = project.department) === null || _project$department === void 0 ? void 0 : _project$department.name) || 'Unknown';\n      acc[client] = (acc[client] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(clientCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processProjectManagerData = () => {\n    const pmCounts = filteredProjects.reduce((acc, project) => {\n      var _project$projectManag, _project$projectManag2;\n      const pm = ((_project$projectManag = project.projectManager) === null || _project$projectManag === void 0 ? void 0 : _project$projectManag.firstName) + ' ' + ((_project$projectManag2 = project.projectManager) === null || _project$projectManag2 === void 0 ? void 0 : _project$projectManag2.lastName) || 'Unknown';\n      acc[pm] = (acc[pm] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(pmCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processPriorityData = () => {\n    const priorityCounts = filteredProjects.reduce((acc, project) => {\n      const priority = project.priority || 'Unknown';\n      acc[priority] = (acc[priority] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(priorityCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processStatusData = () => {\n    const statusCounts = filteredProjects.reduce((acc, project) => {\n      const status = project.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processDelayedData = () => {\n    const delayedProjects = filteredProjects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      const today = new Date();\n      return dueDate < today && project.status !== ProjectStatus.COMPLETED;\n    });\n    return [{\n      name: 'Delayed Projects',\n      value: delayedProjects.length\n    }];\n  };\n  const processDepartmentData = () => {\n    const deptCounts = filteredProjects.reduce((acc, project) => {\n      var _project$department2;\n      const dept = ((_project$department2 = project.department) === null || _project$department2 === void 0 ? void 0 : _project$department2.name) || 'Unknown';\n      acc[dept] = (acc[dept] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(deptCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processStalledData = () => {\n    const stalledProjects = filteredProjects.filter(project => project.status === ProjectStatus.ON_HOLD);\n    return [{\n      name: 'Stalled Projects',\n      value: stalledProjects.length\n    }];\n  };\n  const processInProgressData = () => {\n    const inProgressProjects = filteredProjects.filter(project => project.status === ProjectStatus.IN_PROGRESS);\n    return [{\n      name: 'Projects In Progress',\n      value: inProgressProjects.length\n    }];\n  };\n\n  // Risk metrics processing methods\n  const processRiskStatusData = () => {\n    const statusCounts = risks.reduce((acc, risk) => {\n      const status = risk.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processRiskImpactData = () => {\n    const impactCounts = risks.reduce((acc, risk) => {\n      const impact = risk.impact || 'Unknown';\n      acc[impact] = (acc[impact] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(impactCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processHighProbabilityRisksData = () => {\n    const highProbRisks = risks.filter(risk => risk.probability && risk.probability > 70);\n\n    // Group by impact level\n    const impactCounts = highProbRisks.reduce((acc, risk) => {\n      const impact = risk.impact || 'Unknown';\n      acc[impact] = (acc[impact] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(impactCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n\n  // Issue metrics processing methods\n  const processIssueStatusData = () => {\n    const statusCounts = issues.reduce((acc, issue) => {\n      const status = issue.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processIssuePriorityData = () => {\n    const priorityCounts = issues.reduce((acc, issue) => {\n      const priority = issue.impact || 'Unknown';\n      acc[priority] = (acc[priority] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(priorityCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n  const processOpenIssuesData = () => {\n    const openIssues = issues.filter(issue => issue.status === IssueStatus.OPEN);\n    const projectCounts = openIssues.reduce((acc, issue) => {\n      const projectId = issue.projectId || 'Unknown';\n      acc[projectId] = (acc[projectId] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(projectCounts).map(([name, value]) => ({\n      name,\n      value\n    }));\n  };\n\n  // Add new processing functions for budget metrics  \n  const processBudgetByDepartmentData = () => {\n    const departmentBudgets = filteredProjects.reduce((acc, project) => {\n      var _project$department3;\n      const deptName = ((_project$department3 = project.department) === null || _project$department3 === void 0 ? void 0 : _project$department3.name) || 'Unknown';\n      acc[deptName] = (acc[deptName] || 0) + (project.budget || 0);\n      return acc;\n    }, {});\n    return Object.entries(departmentBudgets).map(([name, value]) => ({\n      name,\n      value\n    })).sort((a, b) => b.value - a.value);\n  };\n  const processBudgetVsActualData = () => {\n    const totalBudget = filteredProjects.reduce((sum, project) => sum + (project.budget || 0), 0);\n    const totalActual = filteredProjects.reduce((sum, project) => sum + (project.actualCost || 0), 0);\n    return [{\n      name: t('analytics.plannedBudget', 'Planned Budget'),\n      value: totalBudget\n    }, {\n      name: t('analytics.actualCost', 'Actual Cost'),\n      value: totalActual\n    }];\n  };\n  const processTopBudgetProjectsData = () => {\n    return filteredProjects.filter(project => project.budget && project.budget > 0).sort((a, b) => (b.budget || 0) - (a.budget || 0)).slice(0, 10) // Get top 10 projects by budget\n    .map(project => ({\n      name: project.name,\n      value: project.budget || 0\n    }));\n  };\n  const processBudgetUtilizationData = () => {\n    return filteredProjects.filter(project => project.budget && project.budget > 0).map(project => {\n      const utilization = (project.actualCost || 0) / (project.budget || 1) * 100;\n      return {\n        name: project.name,\n        value: Math.min(utilization, 100) // Cap at 100% for display purposes\n      };\n    }).sort((a, b) => b.value - a.value);\n  };\n  useEffect(() => {\n    if (!selectedMetric) return;\n    const data = processData(selectedMetric);\n    setCharts(prevCharts => {\n      var _metrics$find;\n      return [...prevCharts, {\n        type: selectedChartType,\n        data: data,\n        title: ((_metrics$find = metrics.find(m => m.value === selectedMetric)) === null || _metrics$find === void 0 ? void 0 : _metrics$find.label) || ''\n      }];\n    });\n  }, [selectedMetric, selectedChartType, filteredProjects]);\n  const handleMetricChange = event => {\n    setSelectedMetric(event.target.value);\n  };\n  const handleChartTypeChange = event => {\n    setSelectedChartType(event.target.value);\n  };\n  const removeChart = index => {\n    setCharts(prevCharts => prevCharts.filter((_, i) => i !== index));\n  };\n\n  // Get available metrics based on user role\n  const getAvailableMetrics = () => {\n    if (!user || !user.role) return [];\n    // If user is admin, return all metrics\n    if (user.role === UserRole.ADMIN) return metrics;\n    return metrics.filter(metric => metric.allowedRoles.includes(user.role));\n  };\n  const availableMetrics = getAvailableMetrics();\n  const renderChart = (config, index) => {\n    const {\n      type,\n      data,\n      title\n    } = config;\n    switch (type) {\n      case 'bar':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: data,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"value\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this);\n      case 'pie':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: data,\n                  cx: \"50%\",\n                  cy: \"50%\",\n                  labelLine: false,\n                  label: ({\n                    name,\n                    percent\n                  }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n                  outerRadius: 80,\n                  fill: \"#8884d8\",\n                  dataKey: \"value\",\n                  children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: COLORS[index % COLORS.length]\n                  }, `cell-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this);\n      case 'line':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: data,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"value\",\n                  stroke: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this);\n      case 'area':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                data: data,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Area, {\n                  type: \"monotone\",\n                  dataKey: \"value\",\n                  stroke: \"#8884d8\",\n                  fill: \"#8884d8\",\n                  fillOpacity: 0.3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this);\n      case 'scatter':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                  dataKey: \"value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n                  data: data,\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this);\n      case 'radar':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(RadarChart, {\n                data: data,\n                children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Radar, {\n                  dataKey: \"value\",\n                  stroke: \"#8884d8\",\n                  fill: \"#8884d8\",\n                  fillOpacity: 0.6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this);\n      case 'composed':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '50%',\n            p: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              height: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(ComposedChart, {\n                data: data,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"value\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"value\",\n                  stroke: \"#ff7300\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeChart(index),\n              children: t('common.remove', 'Remove')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: t('analytics.title', 'Project Analytics Dashboard')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), availableMetrics.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: t('analytics.noAccess', 'You don\\'t have access to any analytics data. Please contact your administrator for access.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: t('dashboard.kpi')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 calc(25% - 24px)',\n              minWidth: {\n                xs: '100%',\n                sm: 'calc(50% - 24px)',\n                md: 'calc(25% - 24px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                p: 2,\n                textAlign: 'center',\n                backgroundColor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"textSecondary\",\n                children: t('dashboard.totalProjects')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: filteredProjects.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 calc(25% - 24px)',\n              minWidth: {\n                xs: '100%',\n                sm: 'calc(50% - 24px)',\n                md: 'calc(25% - 24px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                p: 2,\n                textAlign: 'center',\n                backgroundColor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"textSecondary\",\n                children: t('dashboard.inProgress')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: filteredProjects.filter(p => p.status === ProjectStatus.IN_PROGRESS).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 calc(25% - 24px)',\n              minWidth: {\n                xs: '100%',\n                sm: 'calc(50% - 24px)',\n                md: 'calc(25% - 24px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                p: 2,\n                textAlign: 'center',\n                backgroundColor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"textSecondary\",\n                children: t('analytics.overdueAssignments', 'Overdue Assignments')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: assignments.filter(a => {\n                  const dueDate = new Date(a.dueDate);\n                  return dueDate < new Date() && a.status !== AssignmentStatus.COMPLETED;\n                }).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flex: '1 1 calc(25% - 24px)',\n              minWidth: {\n                xs: '100%',\n                sm: 'calc(50% - 24px)',\n                md: 'calc(25% - 24px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 2,\n              sx: {\n                p: 2,\n                textAlign: 'center',\n                backgroundColor: '#f5f5f5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"textSecondary\",\n                children: t('analytics.highPriorityRisks', 'High Priority Risks')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: risks.filter(r => r.impact === RiskImpact.HIGH || r.impact === RiskImpact.CRITICAL).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          alignItems: {\n            xs: 'stretch',\n            sm: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 200,\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: t('analytics.selectMetric', 'Select Metric')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedMetric,\n              onChange: handleMetricChange,\n              label: t('analytics.selectMetric', 'Select Metric'),\n              children: availableMetrics.map(metric => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: metric.value,\n                title: metric.description,\n                children: metric.label\n              }, metric.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 150,\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: t('analytics.chartType', 'Chart Type')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedChartType,\n              onChange: handleChartTypeChange,\n              label: t('analytics.chartType', 'Chart Type'),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"bar\",\n                children: t('analytics.barChart', 'Bar Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"pie\",\n                children: t('analytics.pieChart', 'Pie Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"line\",\n                children: t('analytics.lineChart', 'Line Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"area\",\n                children: t('analytics.areaChart', 'Area Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"scatter\",\n                children: t('analytics.scatterPlot', 'Scatter Plot')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"radar\",\n                children: t('analytics.radarChart', 'Radar Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"composed\",\n                children: t('analytics.composedChart', 'Composed Chart')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => {\n              if (!selectedMetric) return;\n              setCharts(prevCharts => {\n                var _metrics$find2;\n                return [...prevCharts, {\n                  type: selectedChartType,\n                  data: processData(selectedMetric),\n                  title: ((_metrics$find2 = metrics.find(m => m.value === selectedMetric)) === null || _metrics$find2 === void 0 ? void 0 : _metrics$find2.label) || ''\n                }];\n              });\n            },\n            disabled: !selectedMetric || !selectedChartType,\n            sx: {\n              minWidth: 120\n            },\n            children: t('analytics.addChart', 'Add Chart')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), selectedMetric && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1,\n            fontStyle: 'italic'\n          },\n          children: ((_metrics$find3 = metrics.find(m => m.value === selectedMetric)) === null || _metrics$find3 === void 0 ? void 0 : _metrics$find3.description) || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          mt: 3\n        },\n        children: charts.map((config, index) => renderChart(config, index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this), charts.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          children: t('analytics.emptyState', 'Select a metric and chart type from above, then click \"Add Chart\" to build your custom dashboard')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyticsDashboard, \"Nn8ijW1TzfXv/uwG+QFH6YTPQ98=\", false, function () {\n  return [useProjects, useAuth, useTranslation];\n});\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Box","Paper","Typography","FormControl","InputLabel","Select","MenuItem","Button","Stack","Alert","BarChart","Bar","PieChart","Pie","LineChart","Line","AreaChart","Area","ScatterChart","Scatter","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","ComposedChart","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Cell","ResponsiveContainer","useProjects","ProjectStatus","UserRole","AssignmentStatus","RiskImpact","IssueStatus","useAuth","api","useTranslation","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","AnalyticsDashboard","_s","_metrics$find3","projects","user","canViewAllProjects","t","currentProject","setCurrentProject","risks","setRisks","issues","setIssues","assignments","setAssignments","loading","setLoading","selectedMetric","setSelectedMetric","selectedChartType","setSelectedChartType","charts","setCharts","metrics","value","label","allowedRoles","ADMIN","EXECUTIVE","MAIN_PMO","DEPARTMENT_DIRECTOR","Object","values","PROJECT_MANAGER","SUB_PMO","DEVELOPER","description","filteredProjects","role","department","filter","project","id","projectManager","fetchRisksAndIssues","allRisks","allIssues","risksResponse","getAllRisks","success","data","forEach","risk","push","projectId","issuesResponse","getAllIssues","issue","error","console","processData","metric","processClientData","processProjectManagerData","processPriorityData","processStatusData","processDelayedData","processDepartmentData","processStalledData","processInProgressData","processBudgetByDepartmentData","processBudgetVsActualData","processTopBudgetProjectsData","processBudgetUtilizationData","processRiskStatusData","processRiskImpactData","processHighProbabilityRisksData","processIssueStatusData","processIssuePriorityData","processOpenIssuesData","clientCounts","reduce","acc","_project$department","client","name","entries","map","pmCounts","_project$projectManag","_project$projectManag2","pm","firstName","lastName","priorityCounts","priority","statusCounts","status","delayedProjects","dueDate","Date","endDate","today","COMPLETED","length","deptCounts","_project$department2","dept","stalledProjects","ON_HOLD","inProgressProjects","IN_PROGRESS","impactCounts","impact","highProbRisks","probability","openIssues","OPEN","projectCounts","departmentBudgets","_project$department3","deptName","budget","sort","a","b","totalBudget","sum","totalActual","actualCost","slice","utilization","Math","min","prevCharts","_metrics$find","type","title","find","m","handleMetricChange","event","target","handleChartTypeChange","removeChart","index","_","i","getAvailableMetrics","includes","availableMetrics","renderChart","config","sx","width","p","children","height","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","dataKey","fill","onClick","cx","cy","labelLine","percent","toFixed","outerRadius","entry","stroke","fillOpacity","severity","mb","display","flexWrap","gap","flex","minWidth","xs","sm","md","elevation","textAlign","backgroundColor","color","r","HIGH","CRITICAL","direction","spacing","alignItems","onChange","_metrics$find2","disabled","mt","fontStyle","py","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Analytics/AnalyticsDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  Button,\n  Stack,\n  Alert,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  ScatterChart,\n  Scatter,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  ComposedChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Cell,\n  ResponsiveContainer,\n} from 'recharts';\nimport { useProjects } from '../../context/ProjectContext';\nimport { Project, ProjectStatus, ProjectPriority, UserRole, AssignmentStatus, RiskStatus, RiskImpact, IssueStatus, Risk, Issue } from '../../types';\nimport { useAuth } from '../../hooks/useAuth';\nimport api from '../../services/api';\nimport { useTranslation } from 'react-i18next';\n\ninterface ChartData {\n  name: string;\n  value: number;\n}\n\ninterface ChartConfig {\n  type: 'bar' | 'pie' | 'line' | 'area' | 'scatter' | 'radar' | 'composed';\n  data: ChartData[];\n  title: string;\n}\n\ninterface MetricOption {\n  value: string;\n  label: string;\n  allowedRoles: UserRole[];\n  description?: string;\n}\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\nconst AnalyticsDashboard: React.FC = () => {\n  const { projects } = useProjects();\n  const { user, canViewAllProjects } = useAuth();\n  const { t } = useTranslation();\n  const [currentProject, setCurrentProject] = useState<Project | null>(null);\n  const [risks, setRisks] = useState<Risk[]>([]);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const [assignments, setAssignments] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedMetric, setSelectedMetric] = useState<string>('');\n  const [selectedChartType, setSelectedChartType] = useState<ChartConfig['type']>('bar');\n  const [charts, setCharts] = useState<ChartConfig[]>([]);\n\n  const metrics: MetricOption[] = [\n    { value: 'client', label: t('analytics.projectsByClient', 'Number of Projects by Client'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO] },\n    { value: 'projectManager', label: t('analytics.projectsByManager', 'Number of Projects by Project Manager'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR] },\n    { value: 'priority', label: t('analytics.projectsByPriority', 'Number of Projects by Priority'), allowedRoles: Object.values(UserRole) },\n    { value: 'status', label: t('analytics.projectsByStatus', 'Number of Projects by Status'), allowedRoles: Object.values(UserRole) },\n    { value: 'department', label: t('analytics.projectsByDepartment', 'Number of Projects by Department'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO] },\n    { value: 'delayed', label: t('analytics.delayedProjects', 'Number of Delayed Projects'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER] },\n    { value: 'stalled', label: t('analytics.stalledProjects', 'Number of Stalled Projects'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER] },\n    { value: 'inProgress', label: t('analytics.inProgressProjects', 'Number of Projects In Progress'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.SUB_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER, UserRole.DEVELOPER] },\n    \n    // Budget metrics\n    { value: 'budgetByDepartment', label: t('analytics.budgetByDepartment', 'Budget Allocation by Department'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO], description: t('analytics.budgetByDepartmentDesc', 'Shows how budget is distributed across departments') },\n    { value: 'budgetVsActual', label: t('analytics.budgetVsActual', 'Budget vs Actual Cost'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER], description: t('analytics.budgetVsActualDesc', 'Compares planned budget with actual expenditure') },\n    { value: 'topBudgetProjects', label: t('analytics.topBudgetProjects', 'Top Projects by Budget'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR], description: t('analytics.topBudgetProjectsDesc', 'Shows projects with the highest budget allocation') },\n    { value: 'budgetUtilization', label: t('analytics.budgetUtilization', 'Budget Utilization Rate'), allowedRoles: [UserRole.ADMIN, UserRole.EXECUTIVE, UserRole.MAIN_PMO, UserRole.DEPARTMENT_DIRECTOR, UserRole.PROJECT_MANAGER], description: t('analytics.budgetUtilizationDesc', 'Shows percentage of budget utilized by projects') },\n    \n    // Risk metrics\n    { value: 'riskStatus', label: t('analytics.risksByStatus', 'Risks by Status'), allowedRoles: Object.values(UserRole), description: t('analytics.risksByStatusDesc', 'Shows the distribution of risks by their status') },\n    { value: 'riskImpact', label: t('analytics.risksByImpact', 'Risks by Impact Level'), allowedRoles: Object.values(UserRole), description: t('analytics.risksByImpactDesc', 'Shows the distribution of risks by their impact level') },\n    { value: 'highProbabilityRisks', label: t('analytics.highProbRisks', 'High Probability Risks'), allowedRoles: Object.values(UserRole), description: t('analytics.highProbRisksDesc', 'Shows risks with probability greater than 70%') },\n    \n    // Issue metrics\n    { value: 'issueStatus', label: t('analytics.issuesByStatus', 'Issues by Status'), allowedRoles: Object.values(UserRole), description: t('analytics.issuesByStatusDesc', 'Shows the distribution of issues by their status') },\n    { value: 'issuePriority', label: t('analytics.issuesByPriority', 'Issues by Priority'), allowedRoles: Object.values(UserRole), description: t('analytics.issuesByPriorityDesc', 'Shows the distribution of issues by their priority') },\n    { value: 'openIssues', label: t('analytics.openIssuesByProject', 'Open Issues by Project'), allowedRoles: Object.values(UserRole), description: t('analytics.openIssuesByProjectDesc', 'Shows the number of open issues for each project') },\n  ];\n\n  // Filter projects based on user role and permissions\n  const filteredProjects = useMemo(() => {\n    if (canViewAllProjects || !user?.role) return projects;\n    \n    if (user.role === UserRole.DEPARTMENT_DIRECTOR && user.department) {\n      return projects.filter(project => project.department.id === user.department!.id);\n    } else if (user.role === UserRole.PROJECT_MANAGER) {\n      return projects.filter(project => project.projectManager.id === user.id);\n    }\n    \n    return projects;\n  }, [projects, user, canViewAllProjects]);\n\n  // Fetch risks and issues data for all visible projects\n  const fetchRisksAndIssues = async () => {\n    try {\n      const allRisks: Risk[] = [];\n      const allIssues: Issue[] = [];\n      \n      for (const project of filteredProjects) {\n        // Fetch risks\n        const risksResponse = await api.risks.getAllRisks(project.id, '');\n        if (risksResponse.success && risksResponse.data) {\n          risksResponse.data.forEach((risk: Risk) => allRisks.push({...risk, projectId: project.id}));\n        }\n        \n        // Fetch issues\n        const issuesResponse = await api.issues.getAllIssues(project.id, '');\n        if (issuesResponse.success && issuesResponse.data) {\n          issuesResponse.data.forEach((issue: Issue) => allIssues.push({...issue, projectId: project.id}));\n        }\n      }\n      \n      setRisks(allRisks);\n      setIssues(allIssues);\n    } catch (error) {\n      console.error('Error fetching risks and issues:', error);\n    }\n  };\n\n  const processData = (metric: string): ChartData[] => {\n    if (!metric) return [];\n    \n    switch (metric) {\n      case 'client':\n        return processClientData();\n      case 'projectManager':\n        return processProjectManagerData();\n      case 'priority':\n        return processPriorityData();\n      case 'status':\n        return processStatusData();\n      case 'delayed':\n        return processDelayedData();\n      case 'department':\n        return processDepartmentData();\n      case 'stalled':\n        return processStalledData();\n      case 'inProgress':\n        return processInProgressData();\n      // Budget metrics\n      case 'budgetByDepartment':\n        return processBudgetByDepartmentData();\n      case 'budgetVsActual':\n        return processBudgetVsActualData();\n      case 'topBudgetProjects':\n        return processTopBudgetProjectsData();\n      case 'budgetUtilization':\n        return processBudgetUtilizationData();\n      // Risk metrics\n      case 'riskStatus':\n        return processRiskStatusData();\n      case 'riskImpact':\n        return processRiskImpactData();\n      case 'highProbabilityRisks':\n        return processHighProbabilityRisksData();\n      // Issue metrics\n      case 'issueStatus':\n        return processIssueStatusData();\n      case 'issuePriority':\n        return processIssuePriorityData();\n      case 'openIssues':\n        return processOpenIssuesData();\n      default:\n        return [];\n    }\n  };\n\n  const processClientData = (): ChartData[] => {\n    const clientCounts = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const client = project.department?.name || 'Unknown';\n      acc[client] = (acc[client] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(clientCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processProjectManagerData = (): ChartData[] => {\n    const pmCounts = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const pm = project.projectManager?.firstName + ' ' + project.projectManager?.lastName || 'Unknown';\n      acc[pm] = (acc[pm] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(pmCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processPriorityData = (): ChartData[] => {\n    const priorityCounts = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const priority = project.priority || 'Unknown';\n      acc[priority] = (acc[priority] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(priorityCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processStatusData = (): ChartData[] => {\n    const statusCounts = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const status = project.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processDelayedData = (): ChartData[] => {\n    const delayedProjects = filteredProjects.filter(project => {\n      const dueDate = new Date(project.endDate);\n      const today = new Date();\n      return dueDate < today && project.status !== ProjectStatus.COMPLETED;\n    });\n    return [{ name: 'Delayed Projects', value: delayedProjects.length }];\n  };\n\n  const processDepartmentData = (): ChartData[] => {\n    const deptCounts = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const dept = project.department?.name || 'Unknown';\n      acc[dept] = (acc[dept] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(deptCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processStalledData = (): ChartData[] => {\n    const stalledProjects = filteredProjects.filter(project => \n      project.status === ProjectStatus.ON_HOLD\n    );\n    return [{ name: 'Stalled Projects', value: stalledProjects.length }];\n  };\n\n  const processInProgressData = (): ChartData[] => {\n    const inProgressProjects = filteredProjects.filter(project => \n      project.status === ProjectStatus.IN_PROGRESS\n    );\n    return [{ name: 'Projects In Progress', value: inProgressProjects.length }];\n  };\n\n  // Risk metrics processing methods\n  const processRiskStatusData = (): ChartData[] => {\n    const statusCounts = risks.reduce((acc: { [key: string]: number }, risk) => {\n      const status = risk.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processRiskImpactData = (): ChartData[] => {\n    const impactCounts = risks.reduce((acc: { [key: string]: number }, risk) => {\n      const impact = risk.impact || 'Unknown';\n      acc[impact] = (acc[impact] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(impactCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processHighProbabilityRisksData = (): ChartData[] => {\n    const highProbRisks = risks.filter(risk => risk.probability && risk.probability > 70);\n    \n    // Group by impact level\n    const impactCounts = highProbRisks.reduce((acc: { [key: string]: number }, risk) => {\n      const impact = risk.impact || 'Unknown';\n      acc[impact] = (acc[impact] || 0) + 1;\n      return acc;\n    }, {});\n    \n    return Object.entries(impactCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  // Issue metrics processing methods\n  const processIssueStatusData = (): ChartData[] => {\n    const statusCounts = issues.reduce((acc: { [key: string]: number }, issue) => {\n      const status = issue.status || 'Unknown';\n      acc[status] = (acc[status] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(statusCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processIssuePriorityData = (): ChartData[] => {\n    const priorityCounts = issues.reduce((acc: { [key: string]: number }, issue) => {\n      const priority = issue.impact || 'Unknown';\n      acc[priority] = (acc[priority] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(priorityCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  const processOpenIssuesData = (): ChartData[] => {\n    const openIssues = issues.filter(issue => issue.status === IssueStatus.OPEN);\n    const projectCounts = openIssues.reduce((acc: { [key: string]: number }, issue) => {\n      const projectId = issue.projectId || 'Unknown';\n      acc[projectId] = (acc[projectId] || 0) + 1;\n      return acc;\n    }, {});\n    return Object.entries(projectCounts).map(([name, value]) => ({ name, value }));\n  };\n\n  // Add new processing functions for budget metrics  \n  const processBudgetByDepartmentData = (): ChartData[] => {\n    const departmentBudgets = filteredProjects.reduce((acc: { [key: string]: number }, project) => {\n      const deptName = project.department?.name || 'Unknown';\n      acc[deptName] = (acc[deptName] || 0) + (project.budget || 0);\n      return acc;\n    }, {});\n    \n    return Object.entries(departmentBudgets)\n      .map(([name, value]) => ({ name, value }))\n      .sort((a, b) => b.value - a.value);\n  };\n\n  const processBudgetVsActualData = (): ChartData[] => {\n    const totalBudget = filteredProjects.reduce((sum, project) => sum + (project.budget || 0), 0);\n    const totalActual = filteredProjects.reduce((sum, project) => sum + (project.actualCost || 0), 0);\n    \n    return [\n      { name: t('analytics.plannedBudget', 'Planned Budget'), value: totalBudget },\n      { name: t('analytics.actualCost', 'Actual Cost'), value: totalActual }\n    ];\n  };\n\n  const processTopBudgetProjectsData = (): ChartData[] => {\n    return filteredProjects\n      .filter(project => project.budget && project.budget > 0)\n      .sort((a, b) => (b.budget || 0) - (a.budget || 0))\n      .slice(0, 10)  // Get top 10 projects by budget\n      .map(project => ({\n        name: project.name,\n        value: project.budget || 0\n      }));\n  };\n\n  const processBudgetUtilizationData = (): ChartData[] => {\n    return filteredProjects\n      .filter(project => project.budget && project.budget > 0)\n      .map(project => {\n        const utilization = ((project.actualCost || 0) / (project.budget || 1)) * 100;\n        return {\n          name: project.name,\n          value: Math.min(utilization, 100) // Cap at 100% for display purposes\n        };\n      })\n      .sort((a, b) => b.value - a.value);\n  };\n\n  useEffect(() => {\n    if (!selectedMetric) return;\n    const data = processData(selectedMetric);\n    setCharts(prevCharts => [...prevCharts, {\n      type: selectedChartType,\n      data: data,\n      title: metrics.find(m => m.value === selectedMetric)?.label || '',\n    }]);\n  }, [selectedMetric, selectedChartType, filteredProjects]);\n\n  const handleMetricChange = (event: SelectChangeEvent) => {\n    setSelectedMetric(event.target.value);\n  };\n\n  const handleChartTypeChange = (event: SelectChangeEvent) => {\n    setSelectedChartType(event.target.value as ChartConfig['type']);\n  };\n\n  const removeChart = (index: number) => {\n    setCharts(prevCharts => prevCharts.filter((_, i) => i !== index));\n  };\n\n  // Get available metrics based on user role\n  const getAvailableMetrics = () => {\n    if (!user || !user.role) return [];\n    // If user is admin, return all metrics\n    if (user.role === UserRole.ADMIN) return metrics;\n    return metrics.filter(metric => metric.allowedRoles.includes(user.role as UserRole));\n  };\n\n  const availableMetrics = getAvailableMetrics();\n\n  const renderChart = (config: ChartConfig, index: number) => {\n    const { type, data, title } = config;\n\n    switch (type) {\n      case 'bar':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={data}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'pie':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={data}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {data.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'line':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={data}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n                </LineChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'area':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart data={data}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Area type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.3} />\n                </AreaChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'scatter':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ScatterChart>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis dataKey=\"value\" />\n                  <Tooltip />\n                  <Legend />\n                  <Scatter data={data} fill=\"#8884d8\" />\n                </ScatterChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'radar':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RadarChart data={data}>\n                  <PolarGrid />\n                  <PolarAngleAxis dataKey=\"name\" />\n                  <PolarRadiusAxis />\n                  <Radar dataKey=\"value\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                  <Tooltip />\n                  <Legend />\n                </RadarChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      case 'composed':\n        return (\n          <Box key={index} sx={{ width: '50%', p: 1 }}>\n            <Paper sx={{ p: 2, height: '400px' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {title}\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ComposedChart data={data}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#ff7300\" />\n                </ComposedChart>\n              </ResponsiveContainer>\n              <Button onClick={() => removeChart(index)}>{t('common.remove', 'Remove')}</Button>\n            </Paper>\n          </Box>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        {t('analytics.title', 'Project Analytics Dashboard')}\n      </Typography>\n      \n      {availableMetrics.length === 0 ? (\n        <Alert severity=\"info\">\n          {t('analytics.noAccess', 'You don\\'t have access to any analytics data. Please contact your administrator for access.')}\n        </Alert>\n      ) : (\n        <>\n          {/* KPI Summary Section */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>{t('dashboard.kpi')}</Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n              <Box sx={{ flex: '1 1 calc(25% - 24px)', minWidth: { xs: '100%', sm: 'calc(50% - 24px)', md: 'calc(25% - 24px)' } }}>\n                <Paper elevation={2} sx={{ p: 2, textAlign: 'center', backgroundColor: '#f5f5f5' }}>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">{t('dashboard.totalProjects')}</Typography>\n                  <Typography variant=\"h4\">{filteredProjects.length}</Typography>\n                </Paper>\n              </Box>\n              <Box sx={{ flex: '1 1 calc(25% - 24px)', minWidth: { xs: '100%', sm: 'calc(50% - 24px)', md: 'calc(25% - 24px)' } }}>\n                <Paper elevation={2} sx={{ p: 2, textAlign: 'center', backgroundColor: '#f5f5f5' }}>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">{t('dashboard.inProgress')}</Typography>\n                  <Typography variant=\"h4\">\n                    {filteredProjects.filter(p => p.status === ProjectStatus.IN_PROGRESS).length}\n                  </Typography>\n                </Paper>\n              </Box>\n              <Box sx={{ flex: '1 1 calc(25% - 24px)', minWidth: { xs: '100%', sm: 'calc(50% - 24px)', md: 'calc(25% - 24px)' } }}>\n                <Paper elevation={2} sx={{ p: 2, textAlign: 'center', backgroundColor: '#f5f5f5' }}>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">{t('analytics.overdueAssignments', 'Overdue Assignments')}</Typography>\n                  <Typography variant=\"h4\">\n                    {assignments.filter(a => {\n                      const dueDate = new Date(a.dueDate);\n                      return dueDate < new Date() && a.status !== AssignmentStatus.COMPLETED;\n                    }).length}\n                  </Typography>\n                </Paper>\n              </Box>\n              <Box sx={{ flex: '1 1 calc(25% - 24px)', minWidth: { xs: '100%', sm: 'calc(50% - 24px)', md: 'calc(25% - 24px)' } }}>\n                <Paper elevation={2} sx={{ p: 2, textAlign: 'center', backgroundColor: '#f5f5f5' }}>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">{t('analytics.highPriorityRisks', 'High Priority Risks')}</Typography>\n                  <Typography variant=\"h4\">\n                    {risks.filter(r => r.impact === RiskImpact.HIGH || r.impact === RiskImpact.CRITICAL).length}\n                  </Typography>\n                </Paper>\n              </Box>\n            </Box>\n          </Paper>\n\n          {/* Chart Configuration Section */}\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems={{ xs: 'stretch', sm: 'center' }}>\n              <FormControl sx={{ minWidth: 200, flex: 1 }}>\n                <InputLabel>{t('analytics.selectMetric', 'Select Metric')}</InputLabel>\n                <Select\n                  value={selectedMetric}\n                  onChange={handleMetricChange}\n                  label={t('analytics.selectMetric', 'Select Metric')}\n                >\n                  {availableMetrics.map((metric) => (\n                    <MenuItem \n                      key={metric.value} \n                      value={metric.value}\n                      title={metric.description}\n                    >\n                      {metric.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <FormControl sx={{ minWidth: 150, flex: 1 }}>\n                <InputLabel>{t('analytics.chartType', 'Chart Type')}</InputLabel>\n                <Select\n                  value={selectedChartType}\n                  onChange={handleChartTypeChange}\n                  label={t('analytics.chartType', 'Chart Type')}\n                >\n                  <MenuItem value=\"bar\">{t('analytics.barChart', 'Bar Chart')}</MenuItem>\n                  <MenuItem value=\"pie\">{t('analytics.pieChart', 'Pie Chart')}</MenuItem>\n                  <MenuItem value=\"line\">{t('analytics.lineChart', 'Line Chart')}</MenuItem>\n                  <MenuItem value=\"area\">{t('analytics.areaChart', 'Area Chart')}</MenuItem>\n                  <MenuItem value=\"scatter\">{t('analytics.scatterPlot', 'Scatter Plot')}</MenuItem>\n                  <MenuItem value=\"radar\">{t('analytics.radarChart', 'Radar Chart')}</MenuItem>\n                  <MenuItem value=\"composed\">{t('analytics.composedChart', 'Composed Chart')}</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Button \n                variant=\"contained\" \n                onClick={() => {\n                  if (!selectedMetric) return;\n                  setCharts(prevCharts => [...prevCharts, {\n                    type: selectedChartType,\n                    data: processData(selectedMetric),\n                    title: metrics.find(m => m.value === selectedMetric)?.label || '',\n                  }]);\n                }}\n                disabled={!selectedMetric || !selectedChartType}\n                sx={{ minWidth: 120 }}\n              >\n                {t('analytics.addChart', 'Add Chart')}\n              </Button>\n            </Stack>\n            \n            {/* Display selected metric description if available */}\n            {selectedMetric && (\n              <Typography \n                variant=\"body2\" \n                color=\"text.secondary\" \n                sx={{ mt: 1, fontStyle: 'italic' }}\n              >\n                {metrics.find(m => m.value === selectedMetric)?.description || ''}\n              </Typography>\n            )}\n          </Paper>\n\n          {/* Display charts */}\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', mt: 3 }}>\n            {charts.map((config, index) => renderChart(config, index))}\n          </Box>\n          \n          {/* Show empty state message if no charts added */}\n          {charts.length === 0 && (\n            <Box sx={{ textAlign: 'center', py: 5 }}>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                {t('analytics.emptyState', 'Select a metric and chart type from above, then click \"Add Chart\" to build your custom dashboard')}\n              </Typography>\n            </Box>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default AnalyticsDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}