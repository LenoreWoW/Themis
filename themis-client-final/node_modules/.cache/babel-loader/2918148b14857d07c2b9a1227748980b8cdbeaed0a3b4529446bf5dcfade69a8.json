{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Paper,Tabs,Tab,Alert,AlertTitle,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Button,Chip,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,TextField,FormControl,InputLabel,Select,MenuItem,Slider,CircularProgress}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon}from'@mui/icons-material';import{useAuth}from'../context/AuthContext';import{RiskStatus,RiskImpact,IssueStatus}from'../types';import api from'../services/api';import{useTranslation}from'react-i18next';import{TranslatedButton}from'../components/common';import useTranslatedLabels from'../hooks/useTranslatedLabels';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function TabPanel(props){const{children,value,index,...other}=props;return/*#__PURE__*/_jsx(\"div\",{role:\"tabpanel\",hidden:value!==index,id:`risks-issues-tabpanel-${index}`,\"aria-labelledby\":`risks-issues-tab-${index}`,...other,children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{p:3},children:children})});}function a11yProps(index){return{id:`risks-issues-tab-${index}`,'aria-controls':`risks-issues-tabpanel-${index}`};}const RiskIssuesPage=()=>{const{t}=useTranslation();const labels=useTranslatedLabels();const[tabValue,setTabValue]=useState(0);const{user,token}=useAuth();const[projects,setProjects]=useState([]);const[selectedProjectId,setSelectedProjectId]=useState('');const[risks,setRisks]=useState([]);const[issues,setIssues]=useState([]);const[loading,setLoading]=useState(true);const[openRiskDialog,setOpenRiskDialog]=useState(false);const[openIssueDialog,setOpenIssueDialog]=useState(false);const[deleteConfirmDialog,setDeleteConfirmDialog]=useState(false);const[itemToDelete,setItemToDelete]=useState(null);// Form state for risk\nconst[riskForm,setRiskForm]=useState({title:'',description:'',status:RiskStatus.IDENTIFIED,impact:RiskImpact.MEDIUM,probability:50,mitigation:''});// Form state for issue\nconst[issueForm,setIssueForm]=useState({title:'',description:'',status:IssueStatus.OPEN,impact:RiskImpact.MEDIUM,resolutionSummary:''});const[editMode,setEditMode]=useState(false);useEffect(()=>{// Fetch projects\nconst fetchProjects=async()=>{try{const response=await api.projects.getAllProjects(token||'');if(response.success&&response.data){setProjects(response.data);// Select the first project by default if available\nif(response.data.length>0&&!selectedProjectId){setSelectedProjectId(response.data[0].id);}}}catch(error){console.error('Error fetching projects:',error);}};fetchProjects();},[token]);useEffect(()=>{if(selectedProjectId){fetchRisksAndIssues();}},[selectedProjectId,token]);const fetchRisksAndIssues=async()=>{setLoading(true);try{// Fetch risks\nconst risksResponse=await api.risks.getAllRisks(selectedProjectId,token||'');if(risksResponse.success&&risksResponse.data){setRisks(risksResponse.data);}// Fetch issues\nconst issuesResponse=await api.issues.getAllIssues(selectedProjectId,token||'');if(issuesResponse.success&&issuesResponse.data){setIssues(issuesResponse.data);}}catch(error){console.error('Error fetching risks and issues:',error);}finally{setLoading(false);}};const handleTabChange=(event,newValue)=>{setTabValue(newValue);};const handleProjectChange=event=>{setSelectedProjectId(event.target.value);};const handleOpenRiskDialog=risk=>{if(risk){setRiskForm(risk);setEditMode(true);}else{setRiskForm({title:'',description:'',status:RiskStatus.IDENTIFIED,impact:RiskImpact.MEDIUM,probability:50,mitigation:''});setEditMode(false);}setOpenRiskDialog(true);};const handleOpenIssueDialog=issue=>{if(issue){setIssueForm(issue);setEditMode(true);}else{setIssueForm({title:'',description:'',status:IssueStatus.OPEN,impact:RiskImpact.MEDIUM,resolutionSummary:''});setEditMode(false);}setOpenIssueDialog(true);};const handleCloseRiskDialog=()=>{setOpenRiskDialog(false);};const handleCloseIssueDialog=()=>{setOpenIssueDialog(false);};const handleRiskChange=e=>{const{name,value}=e.target;setRiskForm(prev=>({...prev,[name]:value}));};const handleRiskSelectChange=e=>{const{name,value}=e.target;setRiskForm(prev=>({...prev,[name]:value}));};const handleProbabilityChange=(event,newValue)=>{setRiskForm(prev=>({...prev,probability:newValue}));};const handleIssueChange=e=>{const{name,value}=e.target;setIssueForm(prev=>({...prev,[name]:value}));};const handleIssueSelectChange=e=>{const{name,value}=e.target;setIssueForm(prev=>({...prev,[name]:value}));};const saveRisk=async()=>{if(!selectedProjectId||!riskForm.title||!riskForm.description)return;try{if(editMode&&riskForm.id){// Update existing risk\nconst response=await api.risks.updateRisk(selectedProjectId,riskForm.id,{...riskForm,owner:user||undefined},token||'');if(response.success){setRisks(prev=>prev.map(r=>r.id===riskForm.id?response.data:r));}}else{// Create new risk\nconst response=await api.risks.createRisk(selectedProjectId,{...riskForm,projectId:selectedProjectId,owner:user||undefined,createdBy:user||undefined},token||'');if(response.success){setRisks(prev=>[...prev,response.data]);}}setOpenRiskDialog(false);}catch(error){console.error('Error saving risk:',error);}};const saveIssue=async()=>{if(!selectedProjectId||!issueForm.title||!issueForm.description)return;try{if(editMode&&issueForm.id){// Update existing issue\nconst response=await api.issues.updateIssue(selectedProjectId,issueForm.id,{...issueForm,owner:user||undefined},token||'');if(response.success){setIssues(prev=>prev.map(i=>i.id===issueForm.id?response.data:i));}}else{// Create new issue\nconst response=await api.issues.createIssue(selectedProjectId,{...issueForm,projectId:selectedProjectId,owner:user||undefined,createdBy:user||undefined},token||'');if(response.success){setIssues(prev=>[...prev,response.data]);}}setOpenIssueDialog(false);}catch(error){console.error('Error saving issue:',error);}};const handleDeleteConfirm=(id,type)=>{setItemToDelete({id,type});setDeleteConfirmDialog(true);};const handleDelete=async()=>{if(!itemToDelete||!selectedProjectId)return;try{if(itemToDelete.type==='risk'){await api.risks.deleteRisk(selectedProjectId,itemToDelete.id,token||'');setRisks(prev=>prev.filter(r=>r.id!==itemToDelete.id));}else{await api.issues.deleteIssue(selectedProjectId,itemToDelete.id,token||'');setIssues(prev=>prev.filter(i=>i.id!==itemToDelete.id));}}catch(error){console.error('Error deleting item:',error);}finally{setDeleteConfirmDialog(false);setItemToDelete(null);}};const getRiskStatusChip=status=>{let color='default';switch(status){case RiskStatus.IDENTIFIED:color='warning';break;case RiskStatus.ASSESSED:color='info';break;case RiskStatus.MITIGATED:color='success';break;case RiskStatus.CLOSED:color='default';break;}return/*#__PURE__*/_jsx(Chip,{label:status,color:color,size:\"small\"});};const getImpactChip=impact=>{let color='default';switch(impact){case RiskImpact.LOW:color='success';break;case RiskImpact.MEDIUM:color='warning';break;case RiskImpact.HIGH:color='error';break;case RiskImpact.CRITICAL:color='secondary';break;}return/*#__PURE__*/_jsx(Chip,{label:impact,color:color,size:\"small\"});};const getIssueStatusChip=status=>{let color='default';switch(status){case IssueStatus.OPEN:color='error';break;case IssueStatus.IN_PROGRESS:color='warning';break;case IssueStatus.RESOLVED:color='success';break;case IssueStatus.CLOSED:color='default';break;}return/*#__PURE__*/_jsx(Chip,{label:status,color:color,size:\"small\"});};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:t('navigation.risksIssues')}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:t('risks.pageDescription','Track and manage project risks and issues')})]}),/*#__PURE__*/_jsx(Box,{sx:{mb:3},children:/*#__PURE__*/_jsxs(FormControl,{sx:{minWidth:300},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"project-select-label\",children:t('project.title')}),/*#__PURE__*/_jsx(Select,{labelId:\"project-select-label\",id:\"project-select\",value:selectedProjectId,label:t('project.title'),onChange:handleProjectChange,children:projects.map(project=>/*#__PURE__*/_jsx(MenuItem,{value:project.id,children:project.name},project.id))})]})}),/*#__PURE__*/_jsxs(Paper,{sx:{width:'100%'},children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,\"aria-label\":\"risks and issues tabs\",children:[/*#__PURE__*/_jsx(Tab,{label:t('risks.risks','Risks'),...a11yProps(0)}),/*#__PURE__*/_jsx(Tab,{label:t('risks.issues','Issues'),...a11yProps(1)})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:0,children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:3},children:/*#__PURE__*/_jsx(CircularProgress,{})}):!selectedProjectId?/*#__PURE__*/_jsxs(Alert,{severity:\"info\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:t('risks.noProjectSelected','No Project Selected')}),t('risks.selectProject','Please select a project to view or manage risks.')]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mb:2},children:/*#__PURE__*/_jsx(TranslatedButton,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenRiskDialog(),text:t('risks.addRisk','Add Risk')})}),risks.length===0?/*#__PURE__*/_jsxs(Alert,{severity:\"info\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:t('risks.noRisksFound','No Risks Found')}),t('risks.noRisksDescription','No risks have been added to this project yet. Click the \"Add Risk\" button to create a new risk.')]}):/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('risks.title','Title')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.status','Status')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.impact','Impact')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.probability','Probability')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.owner','Owner')}),/*#__PURE__*/_jsx(TableCell,{children:t('common.actions')})]})}),/*#__PURE__*/_jsx(TableBody,{children:risks.map(risk=>{var _risk$owner,_risk$owner2;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:risk.title}),/*#__PURE__*/_jsx(TableCell,{children:getRiskStatusChip(risk.status)}),/*#__PURE__*/_jsx(TableCell,{children:getImpactChip(risk.impact)}),/*#__PURE__*/_jsxs(TableCell,{children:[risk.probability,\"%\"]}),/*#__PURE__*/_jsxs(TableCell,{children:[(_risk$owner=risk.owner)===null||_risk$owner===void 0?void 0:_risk$owner.firstName,\" \",(_risk$owner2=risk.owner)===null||_risk$owner2===void 0?void 0:_risk$owner2.lastName]}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenRiskDialog(risk),title:t('common.edit'),children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteConfirm(risk.id,'risk'),title:t('common.delete'),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})]})]},risk.id);})})]})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:1,children:loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',p:3},children:/*#__PURE__*/_jsx(CircularProgress,{})}):!selectedProjectId?/*#__PURE__*/_jsxs(Alert,{severity:\"info\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:t('risks.noProjectSelected','No Project Selected')}),t('risks.selectProjectIssues','Please select a project to view or manage issues.')]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'flex-end',mb:2},children:/*#__PURE__*/_jsx(TranslatedButton,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenIssueDialog(),text:t('risks.addIssue','Add Issue')})}),issues.length===0?/*#__PURE__*/_jsxs(Alert,{severity:\"info\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:t('risks.noIssuesFound','No Issues Found')}),t('risks.noIssuesDescription','No issues have been added to this project yet. Click the \"Add Issue\" button to create a new issue.')]}):/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:t('risks.title','Title')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.status','Status')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.impact','Impact')}),/*#__PURE__*/_jsx(TableCell,{children:t('risks.owner','Owner')}),/*#__PURE__*/_jsx(TableCell,{children:t('common.actions')})]})}),/*#__PURE__*/_jsx(TableBody,{children:issues.map(issue=>{var _issue$owner,_issue$owner2;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:issue.title}),/*#__PURE__*/_jsx(TableCell,{children:getIssueStatusChip(issue.status)}),/*#__PURE__*/_jsx(TableCell,{children:getImpactChip(issue.impact)}),/*#__PURE__*/_jsxs(TableCell,{children:[(_issue$owner=issue.owner)===null||_issue$owner===void 0?void 0:_issue$owner.firstName,\" \",(_issue$owner2=issue.owner)===null||_issue$owner2===void 0?void 0:_issue$owner2.lastName]}),/*#__PURE__*/_jsxs(TableCell,{children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenIssueDialog(issue),title:t('common.edit'),children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteConfirm(issue.id,'issue'),title:t('common.delete'),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})]})]},issue.id);})})]})})]})})]}),/*#__PURE__*/_jsxs(Dialog,{open:openRiskDialog,onClose:handleCloseRiskDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editMode?t('risks.editRisk','Edit Risk'):t('risks.addRisk','Add Risk')}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.title','Title'),name:\"title\",value:riskForm.title||'',onChange:handleRiskChange,margin:\"normal\",required:true}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.description','Description'),name:\"description\",value:riskForm.description||'',onChange:handleRiskChange,margin:\"normal\",multiline:true,rows:3,required:true}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:t('risks.status','Status')}),/*#__PURE__*/_jsxs(Select,{name:\"status\",value:riskForm.status||RiskStatus.IDENTIFIED,onChange:handleRiskSelectChange,label:t('risks.status','Status'),children:[/*#__PURE__*/_jsx(MenuItem,{value:RiskStatus.IDENTIFIED,children:t('risks.statusIdentified','Identified')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskStatus.ASSESSED,children:t('risks.statusAssessed','Assessed')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskStatus.MITIGATED,children:t('risks.statusMitigated','Mitigated')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskStatus.CLOSED,children:t('risks.statusClosed','Closed')})]})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:t('risks.impact','Impact')}),/*#__PURE__*/_jsxs(Select,{name:\"impact\",value:riskForm.impact||RiskImpact.MEDIUM,onChange:handleRiskSelectChange,label:t('risks.impact','Impact'),children:[/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.LOW,children:t('priority.low')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.MEDIUM,children:t('priority.medium')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.HIGH,children:t('priority.high')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.CRITICAL,children:t('priority.critical')})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3,mb:1},children:[/*#__PURE__*/_jsxs(Typography,{id:\"probability-slider-label\",gutterBottom:true,children:[t('risks.probability','Probability'),\": \",riskForm.probability,\"%\"]}),/*#__PURE__*/_jsx(Slider,{\"aria-labelledby\":\"probability-slider-label\",value:riskForm.probability||50,onChange:handleProbabilityChange,valueLabelDisplay:\"auto\",step:5,marks:true,min:0,max:100})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.mitigationPlan','Mitigation Plan'),name:\"mitigation\",value:riskForm.mitigation||'',onChange:handleRiskChange,margin:\"normal\",multiline:true,rows:3})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseRiskDialog,children:t('common.cancel')}),/*#__PURE__*/_jsx(Button,{onClick:saveRisk,variant:\"contained\",color:\"primary\",children:editMode?t('common.update'):t('common.save')})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:openIssueDialog,onClose:handleCloseIssueDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editMode?t('risks.editIssue','Edit Issue'):t('risks.addIssue','Add Issue')}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.title','Title'),name:\"title\",value:issueForm.title||'',onChange:handleIssueChange,margin:\"normal\",required:true}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.description','Description'),name:\"description\",value:issueForm.description||'',onChange:handleIssueChange,margin:\"normal\",multiline:true,rows:3,required:true}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:t('risks.status','Status')}),/*#__PURE__*/_jsxs(Select,{name:\"status\",value:issueForm.status||IssueStatus.OPEN,onChange:handleIssueSelectChange,label:t('risks.status','Status'),children:[/*#__PURE__*/_jsx(MenuItem,{value:IssueStatus.OPEN,children:t('risks.statusOpen','Open')}),/*#__PURE__*/_jsx(MenuItem,{value:IssueStatus.IN_PROGRESS,children:t('status.inProgress')}),/*#__PURE__*/_jsx(MenuItem,{value:IssueStatus.RESOLVED,children:t('risks.statusResolved','Resolved')}),/*#__PURE__*/_jsx(MenuItem,{value:IssueStatus.CLOSED,children:t('risks.statusClosed','Closed')})]})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:t('risks.impact','Impact')}),/*#__PURE__*/_jsxs(Select,{name:\"impact\",value:issueForm.impact||RiskImpact.MEDIUM,onChange:handleIssueSelectChange,label:t('risks.impact','Impact'),children:[/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.LOW,children:t('priority.low')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.MEDIUM,children:t('priority.medium')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.HIGH,children:t('priority.high')}),/*#__PURE__*/_jsx(MenuItem,{value:RiskImpact.CRITICAL,children:t('priority.critical')})]})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t('risks.resolutionSummary','Resolution Summary'),name:\"resolutionSummary\",value:issueForm.resolutionSummary||'',onChange:handleIssueChange,margin:\"normal\",multiline:true,rows:3})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseIssueDialog,children:t('common.cancel')}),/*#__PURE__*/_jsx(Button,{onClick:saveIssue,variant:\"contained\",color:\"primary\",children:editMode?t('common.update'):t('common.save')})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:deleteConfirmDialog,onClose:()=>setDeleteConfirmDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:t('common.confirmDelete','Confirm Delete')}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Typography,{children:(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='risk'?t('risks.confirmDeleteRisk','Are you sure you want to delete this risk? This action cannot be undone.'):t('risks.confirmDeleteIssue','Are you sure you want to delete this issue? This action cannot be undone.')})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setDeleteConfirmDialog(false),children:t('common.cancel')}),/*#__PURE__*/_jsx(Button,{onClick:handleDelete,color:\"error\",children:t('common.delete')})]})]})]});};export default RiskIssuesPage;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Tabs","Tab","Alert","AlertTitle","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Slider","CircularProgress","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","useAuth","RiskStatus","RiskImpact","IssueStatus","api","useTranslation","TranslatedButton","useTranslatedLabels","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","a11yProps","RiskIssuesPage","t","labels","tabValue","setTabValue","user","token","projects","setProjects","selectedProjectId","setSelectedProjectId","risks","setRisks","issues","setIssues","loading","setLoading","openRiskDialog","setOpenRiskDialog","openIssueDialog","setOpenIssueDialog","deleteConfirmDialog","setDeleteConfirmDialog","itemToDelete","setItemToDelete","riskForm","setRiskForm","title","description","status","IDENTIFIED","impact","MEDIUM","probability","mitigation","issueForm","setIssueForm","OPEN","resolutionSummary","editMode","setEditMode","fetchProjects","response","getAllProjects","success","data","length","error","console","fetchRisksAndIssues","risksResponse","getAllRisks","issuesResponse","getAllIssues","handleTabChange","event","newValue","handleProjectChange","target","handleOpenRiskDialog","risk","handleOpenIssueDialog","issue","handleCloseRiskDialog","handleCloseIssueDialog","handleRiskChange","e","name","prev","handleRiskSelectChange","handleProbabilityChange","handleIssueChange","handleIssueSelectChange","saveRisk","updateRisk","owner","undefined","map","r","createRisk","projectId","createdBy","saveIssue","updateIssue","i","createIssue","handleDeleteConfirm","type","handleDelete","deleteRisk","filter","deleteIssue","getRiskStatusChip","color","ASSESSED","MITIGATED","CLOSED","label","size","getImpactChip","LOW","HIGH","CRITICAL","getIssueStatusChip","IN_PROGRESS","RESOLVED","mb","variant","component","minWidth","labelId","onChange","project","width","borderBottom","borderColor","display","justifyContent","severity","startIcon","onClick","text","_risk$owner","_risk$owner2","firstName","lastName","fontSize","_issue$owner","_issue$owner2","open","onClose","maxWidth","fullWidth","mt","margin","required","multiline","rows","gutterBottom","valueLabelDisplay","step","marks","min","max"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/RiskIssuesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  Alert,\n  AlertTitle,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  Slider,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { Risk, RiskStatus, RiskImpact, Issue, IssueStatus, Project } from '../types';\nimport api from '../services/api';\nimport { useTranslation } from 'react-i18next';\nimport { TranslatedButton } from '../components/common';\nimport useTranslatedLabels from '../hooks/useTranslatedLabels';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`risks-issues-tabpanel-${index}`}\n      aria-labelledby={`risks-issues-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `risks-issues-tab-${index}`,\n    'aria-controls': `risks-issues-tabpanel-${index}`,\n  };\n}\n\nconst RiskIssuesPage: React.FC = () => {\n  const { t } = useTranslation();\n  const labels = useTranslatedLabels();\n  const [tabValue, setTabValue] = useState(0);\n  const { user, token } = useAuth();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [selectedProjectId, setSelectedProjectId] = useState<string>('');\n  const [risks, setRisks] = useState<Risk[]>([]);\n  const [issues, setIssues] = useState<Issue[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [openRiskDialog, setOpenRiskDialog] = useState(false);\n  const [openIssueDialog, setOpenIssueDialog] = useState(false);\n  const [deleteConfirmDialog, setDeleteConfirmDialog] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState<{id: string, type: 'risk' | 'issue'} | null>(null);\n  \n  // Form state for risk\n  const [riskForm, setRiskForm] = useState<Partial<Risk>>({\n    title: '',\n    description: '',\n    status: RiskStatus.IDENTIFIED,\n    impact: RiskImpact.MEDIUM,\n    probability: 50,\n    mitigation: ''\n  });\n  \n  // Form state for issue\n  const [issueForm, setIssueForm] = useState<Partial<Issue>>({\n    title: '',\n    description: '',\n    status: IssueStatus.OPEN,\n    impact: RiskImpact.MEDIUM,\n    resolutionSummary: ''\n  });\n  \n  const [editMode, setEditMode] = useState(false);\n  \n  useEffect(() => {\n    // Fetch projects\n    const fetchProjects = async () => {\n      try {\n        const response = await api.projects.getAllProjects(token || '');\n        if (response.success && response.data) {\n          setProjects(response.data);\n          \n          // Select the first project by default if available\n          if (response.data.length > 0 && !selectedProjectId) {\n            setSelectedProjectId(response.data[0].id);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    \n    fetchProjects();\n  }, [token]);\n  \n  useEffect(() => {\n    if (selectedProjectId) {\n      fetchRisksAndIssues();\n    }\n  }, [selectedProjectId, token]);\n  \n  const fetchRisksAndIssues = async () => {\n    setLoading(true);\n    \n    try {\n      // Fetch risks\n      const risksResponse = await api.risks.getAllRisks(selectedProjectId, token || '');\n      if (risksResponse.success && risksResponse.data) {\n        setRisks(risksResponse.data);\n      }\n      \n      // Fetch issues\n      const issuesResponse = await api.issues.getAllIssues(selectedProjectId, token || '');\n      if (issuesResponse.success && issuesResponse.data) {\n        setIssues(issuesResponse.data);\n      }\n    } catch (error) {\n      console.error('Error fetching risks and issues:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n  \n  const handleProjectChange = (event: SelectChangeEvent<string>) => {\n    setSelectedProjectId(event.target.value);\n  };\n  \n  const handleOpenRiskDialog = (risk?: Risk) => {\n    if (risk) {\n      setRiskForm(risk);\n      setEditMode(true);\n    } else {\n      setRiskForm({\n        title: '',\n        description: '',\n        status: RiskStatus.IDENTIFIED,\n        impact: RiskImpact.MEDIUM,\n        probability: 50,\n        mitigation: ''\n      });\n      setEditMode(false);\n    }\n    setOpenRiskDialog(true);\n  };\n  \n  const handleOpenIssueDialog = (issue?: Issue) => {\n    if (issue) {\n      setIssueForm(issue);\n      setEditMode(true);\n    } else {\n      setIssueForm({\n        title: '',\n        description: '',\n        status: IssueStatus.OPEN,\n        impact: RiskImpact.MEDIUM,\n        resolutionSummary: ''\n      });\n      setEditMode(false);\n    }\n    setOpenIssueDialog(true);\n  };\n  \n  const handleCloseRiskDialog = () => {\n    setOpenRiskDialog(false);\n  };\n  \n  const handleCloseIssueDialog = () => {\n    setOpenIssueDialog(false);\n  };\n  \n  const handleRiskChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setRiskForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleRiskSelectChange = (e: SelectChangeEvent<any>) => {\n    const { name, value } = e.target;\n    setRiskForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleProbabilityChange = (event: Event, newValue: number | number[]) => {\n    setRiskForm(prev => ({\n      ...prev,\n      probability: newValue as number\n    }));\n  };\n  \n  const handleIssueChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setIssueForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleIssueSelectChange = (e: SelectChangeEvent<any>) => {\n    const { name, value } = e.target;\n    setIssueForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const saveRisk = async () => {\n    if (!selectedProjectId || !riskForm.title || !riskForm.description) return;\n    \n    try {\n      if (editMode && riskForm.id) {\n        // Update existing risk\n        const response = await api.risks.updateRisk(\n          selectedProjectId,\n          riskForm.id,\n          {\n            ...riskForm,\n            owner: user || undefined\n          },\n          token || ''\n        );\n        \n        if (response.success) {\n          setRisks(prev => prev.map(r => (r.id === riskForm.id ? response.data : r)));\n        }\n      } else {\n        // Create new risk\n        const response = await api.risks.createRisk(\n          selectedProjectId,\n          {\n            ...riskForm,\n            projectId: selectedProjectId,\n            owner: user || undefined,\n            createdBy: user || undefined\n          },\n          token || ''\n        );\n        \n        if (response.success) {\n          setRisks(prev => [...prev, response.data]);\n        }\n      }\n      \n      setOpenRiskDialog(false);\n    } catch (error) {\n      console.error('Error saving risk:', error);\n    }\n  };\n  \n  const saveIssue = async () => {\n    if (!selectedProjectId || !issueForm.title || !issueForm.description) return;\n    \n    try {\n      if (editMode && issueForm.id) {\n        // Update existing issue\n        const response = await api.issues.updateIssue(\n          selectedProjectId,\n          issueForm.id,\n          {\n            ...issueForm,\n            owner: user || undefined\n          },\n          token || ''\n        );\n        \n        if (response.success) {\n          setIssues(prev => prev.map(i => (i.id === issueForm.id ? response.data : i)));\n        }\n      } else {\n        // Create new issue\n        const response = await api.issues.createIssue(\n          selectedProjectId,\n          {\n            ...issueForm,\n            projectId: selectedProjectId,\n            owner: user || undefined,\n            createdBy: user || undefined\n          },\n          token || ''\n        );\n        \n        if (response.success) {\n          setIssues(prev => [...prev, response.data]);\n        }\n      }\n      \n      setOpenIssueDialog(false);\n    } catch (error) {\n      console.error('Error saving issue:', error);\n    }\n  };\n  \n  const handleDeleteConfirm = (id: string, type: 'risk' | 'issue') => {\n    setItemToDelete({ id, type });\n    setDeleteConfirmDialog(true);\n  };\n  \n  const handleDelete = async () => {\n    if (!itemToDelete || !selectedProjectId) return;\n    \n    try {\n      if (itemToDelete.type === 'risk') {\n        await api.risks.deleteRisk(selectedProjectId, itemToDelete.id, token || '');\n        setRisks(prev => prev.filter(r => r.id !== itemToDelete.id));\n      } else {\n        await api.issues.deleteIssue(selectedProjectId, itemToDelete.id, token || '');\n        setIssues(prev => prev.filter(i => i.id !== itemToDelete.id));\n      }\n    } catch (error) {\n      console.error('Error deleting item:', error);\n    } finally {\n      setDeleteConfirmDialog(false);\n      setItemToDelete(null);\n    }\n  };\n  \n  const getRiskStatusChip = (status: RiskStatus) => {\n    let color: 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' = 'default';\n    \n    switch (status) {\n      case RiskStatus.IDENTIFIED:\n        color = 'warning';\n        break;\n      case RiskStatus.ASSESSED:\n        color = 'info';\n        break;\n      case RiskStatus.MITIGATED:\n        color = 'success';\n        break;\n      case RiskStatus.CLOSED:\n        color = 'default';\n        break;\n    }\n    \n    return <Chip label={status} color={color} size=\"small\" />;\n  };\n  \n  const getImpactChip = (impact: RiskImpact) => {\n    let color: 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' = 'default';\n    \n    switch (impact) {\n      case RiskImpact.LOW:\n        color = 'success';\n        break;\n      case RiskImpact.MEDIUM:\n        color = 'warning';\n        break;\n      case RiskImpact.HIGH:\n        color = 'error';\n        break;\n      case RiskImpact.CRITICAL:\n        color = 'secondary';\n        break;\n    }\n    \n    return <Chip label={impact} color={color} size=\"small\" />;\n  };\n  \n  const getIssueStatusChip = (status: IssueStatus) => {\n    let color: 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' = 'default';\n    \n    switch (status) {\n      case IssueStatus.OPEN:\n        color = 'error';\n        break;\n      case IssueStatus.IN_PROGRESS:\n        color = 'warning';\n        break;\n      case IssueStatus.RESOLVED:\n        color = 'success';\n        break;\n      case IssueStatus.CLOSED:\n        color = 'default';\n        break;\n    }\n    \n    return <Chip label={status} color={color} size=\"small\" />;\n  };\n\n  return (\n    <Box>\n      <Box sx={{ mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          {t('navigation.risksIssues')}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          {t('risks.pageDescription', 'Track and manage project risks and issues')}\n        </Typography>\n      </Box>\n      \n      <Box sx={{ mb: 3 }}>\n        <FormControl sx={{ minWidth: 300 }}>\n          <InputLabel id=\"project-select-label\">{t('project.title')}</InputLabel>\n          <Select\n            labelId=\"project-select-label\"\n            id=\"project-select\"\n            value={selectedProjectId}\n            label={t('project.title')}\n            onChange={handleProjectChange}\n          >\n            {projects.map((project) => (\n              <MenuItem key={project.id} value={project.id}>\n                {project.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n\n      <Paper sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"risks and issues tabs\">\n            <Tab label={t('risks.risks', 'Risks')} {...a11yProps(0)} />\n            <Tab label={t('risks.issues', 'Issues')} {...a11yProps(1)} />\n          </Tabs>\n        </Box>\n        \n        <TabPanel value={tabValue} index={0}>\n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : !selectedProjectId ? (\n            <Alert severity=\"info\">\n              <AlertTitle>{t('risks.noProjectSelected', 'No Project Selected')}</AlertTitle>\n              {t('risks.selectProject', 'Please select a project to view or manage risks.')}\n            </Alert>\n          ) : (\n            <>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n                <TranslatedButton\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={() => handleOpenRiskDialog()}\n                  text={t('risks.addRisk', 'Add Risk')}\n                />\n              </Box>\n              \n              {risks.length === 0 ? (\n                <Alert severity=\"info\">\n                  <AlertTitle>{t('risks.noRisksFound', 'No Risks Found')}</AlertTitle>\n                  {t('risks.noRisksDescription', 'No risks have been added to this project yet. Click the \"Add Risk\" button to create a new risk.')}\n                </Alert>\n              ) : (\n                <TableContainer>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{t('risks.title', 'Title')}</TableCell>\n                        <TableCell>{t('risks.status', 'Status')}</TableCell>\n                        <TableCell>{t('risks.impact', 'Impact')}</TableCell>\n                        <TableCell>{t('risks.probability', 'Probability')}</TableCell>\n                        <TableCell>{t('risks.owner', 'Owner')}</TableCell>\n                        <TableCell>{t('common.actions')}</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {risks.map((risk) => (\n                        <TableRow key={risk.id}>\n                          <TableCell>{risk.title}</TableCell>\n                          <TableCell>{getRiskStatusChip(risk.status)}</TableCell>\n                          <TableCell>{getImpactChip(risk.impact)}</TableCell>\n                          <TableCell>{risk.probability}%</TableCell>\n                          <TableCell>{risk.owner?.firstName} {risk.owner?.lastName}</TableCell>\n                          <TableCell>\n                            <IconButton size=\"small\" onClick={() => handleOpenRiskDialog(risk)} title={t('common.edit')}>\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton size=\"small\" onClick={() => handleDeleteConfirm(risk.id, 'risk')} title={t('common.delete')}>\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )}\n            </>\n          )}\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={1}>\n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : !selectedProjectId ? (\n            <Alert severity=\"info\">\n              <AlertTitle>{t('risks.noProjectSelected', 'No Project Selected')}</AlertTitle>\n              {t('risks.selectProjectIssues', 'Please select a project to view or manage issues.')}\n            </Alert>\n          ) : (\n            <>\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\n                <TranslatedButton\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={() => handleOpenIssueDialog()}\n                  text={t('risks.addIssue', 'Add Issue')}\n                />\n              </Box>\n              \n              {issues.length === 0 ? (\n                <Alert severity=\"info\">\n                  <AlertTitle>{t('risks.noIssuesFound', 'No Issues Found')}</AlertTitle>\n                  {t('risks.noIssuesDescription', 'No issues have been added to this project yet. Click the \"Add Issue\" button to create a new issue.')}\n                </Alert>\n              ) : (\n                <TableContainer>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>{t('risks.title', 'Title')}</TableCell>\n                        <TableCell>{t('risks.status', 'Status')}</TableCell>\n                        <TableCell>{t('risks.impact', 'Impact')}</TableCell>\n                        <TableCell>{t('risks.owner', 'Owner')}</TableCell>\n                        <TableCell>{t('common.actions')}</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {issues.map((issue) => (\n                        <TableRow key={issue.id}>\n                          <TableCell>{issue.title}</TableCell>\n                          <TableCell>{getIssueStatusChip(issue.status)}</TableCell>\n                          <TableCell>{getImpactChip(issue.impact)}</TableCell>\n                          <TableCell>{issue.owner?.firstName} {issue.owner?.lastName}</TableCell>\n                          <TableCell>\n                            <IconButton size=\"small\" onClick={() => handleOpenIssueDialog(issue)} title={t('common.edit')}>\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton size=\"small\" onClick={() => handleDeleteConfirm(issue.id, 'issue')} title={t('common.delete')}>\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )}\n            </>\n          )}\n        </TabPanel>\n      </Paper>\n      \n      {/* Risk Dialog */}\n      <Dialog open={openRiskDialog} onClose={handleCloseRiskDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>{editMode ? t('risks.editRisk', 'Edit Risk') : t('risks.addRisk', 'Add Risk')}</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 2 }}>\n            <TextField\n              fullWidth\n              label={t('risks.title', 'Title')}\n              name=\"title\"\n              value={riskForm.title || ''}\n              onChange={handleRiskChange}\n              margin=\"normal\"\n              required\n            />\n            \n            <TextField\n              fullWidth\n              label={t('risks.description', 'Description')}\n              name=\"description\"\n              value={riskForm.description || ''}\n              onChange={handleRiskChange}\n              margin=\"normal\"\n              multiline\n              rows={3}\n              required\n            />\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>{t('risks.status', 'Status')}</InputLabel>\n              <Select\n                name=\"status\"\n                value={riskForm.status || RiskStatus.IDENTIFIED}\n                onChange={handleRiskSelectChange}\n                label={t('risks.status', 'Status')}\n              >\n                <MenuItem value={RiskStatus.IDENTIFIED}>{t('risks.statusIdentified', 'Identified')}</MenuItem>\n                <MenuItem value={RiskStatus.ASSESSED}>{t('risks.statusAssessed', 'Assessed')}</MenuItem>\n                <MenuItem value={RiskStatus.MITIGATED}>{t('risks.statusMitigated', 'Mitigated')}</MenuItem>\n                <MenuItem value={RiskStatus.CLOSED}>{t('risks.statusClosed', 'Closed')}</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>{t('risks.impact', 'Impact')}</InputLabel>\n              <Select\n                name=\"impact\"\n                value={riskForm.impact || RiskImpact.MEDIUM}\n                onChange={handleRiskSelectChange}\n                label={t('risks.impact', 'Impact')}\n              >\n                <MenuItem value={RiskImpact.LOW}>{t('priority.low')}</MenuItem>\n                <MenuItem value={RiskImpact.MEDIUM}>{t('priority.medium')}</MenuItem>\n                <MenuItem value={RiskImpact.HIGH}>{t('priority.high')}</MenuItem>\n                <MenuItem value={RiskImpact.CRITICAL}>{t('priority.critical')}</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <Box sx={{ mt: 3, mb: 1 }}>\n              <Typography id=\"probability-slider-label\" gutterBottom>\n                {t('risks.probability', 'Probability')}: {riskForm.probability}%\n              </Typography>\n              <Slider\n                aria-labelledby=\"probability-slider-label\"\n                value={riskForm.probability || 50}\n                onChange={handleProbabilityChange}\n                valueLabelDisplay=\"auto\"\n                step={5}\n                marks\n                min={0}\n                max={100}\n              />\n            </Box>\n            \n            <TextField\n              fullWidth\n              label={t('risks.mitigationPlan', 'Mitigation Plan')}\n              name=\"mitigation\"\n              value={riskForm.mitigation || ''}\n              onChange={handleRiskChange}\n              margin=\"normal\"\n              multiline\n              rows={3}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseRiskDialog}>{t('common.cancel')}</Button>\n          <Button onClick={saveRisk} variant=\"contained\" color=\"primary\">\n            {editMode ? t('common.update') : t('common.save')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Issue Dialog */}\n      <Dialog open={openIssueDialog} onClose={handleCloseIssueDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>{editMode ? t('risks.editIssue', 'Edit Issue') : t('risks.addIssue', 'Add Issue')}</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 2 }}>\n            <TextField\n              fullWidth\n              label={t('risks.title', 'Title')}\n              name=\"title\"\n              value={issueForm.title || ''}\n              onChange={handleIssueChange}\n              margin=\"normal\"\n              required\n            />\n            \n            <TextField\n              fullWidth\n              label={t('risks.description', 'Description')}\n              name=\"description\"\n              value={issueForm.description || ''}\n              onChange={handleIssueChange}\n              margin=\"normal\"\n              multiline\n              rows={3}\n              required\n            />\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>{t('risks.status', 'Status')}</InputLabel>\n              <Select\n                name=\"status\"\n                value={issueForm.status || IssueStatus.OPEN}\n                onChange={handleIssueSelectChange}\n                label={t('risks.status', 'Status')}\n              >\n                <MenuItem value={IssueStatus.OPEN}>{t('risks.statusOpen', 'Open')}</MenuItem>\n                <MenuItem value={IssueStatus.IN_PROGRESS}>{t('status.inProgress')}</MenuItem>\n                <MenuItem value={IssueStatus.RESOLVED}>{t('risks.statusResolved', 'Resolved')}</MenuItem>\n                <MenuItem value={IssueStatus.CLOSED}>{t('risks.statusClosed', 'Closed')}</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <FormControl fullWidth margin=\"normal\">\n              <InputLabel>{t('risks.impact', 'Impact')}</InputLabel>\n              <Select\n                name=\"impact\"\n                value={issueForm.impact || RiskImpact.MEDIUM}\n                onChange={handleIssueSelectChange}\n                label={t('risks.impact', 'Impact')}\n              >\n                <MenuItem value={RiskImpact.LOW}>{t('priority.low')}</MenuItem>\n                <MenuItem value={RiskImpact.MEDIUM}>{t('priority.medium')}</MenuItem>\n                <MenuItem value={RiskImpact.HIGH}>{t('priority.high')}</MenuItem>\n                <MenuItem value={RiskImpact.CRITICAL}>{t('priority.critical')}</MenuItem>\n              </Select>\n            </FormControl>\n            \n            <TextField\n              fullWidth\n              label={t('risks.resolutionSummary', 'Resolution Summary')}\n              name=\"resolutionSummary\"\n              value={issueForm.resolutionSummary || ''}\n              onChange={handleIssueChange}\n              margin=\"normal\"\n              multiline\n              rows={3}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseIssueDialog}>{t('common.cancel')}</Button>\n          <Button onClick={saveIssue} variant=\"contained\" color=\"primary\">\n            {editMode ? t('common.update') : t('common.save')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteConfirmDialog} onClose={() => setDeleteConfirmDialog(false)}>\n        <DialogTitle>{t('common.confirmDelete', 'Confirm Delete')}</DialogTitle>\n        <DialogContent>\n          <Typography>\n            {itemToDelete?.type === 'risk' \n              ? t('risks.confirmDeleteRisk', 'Are you sure you want to delete this risk? This action cannot be undone.')\n              : t('risks.confirmDeleteIssue', 'Are you sure you want to delete this issue? This action cannot be undone.')}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteConfirmDialog(false)}>{t('common.cancel')}</Button>\n          <Button onClick={handleDelete} color=\"error\">{t('common.delete')}</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default RiskIssuesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}