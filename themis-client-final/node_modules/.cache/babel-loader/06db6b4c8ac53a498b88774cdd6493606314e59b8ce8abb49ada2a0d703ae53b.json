{"ast":null,"code":"import{ProjectStatus,UserRole}from'../types';export const formatDate=dateString=>{const date=new Date(dateString);return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'numeric'}).format(date);};export const getStatusColor=(status,endDate)=>{// Check if project is overdue\nif(endDate&&status===ProjectStatus.IN_PROGRESS){const today=new Date();const projectEndDate=new Date(endDate);if(projectEndDate<today){return'#d32f2f';// Red color for overdue projects\n}}// Default status colors\nswitch(status){case ProjectStatus.IN_PROGRESS:return'#1976d2';// blue\ncase ProjectStatus.COMPLETED:return'#2e7d32';// green\ncase ProjectStatus.ON_HOLD:return'#ed6c02';// orange\ncase ProjectStatus.CANCELLED:return'#d32f2f';// red\ncase ProjectStatus.PLANNING:return'#9c27b0';// purple\ndefault:return'#757575';// grey\n}};// Define dashboard access permissions\n/**\n * Determines dashboard access permissions based on user role\n * @param role The user's role\n * @returns Object with dashboard access permissions\n */export const getDashboardAccess=role=>{// Default access (minimum permissions)\nconst defaultAccess={canViewAllProjects:false,canViewRisksAndIssues:false,canViewFinancials:false,canViewClientData:false,canViewDepartmentData:false,canExportReports:false};if(!role)return defaultAccess;switch(role){case UserRole.ADMIN:case UserRole.EXECUTIVE:// Full access for executives and admins\nreturn{canViewAllProjects:true,canViewRisksAndIssues:true,canViewFinancials:true,canViewClientData:true,canViewDepartmentData:true,canExportReports:true};case UserRole.MAIN_PMO:// Main PMO has wide access except some financial details\nreturn{canViewAllProjects:true,canViewRisksAndIssues:true,canViewFinancials:false,canViewClientData:true,canViewDepartmentData:true,canExportReports:true};case UserRole.DEPARTMENT_DIRECTOR:// Department directors see their own department data plus some cross-department views\nreturn{canViewAllProjects:false,canViewRisksAndIssues:true,canViewFinancials:true,canViewClientData:false,canViewDepartmentData:true,canExportReports:true};case UserRole.SUB_PMO:// Sub PMO has more limited access\nreturn{canViewAllProjects:false,canViewRisksAndIssues:true,canViewFinancials:false,canViewClientData:false,canViewDepartmentData:true,canExportReports:false};case UserRole.PROJECT_MANAGER:// Project managers only see their own projects\nreturn{canViewAllProjects:false,canViewRisksAndIssues:false,canViewFinancials:false,canViewClientData:false,canViewDepartmentData:false,canExportReports:false};default:return defaultAccess;}};","map":{"version":3,"names":["ProjectStatus","UserRole","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","format","getStatusColor","status","endDate","IN_PROGRESS","today","projectEndDate","COMPLETED","ON_HOLD","CANCELLED","PLANNING","getDashboardAccess","role","defaultAccess","canViewAllProjects","canViewRisksAndIssues","canViewFinancials","canViewClientData","canViewDepartmentData","canExportReports","ADMIN","EXECUTIVE","MAIN_PMO","DEPARTMENT_DIRECTOR","SUB_PMO","PROJECT_MANAGER"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/utils/helpers.ts"],"sourcesContent":["import { ProjectStatus, UserRole } from '../types';\n\nexport const formatDate = (dateString: string): string => {\n  const date = new Date(dateString);\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }).format(date);\n};\n\nexport const getStatusColor = (status: ProjectStatus, endDate?: string): string => {\n  // Check if project is overdue\n  if (endDate && status === ProjectStatus.IN_PROGRESS) {\n    const today = new Date();\n    const projectEndDate = new Date(endDate);\n    if (projectEndDate < today) {\n      return '#d32f2f'; // Red color for overdue projects\n    }\n  }\n\n  // Default status colors\n  switch (status) {\n    case ProjectStatus.IN_PROGRESS:\n      return '#1976d2'; // blue\n    case ProjectStatus.COMPLETED:\n      return '#2e7d32'; // green\n    case ProjectStatus.ON_HOLD:\n      return '#ed6c02'; // orange\n    case ProjectStatus.CANCELLED:\n      return '#d32f2f'; // red\n    case ProjectStatus.PLANNING:\n      return '#9c27b0'; // purple\n    default:\n      return '#757575'; // grey\n  }\n};\n\n// Define dashboard access permissions\nexport interface DashboardAccess {\n  canViewAllProjects: boolean;\n  canViewRisksAndIssues: boolean;\n  canViewFinancials: boolean;\n  canViewClientData: boolean;\n  canViewDepartmentData: boolean;\n  canExportReports: boolean;\n}\n\n/**\n * Determines dashboard access permissions based on user role\n * @param role The user's role\n * @returns Object with dashboard access permissions\n */\nexport const getDashboardAccess = (role?: UserRole): DashboardAccess => {\n  // Default access (minimum permissions)\n  const defaultAccess: DashboardAccess = {\n    canViewAllProjects: false,\n    canViewRisksAndIssues: false,\n    canViewFinancials: false,\n    canViewClientData: false,\n    canViewDepartmentData: false,\n    canExportReports: false\n  };\n  \n  if (!role) return defaultAccess;\n  \n  switch (role) {\n    case UserRole.ADMIN:\n    case UserRole.EXECUTIVE:\n      // Full access for executives and admins\n      return {\n        canViewAllProjects: true,\n        canViewRisksAndIssues: true,\n        canViewFinancials: true,\n        canViewClientData: true,\n        canViewDepartmentData: true,\n        canExportReports: true\n      };\n    \n    case UserRole.MAIN_PMO:\n      // Main PMO has wide access except some financial details\n      return {\n        canViewAllProjects: true,\n        canViewRisksAndIssues: true,\n        canViewFinancials: false,\n        canViewClientData: true,\n        canViewDepartmentData: true,\n        canExportReports: true\n      };\n      \n    case UserRole.DEPARTMENT_DIRECTOR:\n      // Department directors see their own department data plus some cross-department views\n      return {\n        canViewAllProjects: false,\n        canViewRisksAndIssues: true,\n        canViewFinancials: true,\n        canViewClientData: false,\n        canViewDepartmentData: true,\n        canExportReports: true\n      };\n      \n    case UserRole.SUB_PMO:\n      // Sub PMO has more limited access\n      return {\n        canViewAllProjects: false,\n        canViewRisksAndIssues: true,\n        canViewFinancials: false,\n        canViewClientData: false,\n        canViewDepartmentData: true,\n        canExportReports: false\n      };\n      \n    case UserRole.PROJECT_MANAGER:\n      // Project managers only see their own projects\n      return {\n        canViewAllProjects: false,\n        canViewRisksAndIssues: false,\n        canViewFinancials: false,\n        canViewClientData: false,\n        canViewDepartmentData: false,\n        canExportReports: false\n      };\n      \n    default:\n      return defaultAccess;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}