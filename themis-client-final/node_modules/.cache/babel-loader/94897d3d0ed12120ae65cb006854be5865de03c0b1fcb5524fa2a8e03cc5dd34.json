{"ast":null,"code":"import React from'react';import{TaskStatus}from'../../types';import{Box,Typography,Paper,Chip,Divider}from'@mui/material';// Define the styles inline since we removed most CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const styles={emptyState:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',height:'200px',padding:'20px',textAlign:'center',color:'#888'}};// Function to get color based on task status\nconst getStatusColor=status=>{switch(status){case TaskStatus.TODO:return'#6c757d';case TaskStatus.IN_PROGRESS:return'#007bff';case TaskStatus.DONE:return'#28a745';case TaskStatus.REVIEW:return'#dc3545';default:return'#007bff';}};const GanttChart=_ref=>{let{project,tasks,onTaskClick}=_ref;const sortedTasks=[...tasks].sort((a,b)=>{const aDate=new Date(a.startDate).getTime();const bDate=new Date(b.startDate).getTime();return aDate-bDate;});const projectStart=new Date(project.startDate);const projectEnd=new Date(project.endDate);const totalProjectDays=Math.ceil((projectEnd.getTime()-projectStart.getTime())/(1000*60*60*24));const handleClick=task=>{if(onTaskClick){onTaskClick(task);}};if(sortedTasks.length===0){return/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Project Timeline\"}),/*#__PURE__*/_jsxs(Box,{sx:styles.emptyState,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No tasks available for this project.\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Add tasks to see them in the Gantt chart.\"})]})]});}return/*#__PURE__*/_jsxs(Box,{sx:{p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Project Timeline\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:[\"Project duration: \",projectStart.toLocaleDateString(),\" - \",projectEnd.toLocaleDateString(),\" (\",totalProjectDays,\" days)\"]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',gap:1,mt:2},children:sortedTasks.map(task=>{const startDate=new Date(task.startDate);const endDate=new Date(task.dueDate);const taskDays=Math.ceil((endDate.getTime()-startDate.getTime())/(1000*60*60*24));// Calculate position relative to project timeline\nconst daysFromStart=Math.ceil((startDate.getTime()-projectStart.getTime())/(1000*60*60*24));const percentFromStart=daysFromStart/totalProjectDays*100;const percentWidth=taskDays/totalProjectDays*100;// Ensure percentFromStart is not negative (for tasks starting before project start)\nconst adjustedPercentFromStart=Math.max(0,percentFromStart);// Ensure width + start doesn't exceed 100%\nconst adjustedPercentWidth=Math.min(percentWidth,100-adjustedPercentFromStart);return/*#__PURE__*/_jsxs(Paper,{sx:{p:1.5,mb:1,cursor:'pointer',borderLeft:`4px solid ${getStatusColor(task.status)}`,'&:hover':{boxShadow:2}},onClick:()=>handleClick(task),children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:task.title}),/*#__PURE__*/_jsx(Chip,{label:task.status,size:\"small\",sx:{bgcolor:getStatusColor(task.status),color:'white'}})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[startDate.toLocaleDateString(),\" - \",endDate.toLocaleDateString(),\" (\",taskDays,\" days)\"]}),/*#__PURE__*/_jsx(Box,{sx:{mt:1,height:8,width:'100%',bgcolor:'#f0f0f0',borderRadius:1,overflow:'hidden'},children:/*#__PURE__*/_jsx(Box,{sx:{height:'100%',width:`${adjustedPercentWidth}%`,bgcolor:getStatusColor(task.status),ml:`${adjustedPercentFromStart}%`}})}),task.assignee&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:[\"Assigned to: \",task.assignee.firstName,\" \",task.assignee.lastName]})]},task.id);})})]});};export default GanttChart;","map":{"version":3,"names":["React","TaskStatus","Box","Typography","Paper","Chip","Divider","jsx","_jsx","jsxs","_jsxs","styles","emptyState","display","flexDirection","alignItems","justifyContent","height","padding","textAlign","color","getStatusColor","status","TODO","IN_PROGRESS","DONE","REVIEW","GanttChart","_ref","project","tasks","onTaskClick","sortedTasks","sort","a","b","aDate","Date","startDate","getTime","bDate","projectStart","projectEnd","endDate","totalProjectDays","Math","ceil","handleClick","task","length","sx","p","bgcolor","borderRadius","children","variant","gutterBottom","toLocaleDateString","my","gap","mt","map","dueDate","taskDays","daysFromStart","percentFromStart","percentWidth","adjustedPercentFromStart","max","adjustedPercentWidth","min","mb","cursor","borderLeft","boxShadow","onClick","title","label","size","width","overflow","ml","assignee","firstName","lastName","id"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Gantt/GanttChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Project, Task, TaskStatus } from '../../types';\nimport { Box, Typography, Paper, Chip, Divider } from '@mui/material';\n\n// Define the styles inline since we removed most CSS\nconst styles = {\n  emptyState: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '200px',\n    padding: '20px',\n    textAlign: 'center',\n    color: '#888'\n  }\n};\n\ninterface GanttChartProps {\n  project: Project;\n  tasks: Task[];\n  onTaskClick?: (task: Task) => void;\n  onTaskDoubleClick?: (task: Task) => void;\n}\n\n// Function to get color based on task status\nconst getStatusColor = (status: TaskStatus): string => {\n  switch (status) {\n    case TaskStatus.TODO:\n      return '#6c757d';\n    case TaskStatus.IN_PROGRESS:\n      return '#007bff';\n    case TaskStatus.DONE:\n      return '#28a745';\n    case TaskStatus.REVIEW:\n      return '#dc3545';\n    default:\n      return '#007bff';\n  }\n};\n\nconst GanttChart: React.FC<GanttChartProps> = ({ \n  project, \n  tasks, \n  onTaskClick \n}) => {\n  const sortedTasks = [...tasks].sort((a, b) => {\n    const aDate = new Date(a.startDate).getTime();\n    const bDate = new Date(b.startDate).getTime();\n    return aDate - bDate;\n  });\n\n  const projectStart = new Date(project.startDate);\n  const projectEnd = new Date(project.endDate);\n  const totalProjectDays = Math.ceil((projectEnd.getTime() - projectStart.getTime()) / (1000 * 60 * 60 * 24));\n\n  const handleClick = (task: Task) => {\n    if (onTaskClick) {\n      onTaskClick(task);\n    }\n  };\n\n  if (sortedTasks.length === 0) {\n    return (\n      <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Project Timeline\n        </Typography>\n        <Box sx={styles.emptyState}>\n          <Typography variant=\"body1\">No tasks available for this project.</Typography>\n          <Typography variant=\"body2\">Add tasks to see them in the Gantt chart.</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Project Timeline\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n        Project duration: {projectStart.toLocaleDateString()} - {projectEnd.toLocaleDateString()} ({totalProjectDays} days)\n      </Typography>\n      <Divider sx={{ my: 2 }} />\n\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, mt: 2 }}>\n        {sortedTasks.map(task => {\n          const startDate = new Date(task.startDate);\n          const endDate = new Date(task.dueDate);\n          const taskDays = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n          \n          // Calculate position relative to project timeline\n          const daysFromStart = Math.ceil((startDate.getTime() - projectStart.getTime()) / (1000 * 60 * 60 * 24));\n          const percentFromStart = (daysFromStart / totalProjectDays) * 100;\n          const percentWidth = (taskDays / totalProjectDays) * 100;\n          \n          // Ensure percentFromStart is not negative (for tasks starting before project start)\n          const adjustedPercentFromStart = Math.max(0, percentFromStart);\n          // Ensure width + start doesn't exceed 100%\n          const adjustedPercentWidth = Math.min(percentWidth, 100 - adjustedPercentFromStart);\n          \n          return (\n            <Paper \n              key={task.id} \n              sx={{ \n                p: 1.5, \n                mb: 1, \n                cursor: 'pointer',\n                borderLeft: `4px solid ${getStatusColor(task.status)}`,\n                '&:hover': { boxShadow: 2 }\n              }}\n              onClick={() => handleClick(task)}\n            >\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"subtitle2\">{task.title}</Typography>\n                <Chip \n                  label={task.status} \n                  size=\"small\" \n                  sx={{ bgcolor: getStatusColor(task.status), color: 'white' }}\n                />\n              </Box>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {startDate.toLocaleDateString()} - {endDate.toLocaleDateString()} ({taskDays} days)\n              </Typography>\n              \n              <Box sx={{ mt: 1, height: 8, width: '100%', bgcolor: '#f0f0f0', borderRadius: 1, overflow: 'hidden' }}>\n                <Box \n                  sx={{ \n                    height: '100%', \n                    width: `${adjustedPercentWidth}%`, \n                    bgcolor: getStatusColor(task.status),\n                    ml: `${adjustedPercentFromStart}%`\n                  }} \n                />\n              </Box>\n              \n              {task.assignee && (\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                  Assigned to: {task.assignee.firstName} {task.assignee.lastName}\n                </Typography>\n              )}\n            </Paper>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default GanttChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}