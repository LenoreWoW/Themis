{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Task/AddTaskDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box, Stack, FormHelperText, Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { TaskPriority, TaskStatus, UserRole } from '../../types';\nimport { TaskService } from '../../services/TaskService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskDialog = ({\n  open,\n  onClose,\n  projectId,\n  projectUsers = [],\n  allUsers = [],\n  onTaskAdded,\n  isIndependentTask = false,\n  initialStatus = TaskStatus.TODO // Default to TODO if not provided\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [availableUsers, setAvailableUsers] = useState(projectUsers);\n  const [taskData, setTaskData] = useState({\n    title: '',\n    description: '',\n    status: initialStatus,\n    priority: TaskPriority.MEDIUM,\n    startDate: new Date(),\n    dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n    // Default to 1 week from now\n    assigneeId: '',\n    isMilestone: false,\n    parentTaskId: ''\n  });\n\n  // Update status when initialStatus changes\n  useEffect(() => {\n    setTaskData(prev => ({\n      ...prev,\n      status: initialStatus\n    }));\n  }, [initialStatus]);\n\n  // Fetch project users if needed\n  useEffect(() => {\n    const fetchProjectUsers = async () => {\n      if (!projectId || !token || projectUsers.length > 0) return;\n      try {\n        // In a real app, you would fetch project users from your API\n        // For now, we'll simulate it with mock data\n        const mockDepartments = [{\n          id: '1',\n          name: 'IT',\n          description: 'Information Technology Department',\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }, {\n          id: '2',\n          name: 'Engineering',\n          description: 'Engineering Department',\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }];\n        const mockUsers = [{\n          id: '1',\n          username: 'alice',\n          firstName: 'Alice',\n          lastName: 'Smith',\n          email: 'alice@example.com',\n          role: UserRole.PROJECT_MANAGER,\n          department: mockDepartments[0],\n          isActive: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }, {\n          id: '2',\n          username: 'bob',\n          firstName: 'Bob',\n          lastName: 'Johnson',\n          email: 'bob@example.com',\n          role: UserRole.ADMIN,\n          department: mockDepartments[1],\n          isActive: true,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        }];\n        setAvailableUsers(mockUsers);\n      } catch (error) {\n        console.error(\"Error fetching project users:\", error);\n      }\n    };\n    fetchProjectUsers();\n  }, [projectId, token, projectUsers]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when field is edited\n    if (formErrors[name]) {\n      setFormErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setTaskData(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const handleStartDateChange = date => {\n    if (date) {\n      setTaskData(prev => ({\n        ...prev,\n        startDate: date\n      }));\n    }\n  };\n  const handleDueDateChange = date => {\n    if (date) {\n      setTaskData(prev => ({\n        ...prev,\n        dueDate: date\n      }));\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!taskData.title.trim()) {\n      errors.title = 'Title is required';\n    }\n    if (taskData.startDate > taskData.dueDate) {\n      errors.dueDate = 'Due date must be after start date';\n    }\n    if (isIndependentTask && !taskData.assigneeId) {\n      errors.assigneeId = 'Assignee is required for independent tasks';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n    setIsSubmitting(true);\n    try {\n      if (isIndependentTask) {\n        // Create independent task\n        await TaskService.createIndependentTask({\n          ...taskData,\n          startDate: taskData.startDate.toISOString(),\n          dueDate: taskData.dueDate.toISOString()\n        }, token || '');\n      } else if (projectId) {\n        // Create project task\n        await TaskService.createTask(projectId, {\n          ...taskData,\n          startDate: taskData.startDate.toISOString(),\n          dueDate: taskData.dueDate.toISOString()\n        }, token || '');\n      } else {\n        throw new Error('Missing project ID for project task');\n      }\n      onTaskAdded(true);\n      onClose();\n\n      // Reset form data\n      setTaskData({\n        title: '',\n        description: '',\n        status: initialStatus,\n        priority: TaskPriority.MEDIUM,\n        startDate: new Date(),\n        dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n        assigneeId: '',\n        isMilestone: false,\n        parentTaskId: ''\n      });\n    } catch (error) {\n      console.error('Error creating task:', error);\n      setFormErrors(prev => ({\n        ...prev,\n        submit: 'Failed to create task. Please try again.'\n      }));\n      onTaskAdded(false);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Update getAvailableUsers to use our availableUsers state\n  const getAvailableUsers = () => {\n    return isIndependentTask ? allUsers : availableUsers;\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: t('task.add')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"title\",\n            label: t('task.title'),\n            value: taskData.title,\n            onChange: handleInputChange,\n            fullWidth: true,\n            required: true,\n            error: !!formErrors.title,\n            helperText: formErrors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"description\",\n            label: t('task.description'),\n            value: taskData.description,\n            onChange: handleInputChange,\n            fullWidth: true,\n            multiline: true,\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: t('task.status')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"status\",\n                value: taskData.status,\n                label: t('task.status'),\n                onChange: handleSelectChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskStatus.TODO,\n                  children: t('taskStatus.TODO')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskStatus.IN_PROGRESS,\n                  children: t('taskStatus.IN_PROGRESS')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskStatus.REVIEW,\n                  children: t('taskStatus.REVIEW')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskStatus.DONE,\n                  children: t('taskStatus.DONE')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: t('task.priority')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                name: \"priority\",\n                value: taskData.priority,\n                label: t('task.priority'),\n                onChange: handleSelectChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskPriority.LOW,\n                  children: t('taskPriority.LOW')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskPriority.MEDIUM,\n                  children: t('taskPriority.MEDIUM')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: TaskPriority.HIGH,\n                  children: t('taskPriority.HIGH')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n              label: t('task.startDate'),\n              value: taskData.startDate,\n              onChange: handleStartDateChange,\n              slotProps: {\n                textField: {\n                  fullWidth: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: t('task.dueDate'),\n              value: taskData.dueDate,\n              onChange: handleDueDateChange,\n              slotProps: {\n                textField: {\n                  fullWidth: true,\n                  error: !!formErrors.dueDate,\n                  helperText: formErrors.dueDate\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: !!formErrors.assigneeId,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: t('task.assignee')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"assigneeId\",\n              value: taskData.assigneeId,\n              label: t('task.assignee'),\n              onChange: handleSelectChange,\n              required: isIndependentTask,\n              children: [!isIndependentTask && /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: t('project.unassigned')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 40\n              }, this), getAvailableUsers().map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: user.id,\n                children: [user.firstName, \" \", user.lastName, \" (\", user.username, \")\"]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), formErrors.assigneeId && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: formErrors.assigneeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), !isIndependentTask && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: taskData.isMilestone,\n              onChange: handleCheckboxChange,\n              name: \"isMilestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this),\n            label: t('task.milestone')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), formErrors.submit && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            variant: \"body2\",\n            children: formErrors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: t('common.cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        disabled: isSubmitting,\n        children: isSubmitting ? t('common.creating') : t('task.add')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskDialog, \"aRUWR4i6RAw/VnehHdq0Wl8WNq8=\", false, function () {\n  return [useAuth, useTranslation];\n});\n_c = AddTaskDialog;\nexport default AddTaskDialog;\nvar _c;\n$RefreshReg$(_c, \"AddTaskDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","FormControl","InputLabel","Select","MenuItem","Box","Stack","FormHelperText","Checkbox","FormControlLabel","Typography","AdapterDateFns","LocalizationProvider","DatePicker","TaskPriority","TaskStatus","UserRole","TaskService","useAuth","useTranslation","jsxDEV","_jsxDEV","AddTaskDialog","open","onClose","projectId","projectUsers","allUsers","onTaskAdded","isIndependentTask","initialStatus","TODO","_s","token","t","isSubmitting","setIsSubmitting","formErrors","setFormErrors","availableUsers","setAvailableUsers","taskData","setTaskData","title","description","status","priority","MEDIUM","startDate","Date","dueDate","now","assigneeId","isMilestone","parentTaskId","prev","fetchProjectUsers","length","mockDepartments","id","name","createdAt","toISOString","updatedAt","mockUsers","username","firstName","lastName","email","role","PROJECT_MANAGER","department","isActive","ADMIN","error","console","handleInputChange","e","value","target","newErrors","handleSelectChange","handleCheckboxChange","checked","handleStartDateChange","date","handleDueDateChange","validateForm","errors","trim","Object","keys","handleSubmit","createIndependentTask","createTask","Error","submit","getAvailableUsers","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","dateAdapter","spacing","sx","mt","label","onChange","required","helperText","multiline","rows","display","gap","IN_PROGRESS","REVIEW","DONE","LOW","HIGH","slotProps","textField","map","user","control","color","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Task/AddTaskDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Dialog, \n  DialogTitle, \n  DialogContent, \n  DialogActions, \n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Stack,\n  FormHelperText,\n  Checkbox,\n  FormControlLabel,\n  Typography,\n  SelectChangeEvent\n} from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { TaskPriority, TaskStatus, User, UserRole, Department } from '../../types';\nimport { TaskService } from '../../services/TaskService';\nimport { useAuth } from '../../context/AuthContext';\nimport { useTranslation } from 'react-i18next';\n\ninterface AddTaskDialogProps {\n  open: boolean;\n  onClose: () => void;\n  projectId?: string; // Optional - if not provided, it's an independent task\n  projectUsers?: User[];\n  allUsers?: User[]; // For independent tasks\n  onTaskAdded: (success: boolean) => void;\n  isIndependentTask?: boolean;\n  initialStatus?: TaskStatus; // Add initialStatus prop\n}\n\nconst AddTaskDialog: React.FC<AddTaskDialogProps> = ({ \n  open, \n  onClose, \n  projectId, \n  projectUsers = [],\n  allUsers = [],\n  onTaskAdded,\n  isIndependentTask = false,\n  initialStatus = TaskStatus.TODO // Default to TODO if not provided\n}) => {\n  const { token } = useAuth();\n  const { t } = useTranslation();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [availableUsers, setAvailableUsers] = useState<User[]>(projectUsers);\n  const [taskData, setTaskData] = useState({\n    title: '',\n    description: '',\n    status: initialStatus,\n    priority: TaskPriority.MEDIUM,\n    startDate: new Date(),\n    dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // Default to 1 week from now\n    assigneeId: '',\n    isMilestone: false,\n    parentTaskId: ''\n  });\n\n  // Update status when initialStatus changes\n  useEffect(() => {\n    setTaskData(prev => ({\n      ...prev,\n      status: initialStatus\n    }));\n  }, [initialStatus]);\n\n  // Fetch project users if needed\n  useEffect(() => {\n    const fetchProjectUsers = async () => {\n      if (!projectId || !token || projectUsers.length > 0) return;\n      \n      try {\n        // In a real app, you would fetch project users from your API\n        // For now, we'll simulate it with mock data\n        const mockDepartments: Department[] = [\n          {\n            id: '1',\n            name: 'IT',\n            description: 'Information Technology Department',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          {\n            id: '2',\n            name: 'Engineering',\n            description: 'Engineering Department',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        ];\n        \n        const mockUsers: User[] = [\n          {\n            id: '1',\n            username: 'alice',\n            firstName: 'Alice',\n            lastName: 'Smith',\n            email: 'alice@example.com',\n            role: UserRole.PROJECT_MANAGER,\n            department: mockDepartments[0],\n            isActive: true,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          },\n          {\n            id: '2',\n            username: 'bob',\n            firstName: 'Bob',\n            lastName: 'Johnson',\n            email: 'bob@example.com',\n            role: UserRole.ADMIN,\n            department: mockDepartments[1],\n            isActive: true,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        ];\n        \n        setAvailableUsers(mockUsers);\n      } catch (error) {\n        console.error(\"Error fetching project users:\", error);\n      }\n    };\n    \n    fetchProjectUsers();\n  }, [projectId, token, projectUsers]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setTaskData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when field is edited\n    if (formErrors[name]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleSelectChange = (e: SelectChangeEvent<string>) => {\n    const { name, value } = e.target;\n    setTaskData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setTaskData(prev => ({ ...prev, [name]: checked }));\n  };\n\n  const handleStartDateChange = (date: Date | null) => {\n    if (date) {\n      setTaskData(prev => ({ ...prev, startDate: date }));\n    }\n  };\n\n  const handleDueDateChange = (date: Date | null) => {\n    if (date) {\n      setTaskData(prev => ({ ...prev, dueDate: date }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n    \n    if (!taskData.title.trim()) {\n      errors.title = 'Title is required';\n    }\n    \n    if (taskData.startDate > taskData.dueDate) {\n      errors.dueDate = 'Due date must be after start date';\n    }\n    \n    if (isIndependentTask && !taskData.assigneeId) {\n      errors.assigneeId = 'Assignee is required for independent tasks';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n    \n    setIsSubmitting(true);\n    try {\n      if (isIndependentTask) {\n        // Create independent task\n        await TaskService.createIndependentTask({\n          ...taskData,\n          startDate: taskData.startDate.toISOString(),\n          dueDate: taskData.dueDate.toISOString()\n        }, token || '');\n      } else if (projectId) {\n        // Create project task\n        await TaskService.createTask(projectId, {\n          ...taskData,\n          startDate: taskData.startDate.toISOString(),\n          dueDate: taskData.dueDate.toISOString()\n        }, token || '');\n      } else {\n        throw new Error('Missing project ID for project task');\n      }\n      \n      onTaskAdded(true);\n      onClose();\n      \n      // Reset form data\n      setTaskData({\n        title: '',\n        description: '',\n        status: initialStatus,\n        priority: TaskPriority.MEDIUM,\n        startDate: new Date(),\n        dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n        assigneeId: '',\n        isMilestone: false,\n        parentTaskId: ''\n      });\n    } catch (error) {\n      console.error('Error creating task:', error);\n      setFormErrors(prev => ({ \n        ...prev, \n        submit: 'Failed to create task. Please try again.' \n      }));\n      onTaskAdded(false);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Update getAvailableUsers to use our availableUsers state\n  const getAvailableUsers = () => {\n    return isIndependentTask ? allUsers : availableUsers;\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>{t('task.add')}</DialogTitle>\n      <DialogContent>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <TextField\n              name=\"title\"\n              label={t('task.title')}\n              value={taskData.title}\n              onChange={handleInputChange}\n              fullWidth\n              required\n              error={!!formErrors.title}\n              helperText={formErrors.title}\n            />\n            \n            <TextField\n              name=\"description\"\n              label={t('task.description')}\n              value={taskData.description}\n              onChange={handleInputChange}\n              fullWidth\n              multiline\n              rows={3}\n            />\n            \n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <FormControl fullWidth>\n                <InputLabel>{t('task.status')}</InputLabel>\n                <Select\n                  name=\"status\"\n                  value={taskData.status}\n                  label={t('task.status')}\n                  onChange={handleSelectChange}\n                >\n                  <MenuItem value={TaskStatus.TODO}>{t('taskStatus.TODO')}</MenuItem>\n                  <MenuItem value={TaskStatus.IN_PROGRESS}>{t('taskStatus.IN_PROGRESS')}</MenuItem>\n                  <MenuItem value={TaskStatus.REVIEW}>{t('taskStatus.REVIEW')}</MenuItem>\n                  <MenuItem value={TaskStatus.DONE}>{t('taskStatus.DONE')}</MenuItem>\n                </Select>\n              </FormControl>\n              \n              <FormControl fullWidth>\n                <InputLabel>{t('task.priority')}</InputLabel>\n                <Select\n                  name=\"priority\"\n                  value={taskData.priority}\n                  label={t('task.priority')}\n                  onChange={handleSelectChange}\n                >\n                  <MenuItem value={TaskPriority.LOW}>{t('taskPriority.LOW')}</MenuItem>\n                  <MenuItem value={TaskPriority.MEDIUM}>{t('taskPriority.MEDIUM')}</MenuItem>\n                  <MenuItem value={TaskPriority.HIGH}>{t('taskPriority.HIGH')}</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n            \n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <DatePicker\n                label={t('task.startDate')}\n                value={taskData.startDate}\n                onChange={handleStartDateChange}\n                slotProps={{ textField: { fullWidth: true } }}\n              />\n              \n              <DatePicker\n                label={t('task.dueDate')}\n                value={taskData.dueDate}\n                onChange={handleDueDateChange}\n                slotProps={{ \n                  textField: { \n                    fullWidth: true,\n                    error: !!formErrors.dueDate,\n                    helperText: formErrors.dueDate\n                  } \n                }}\n              />\n            </Box>\n            \n            <FormControl fullWidth error={!!formErrors.assigneeId}>\n              <InputLabel>{t('task.assignee')}</InputLabel>\n              <Select\n                name=\"assigneeId\"\n                value={taskData.assigneeId}\n                label={t('task.assignee')}\n                onChange={handleSelectChange}\n                required={isIndependentTask}\n              >\n                {!isIndependentTask && <MenuItem value=\"\">{t('project.unassigned')}</MenuItem>}\n                {getAvailableUsers().map(user => (\n                  <MenuItem key={user.id} value={user.id}>\n                    {user.firstName} {user.lastName} ({user.username})\n                  </MenuItem>\n                ))}\n              </Select>\n              {formErrors.assigneeId && <FormHelperText>{formErrors.assigneeId}</FormHelperText>}\n            </FormControl>\n            \n            {!isIndependentTask && (\n              <FormControlLabel\n                control={\n                  <Checkbox \n                    checked={taskData.isMilestone}\n                    onChange={handleCheckboxChange}\n                    name=\"isMilestone\"\n                  />\n                }\n                label={t('task.milestone')}\n              />\n            )}\n            \n            {formErrors.submit && (\n              <Typography color=\"error\" variant=\"body2\">\n                {formErrors.submit}\n              </Typography>\n            )}\n          </Stack>\n        </LocalizationProvider>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>{t('common.cancel')}</Button>\n        <Button \n          onClick={handleSubmit} \n          variant=\"contained\" \n          disabled={isSubmitting}\n        >\n          {isSubmitting ? t('common.creating') : t('task.add')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddTaskDialog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}