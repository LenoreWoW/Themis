{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Typography,Paper,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,MenuItem,IconButton,Box,Chip,LinearProgress,Slider,Tabs,Tab,FormControlLabel,Switch,Select,FormControl,InputLabel,ListItemText,Checkbox,OutlinedInput}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,Link as LinkIcon}from'@mui/icons-material';import{GridContainer,GridItem}from'../components/common/MuiGridWrapper';import{useTranslation}from'react-i18next';import api from'../services/api';// Enums used in this component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var GoalType=/*#__PURE__*/function(GoalType){GoalType[\"STRATEGIC\"]=\"STRATEGIC\";GoalType[\"ANNUAL\"]=\"ANNUAL\";GoalType[\"QUARTERLY\"]=\"QUARTERLY\";GoalType[\"MONTHLY\"]=\"MONTHLY\";return GoalType;}(GoalType||{});var GoalCategory=/*#__PURE__*/function(GoalCategory){GoalCategory[\"PERFORMANCE\"]=\"PERFORMANCE\";GoalCategory[\"FINANCIAL\"]=\"FINANCIAL\";GoalCategory[\"CUSTOMER\"]=\"CUSTOMER\";GoalCategory[\"LEARNING\"]=\"LEARNING\";GoalCategory[\"PROCESS\"]=\"PROCESS\";return GoalCategory;}(GoalCategory||{});var GoalStatus=/*#__PURE__*/function(GoalStatus){GoalStatus[\"NOT_STARTED\"]=\"NOT_STARTED\";GoalStatus[\"IN_PROGRESS\"]=\"IN_PROGRESS\";GoalStatus[\"COMPLETED\"]=\"COMPLETED\";GoalStatus[\"ON_HOLD\"]=\"ON_HOLD\";return GoalStatus;}(GoalStatus||{});// Local interfaces\n// Tab panel component\nfunction TabPanel(props){const{children,value,index,...other}=props;return/*#__PURE__*/_jsx(\"div\",{role:\"tabpanel\",hidden:value!==index,id:`goals-tabpanel-${index}`,\"aria-labelledby\":`goals-tab-${index}`,...other,children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{pt:3},children:children})});}function a11yProps(index){return{id:`goals-tab-${index}`,'aria-controls':`goals-tabpanel-${index}`};}const GoalsPage=()=>{const{t}=useTranslation();const[tabValue,setTabValue]=useState(0);const[strategicGoals,setStrategicGoals]=useState([]);const[annualGoals,setAnnualGoals]=useState([]);const[openDialog,setOpenDialog]=useState(false);const[currentGoal,setCurrentGoal]=useState(null);const[isEditing,setIsEditing]=useState(false);const[projects,setProjects]=useState([]);const[loading,setLoading]=useState(false);const[projectWeights,setProjectWeights]=useState({});// Fetch projects when component mounts\nuseEffect(()=>{const fetchProjects=async()=>{setLoading(true);try{const response=await api.projects.getAllProjects('');if(response.success){setProjects(response.data);}}catch(error){console.error('Error fetching projects:',error);}finally{setLoading(false);}};fetchProjects();},[]);// Calculate a goal's progress based on the progress of its linked projects\nconst calculateGoalProgressFromProjects=linkedProjectWeights=>{if(linkedProjectWeights.length===0)return 0;let weightedProgress=0;let totalWeight=0;linkedProjectWeights.forEach(projectWeight=>{const project=projects.find(p=>p.id===projectWeight.projectId);if(project){weightedProgress+=project.progress*projectWeight.weight;totalWeight+=projectWeight.weight;}});// Return weighted average, or 0 if no valid projects were found\nreturn totalWeight>0?Math.round(weightedProgress/totalWeight):0;};const handleTabChange=(_event,newValue)=>{setTabValue(newValue);};const handleOpenDialog=function(){let goal=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let editing=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;setIsEditing(editing);if(goal){setCurrentGoal(goal);// Initialize project weights from existing linked projects\nconst weights={};goal.linkedProjects.forEach(link=>{weights[link.projectId]=link.weight;});setProjectWeights(weights);}else{// Create a new goal with default values\nsetCurrentGoal({id:Date.now().toString(),title:'',description:'',type:tabValue===0?GoalType.STRATEGIC:GoalType.ANNUAL,category:GoalCategory.PERFORMANCE,status:GoalStatus.NOT_STARTED,progress:0,startDate:new Date().toISOString().split('T')[0],endDate:new Date(new Date().setFullYear(new Date().getFullYear()+1)).toISOString().split('T')[0],assignedTo:'',linkedProjects:[],isProgressAutoCalculated:false,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()});setProjectWeights({});}setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);setCurrentGoal(null);setIsEditing(false);setProjectWeights({});};const handleChange=e=>{const{name,value}=e.target;setCurrentGoal(prevGoal=>prevGoal?{...prevGoal,[name]:value}:null);};const handleSelectChange=event=>{const{name,value}=event.target;setCurrentGoal(prevGoal=>{if(!prevGoal)return prevGoal;return{...prevGoal,[name]:value};});};const handleProgressChange=(event,newValue)=>{setCurrentGoal(prevGoal=>{if(!prevGoal)return prevGoal;return{...prevGoal,progress:newValue};});};const handleLinkedProjectsChange=event=>{if(!currentGoal)return;const selectedProjectIds=event.target.value;// Initialize weights for newly selected projects\nconst updatedWeights={...projectWeights};selectedProjectIds.forEach(projectId=>{// If this is a newly selected project, initialize its weight to a default value\nif(!updatedWeights[projectId]){updatedWeights[projectId]=100/selectedProjectIds.length;// Default to equal weights\n}});// Remove weights for projects that are no longer selected\nObject.keys(updatedWeights).forEach(projectId=>{if(!selectedProjectIds.includes(projectId)){delete updatedWeights[projectId];}});// Normalize weights to ensure they sum to 100%\nnormalizeWeights(updatedWeights);setProjectWeights(updatedWeights);// Update the linked projects with new weights\nconst updatedLinkedProjects=selectedProjectIds.map(projectId=>({projectId,weight:updatedWeights[projectId]}));setCurrentGoal({...currentGoal,linkedProjects:updatedLinkedProjects});};const handleAutoCalculateChange=event=>{const isAutoCalculated=event.target.checked;setCurrentGoal(prevGoal=>{if(!prevGoal)return null;const updatedGoal={...prevGoal,isProgressAutoCalculated:isAutoCalculated};// If enabling auto-calculation, update the progress based on linked projects\nif(isAutoCalculated){updatedGoal.progress=calculateGoalProgressFromProjects(prevGoal.linkedProjects.map(p=>p));}return updatedGoal;});};const handleWeightChange=(projectId,newWeight)=>{if(!currentGoal)return;const updatedWeights={...projectWeights};updatedWeights[projectId]=newWeight;// Ensure weights sum to 100%\nnormalizeWeights(updatedWeights);setProjectWeights(updatedWeights);// Update linked projects with new weights\nconst updatedLinkedProjects=currentGoal.linkedProjects.map(project=>project.projectId===projectId?{...project,weight:newWeight}:{...project,weight:updatedWeights[project.projectId]});setCurrentGoal({...currentGoal,linkedProjects:updatedLinkedProjects});};const handleSubmit=event=>{event.preventDefault();if(!currentGoal)return;// Ensure project weights are properly set before saving\nconst finalLinkedProjects=currentGoal.linkedProjects.map(project=>({projectId:project.projectId,weight:projectWeights[project.projectId]||0}));const finalGoal={...currentGoal,linkedProjects:finalLinkedProjects,updatedAt:new Date().toISOString()};// Save the goal\nif(isEditing){// Update existing goal\nif(currentGoal.type===GoalType.STRATEGIC){setStrategicGoals(prevGoals=>prevGoals.map(goal=>goal.id===currentGoal.id?finalGoal:goal));}else{setAnnualGoals(prevGoals=>prevGoals.map(goal=>goal.id===currentGoal.id?finalGoal:goal));}}else{// Add new goal\nif(finalGoal.type===GoalType.STRATEGIC){setStrategicGoals(prevGoals=>[...prevGoals,finalGoal]);}else{setAnnualGoals(prevGoals=>[...prevGoals,finalGoal]);}}setOpenDialog(false);setCurrentGoal(null);setProjectWeights({});};const handleDeleteGoal=id=>{if(tabValue===0){setStrategicGoals(strategicGoals.filter(goal=>goal.id!==id));}else{setAnnualGoals(annualGoals.filter(goal=>goal.id!==id));}};const getStatusColor=status=>{switch(status){case GoalStatus.NOT_STARTED:return'default';case GoalStatus.IN_PROGRESS:return'primary';case GoalStatus.COMPLETED:return'success';case GoalStatus.ON_HOLD:return'warning';default:return'default';}};const getTranslatedStatus=status=>{switch(status){case GoalStatus.NOT_STARTED:return t('goals.notStarted');case GoalStatus.IN_PROGRESS:return t('status.inProgress');case GoalStatus.COMPLETED:return t('status.completed');case GoalStatus.ON_HOLD:return t('status.onHold');default:return status;}};const getTranslatedCategory=category=>{switch(category){case GoalCategory.PERFORMANCE:return t('goals.performance');case GoalCategory.FINANCIAL:return t('goals.financial');case GoalCategory.CUSTOMER:return t('goals.customer');case GoalCategory.LEARNING:return t('goals.learning');case GoalCategory.PROCESS:return t('goals.process');default:return category;}};const renderGoalCards=goals=>/*#__PURE__*/_jsx(GridContainer,{spacing:3,children:goals.map(goal=>/*#__PURE__*/_jsx(GridItem,{xs:12,md:6,lg:4,children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,height:'100%',display:'flex',flexDirection:'column',position:'relative'},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:10,right:10,display:'flex'},children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleOpenDialog(goal,true),sx:{mr:1},children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteGoal(goal.id),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:goal.title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2,minHeight:'40px'},children:goal.description}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Chip,{label:getTranslatedStatus(goal.status),size:\"small\",sx:{mr:1,mb:1},color:getStatusColor(goal.status)}),/*#__PURE__*/_jsx(Chip,{label:getTranslatedCategory(goal.category),size:\"small\",sx:{mb:1},variant:\"outlined\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Box,{component:\"span\",sx:{width:'50%',fontWeight:'bold',mr:1},children:[t('goals.progress'),\":\"]}),/*#__PURE__*/_jsxs(Box,{component:\"span\",sx:{width:'50%'},children:[goal.progress,\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:goal.progress,sx:{mt:1,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:goal.isProgressAutoCalculated,size:\"small\",disabled:true}),label:t('goals.autoCalculated'),sx:{'& .MuiFormControlLabel-label':{fontSize:'0.75rem'}}})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{fontWeight:'bold'},children:[t('timeline'),\":\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[new Date(goal.startDate).toLocaleDateString(),\" - \",new Date(goal.endDate).toLocaleDateString()]})]}),/*#__PURE__*/_jsx(Box,{sx:{mt:'auto',pt:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[t('goals.assignedTo'),\": \",goal.assignedTo]})}),goal.linkedProjects.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{fontWeight:'bold',mb:1},children:[t('goals.linkedProjects'),\":\"]}),goal.linkedProjects.map(projectWeight=>{const project=projects.find(p=>p.id===projectWeight.projectId);return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Chip,{icon:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"small\"}),label:project?project.name:projectWeight.projectId,size:\"small\",variant:\"outlined\",sx:{mr:1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",sx:{fontWeight:'medium'},children:[projectWeight.weight,\"%\"]})]},projectWeight.projectId);})]})]})},goal.id))});// Function to normalize weights to sum to 100%\nconst normalizeWeights=weights=>{const projectIds=Object.keys(weights);if(projectIds.length===0)return;// Calculate the total of all weights\nconst total=projectIds.reduce((sum,id)=>sum+weights[id],0);// If the total is not 100, normalize\nif(total!==100&&total!==0){projectIds.forEach(id=>{weights[id]=Math.round(weights[id]/total*100);});// Handle any rounding errors to ensure the sum is exactly 100\nconst newTotal=projectIds.reduce((sum,id)=>sum+weights[id],0);if(newTotal!==100){weights[projectIds[0]]+=100-newTotal;}}};return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:3,alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:t('navigation.goals')}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenDialog(),children:t('goals.add')})]}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,\"aria-label\":\"goal types\",children:[/*#__PURE__*/_jsx(Tab,{label:t('goals.strategic'),...a11yProps(0)}),/*#__PURE__*/_jsx(Tab,{label:t('goals.annual'),...a11yProps(1)})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:0,children:renderGoalCards(strategicGoals)}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:1,children:renderGoalCards(annualGoals)}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:isEditing?t('goals.edit'):`${t('goals.addNew')} ${tabValue===0?t('goals.strategic'):t('goals.annual')} ${t('goals.goal')}`}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(GridContainer,{spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(TextField,{label:t('goals.title'),name:\"title\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.title)||'',onChange:handleChange,fullWidth:true,required:true})}),/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(TextField,{label:t('common.description'),name:\"description\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.description)||'',onChange:handleChange,fullWidth:true,multiline:true,rows:3})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{select:true,label:t('goals.category'),name:\"category\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.category)||GoalCategory.PERFORMANCE,onChange:handleSelectChange,fullWidth:true,children:Object.values(GoalCategory).map(category=>/*#__PURE__*/_jsx(MenuItem,{value:category,children:getTranslatedCategory(category)},category))})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{select:true,label:t('status.status'),name:\"status\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.status)||GoalStatus.NOT_STARTED,onChange:handleSelectChange,fullWidth:true,children:Object.values(GoalStatus).map(status=>/*#__PURE__*/_jsx(MenuItem,{value:status,children:getTranslatedStatus(status)},status))})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{label:t('common.startDate'),name:\"startDate\",type:\"date\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.startDate)||'',onChange:handleChange,fullWidth:true,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{label:t('common.endDate'),name:\"endDate\",type:\"date\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.endDate)||'',onChange:handleChange,fullWidth:true,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsx(TextField,{label:t('goals.assignedTo'),name:\"assignedTo\",value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.assignedTo)||'',onChange:handleChange,fullWidth:true})}),/*#__PURE__*/_jsx(GridItem,{xs:12,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"linked-projects-label\",children:t('goals.linkedProjects')}),/*#__PURE__*/_jsx(Select,{labelId:\"linked-projects-label\",multiple:true,value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.linkedProjects.map(p=>p.projectId))||[],onChange:handleLinkedProjectsChange,input:/*#__PURE__*/_jsx(OutlinedInput,{label:t('goals.linkedProjects')}),renderValue:selected=>/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selected.map(value=>{const project=projects.find(p=>p.id===value);return/*#__PURE__*/_jsx(Chip,{label:project?project.name:value,size:\"small\"},value);})}),MenuProps:{PaperProps:{style:{maxHeight:224,width:250}}},children:projects.map(project=>/*#__PURE__*/_jsxs(MenuItem,{value:project.id,children:[/*#__PURE__*/_jsx(Checkbox,{checked:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.linkedProjects.some(p=>p.projectId===project.id))||false}),/*#__PURE__*/_jsx(ListItemText,{primary:project.name})]},project.id))})]})}),/*#__PURE__*/_jsxs(GridItem,{xs:12,children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.isProgressAutoCalculated)||false,onChange:handleAutoCalculateChange,name:\"isProgressAutoCalculated\"}),label:t('goals.autoCalculateProgress')}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",display:\"block\",children:t('goals.autoCalculateDescription')})]}),!(currentGoal!==null&&currentGoal!==void 0&&currentGoal.isProgressAutoCalculated)&&/*#__PURE__*/_jsxs(GridItem,{xs:12,children:[/*#__PURE__*/_jsxs(Typography,{id:\"progress-slider\",gutterBottom:true,children:[t('project.progress'),\": \",(currentGoal===null||currentGoal===void 0?void 0:currentGoal.progress)||0,\"%\"]}),/*#__PURE__*/_jsx(Slider,{value:(currentGoal===null||currentGoal===void 0?void 0:currentGoal.progress)||0,onChange:handleProgressChange,\"aria-labelledby\":\"progress-slider\",valueLabelDisplay:\"auto\",step:5,marks:true,min:0,max:100})]}),(currentGoal===null||currentGoal===void 0?void 0:currentGoal.linkedProjects)&&currentGoal.linkedProjects.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:t('Project Weights')}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",paragraph:true,children:t('Adjust the weight of each project\\'s contribution to this goal. Weights will automatically balance to 100%.')}),(currentGoal===null||currentGoal===void 0?void 0:currentGoal.linkedProjects)&&currentGoal.linkedProjects.map(projectLink=>{const project=projects.find(p=>p.id===projectLink.projectId);return/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:project?project.name:projectLink.projectId}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",fontWeight:\"medium\",children:[projectWeights[projectLink.projectId]||projectLink.weight,\"%\"]})]}),/*#__PURE__*/_jsx(Slider,{value:projectWeights[projectLink.projectId]||projectLink.weight,onChange:(_,newValue)=>handleWeightChange(projectLink.projectId,newValue),\"aria-labelledby\":\"project-weight-slider\",valueLabelDisplay:\"auto\",step:5,marks:true,min:5,max:100})]},projectLink.projectId);})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:t('common.cancel')}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,variant:\"contained\",color:\"primary\",children:isEditing?t('common.update'):t('common.create')})]})]})]});};export default GoalsPage;","map":{"version":3,"names":["React","useState","useEffect","Typography","Paper","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","IconButton","Box","Chip","LinearProgress","Slider","Tabs","Tab","FormControlLabel","Switch","Select","FormControl","InputLabel","ListItemText","Checkbox","OutlinedInput","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","Link","LinkIcon","GridContainer","GridItem","useTranslation","api","jsx","_jsx","jsxs","_jsxs","GoalType","GoalCategory","GoalStatus","TabPanel","props","children","value","index","other","role","hidden","id","sx","pt","a11yProps","GoalsPage","t","tabValue","setTabValue","strategicGoals","setStrategicGoals","annualGoals","setAnnualGoals","openDialog","setOpenDialog","currentGoal","setCurrentGoal","isEditing","setIsEditing","projects","setProjects","loading","setLoading","projectWeights","setProjectWeights","fetchProjects","response","getAllProjects","success","data","error","console","calculateGoalProgressFromProjects","linkedProjectWeights","length","weightedProgress","totalWeight","forEach","projectWeight","project","find","p","projectId","progress","weight","Math","round","handleTabChange","_event","newValue","handleOpenDialog","goal","arguments","undefined","editing","weights","linkedProjects","link","Date","now","toString","title","description","type","STRATEGIC","ANNUAL","category","PERFORMANCE","status","NOT_STARTED","startDate","toISOString","split","endDate","setFullYear","getFullYear","assignedTo","isProgressAutoCalculated","createdAt","updatedAt","handleCloseDialog","handleChange","e","name","target","prevGoal","handleSelectChange","event","handleProgressChange","handleLinkedProjectsChange","selectedProjectIds","updatedWeights","Object","keys","includes","normalizeWeights","updatedLinkedProjects","map","handleAutoCalculateChange","isAutoCalculated","checked","updatedGoal","handleWeightChange","newWeight","handleSubmit","preventDefault","finalLinkedProjects","finalGoal","prevGoals","handleDeleteGoal","filter","getStatusColor","IN_PROGRESS","COMPLETED","ON_HOLD","getTranslatedStatus","getTranslatedCategory","FINANCIAL","CUSTOMER","LEARNING","PROCESS","renderGoalCards","goals","spacing","xs","md","lg","elevation","height","display","flexDirection","position","top","right","size","onClick","mr","fontSize","variant","gutterBottom","color","mb","minHeight","label","alignItems","component","width","fontWeight","mt","control","disabled","toLocaleDateString","justifyContent","icon","projectIds","total","reduce","sum","newTotal","startIcon","borderBottom","borderColor","onChange","open","onClose","maxWidth","fullWidth","required","multiline","rows","sm","select","values","InputLabelProps","shrink","margin","labelId","multiple","input","renderValue","selected","flexWrap","gap","MenuProps","PaperProps","style","maxHeight","some","primary","valueLabelDisplay","step","marks","min","max","paragraph","projectLink","_"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/GoalsPage.tsx"],"sourcesContent":["import React, { useState, useEffect, ReactNode, ChangeEvent, MouseEvent } from 'react';\nimport {\n  Typography,\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  IconButton,\n  Box,\n  Chip,\n  LinearProgress,\n  Slider,\n  Tabs,\n  Tab,\n  FormControlLabel,\n  Switch,\n  Select,\n  FormControl,\n  InputLabel,\n  ListItemText,\n  Checkbox,\n  OutlinedInput,\n  SelectChangeEvent\n} from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, Link as LinkIcon } from '@mui/icons-material';\nimport { GridContainer, GridItem } from '../components/common/MuiGridWrapper';\nimport { useTranslation } from 'react-i18next';\nimport api from '../services/api';\n\n// Enums used in this component\nenum GoalType {\n  STRATEGIC = 'STRATEGIC',\n  ANNUAL = 'ANNUAL',\n  QUARTERLY = 'QUARTERLY',\n  MONTHLY = 'MONTHLY'\n}\n\nenum GoalCategory {\n  PERFORMANCE = 'PERFORMANCE',\n  FINANCIAL = 'FINANCIAL',\n  CUSTOMER = 'CUSTOMER',\n  LEARNING = 'LEARNING',\n  PROCESS = 'PROCESS'\n}\n\nenum GoalStatus {\n  NOT_STARTED = 'NOT_STARTED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n  ON_HOLD = 'ON_HOLD'\n}\n\n// Local interfaces\ninterface GoalInterface {\n  id: string;\n  title: string;\n  description: string;\n  type: GoalType;\n  category: GoalCategory;\n  status: GoalStatus;\n  progress: number;\n  startDate: string;\n  endDate: string;\n  assignedTo: string;\n  linkedProjects: ProjectWeight[];\n  isProgressAutoCalculated: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface ProjectWeight {\n  projectId: string;\n  weight: number; // Weight as a percentage (0-100)\n}\n\ninterface Project {\n  id: string;\n  name: string;\n  status: string;\n  progress: number;\n}\n\n// Tab panel component\ninterface TabPanelProps {\n  children?: ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`goals-tabpanel-${index}`}\n      aria-labelledby={`goals-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ pt: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `goals-tab-${index}`,\n    'aria-controls': `goals-tabpanel-${index}`,\n  };\n}\n\nconst GoalsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [tabValue, setTabValue] = useState(0);\n  const [strategicGoals, setStrategicGoals] = useState<GoalInterface[]>([]);\n  const [annualGoals, setAnnualGoals] = useState<GoalInterface[]>([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentGoal, setCurrentGoal] = useState<GoalInterface | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [projectWeights, setProjectWeights] = useState<{ [key: string]: number }>({});\n\n  // Fetch projects when component mounts\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(true);\n      try {\n        const response = await api.projects.getAllProjects('');\n        if (response.success) {\n          setProjects(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  // Calculate a goal's progress based on the progress of its linked projects\n  const calculateGoalProgressFromProjects = (linkedProjectWeights: ProjectWeight[]): number => {\n    if (linkedProjectWeights.length === 0) return 0;\n    \n    let weightedProgress = 0;\n    let totalWeight = 0;\n    \n    linkedProjectWeights.forEach(projectWeight => {\n      const project = projects.find(p => p.id === projectWeight.projectId);\n      if (project) {\n        weightedProgress += (project.progress * projectWeight.weight);\n        totalWeight += projectWeight.weight;\n      }\n    });\n    \n    // Return weighted average, or 0 if no valid projects were found\n    return totalWeight > 0 ? Math.round(weightedProgress / totalWeight) : 0;\n  };\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleOpenDialog = (goal: GoalInterface | null = null, editing = false) => {\n    setIsEditing(editing);\n    \n    if (goal) {\n      setCurrentGoal(goal);\n      \n      // Initialize project weights from existing linked projects\n      const weights: { [key: string]: number } = {};\n      goal.linkedProjects.forEach(link => {\n        weights[link.projectId] = link.weight;\n      });\n      setProjectWeights(weights);\n    } else {\n      // Create a new goal with default values\n      setCurrentGoal({\n        id: Date.now().toString(),\n        title: '',\n        description: '',\n        type: tabValue === 0 ? GoalType.STRATEGIC : GoalType.ANNUAL,\n        category: GoalCategory.PERFORMANCE,\n        status: GoalStatus.NOT_STARTED,\n        progress: 0,\n        startDate: new Date().toISOString().split('T')[0],\n        endDate: new Date(new Date().setFullYear(new Date().getFullYear() + 1)).toISOString().split('T')[0],\n        assignedTo: '',\n        linkedProjects: [],\n        isProgressAutoCalculated: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      });\n      setProjectWeights({});\n    }\n    \n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setCurrentGoal(null);\n    setIsEditing(false);\n    setProjectWeights({});\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setCurrentGoal(prevGoal => prevGoal ? { ...prevGoal, [name]: value } : null);\n  };\n\n  const handleSelectChange = (event: SelectChangeEvent<string>) => {\n    const { name, value } = event.target;\n    setCurrentGoal(prevGoal => {\n      if (!prevGoal) return prevGoal;\n      return { ...prevGoal, [name]: value };\n    });\n  };\n\n  const handleProgressChange = (event: Event, newValue: number | number[]) => {\n    setCurrentGoal(prevGoal => {\n      if (!prevGoal) return prevGoal;\n      return { ...prevGoal, progress: newValue as number };\n    });\n  };\n\n  const handleLinkedProjectsChange = (event: SelectChangeEvent<string[]>) => {\n    if (!currentGoal) return;\n    \n    const selectedProjectIds = event.target.value as string[];\n    \n    // Initialize weights for newly selected projects\n    const updatedWeights = { ...projectWeights };\n    \n    selectedProjectIds.forEach(projectId => {\n      // If this is a newly selected project, initialize its weight to a default value\n      if (!updatedWeights[projectId]) {\n        updatedWeights[projectId] = 100 / selectedProjectIds.length; // Default to equal weights\n      }\n    });\n    \n    // Remove weights for projects that are no longer selected\n    Object.keys(updatedWeights).forEach(projectId => {\n      if (!selectedProjectIds.includes(projectId)) {\n        delete updatedWeights[projectId];\n      }\n    });\n    \n    // Normalize weights to ensure they sum to 100%\n    normalizeWeights(updatedWeights);\n    setProjectWeights(updatedWeights);\n    \n    // Update the linked projects with new weights\n    const updatedLinkedProjects = selectedProjectIds.map(projectId => ({\n      projectId,\n      weight: updatedWeights[projectId]\n    }));\n    \n    setCurrentGoal({\n      ...currentGoal,\n      linkedProjects: updatedLinkedProjects\n    });\n  };\n\n  const handleAutoCalculateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const isAutoCalculated = event.target.checked;\n    \n    setCurrentGoal(prevGoal => {\n      if (!prevGoal) return null;\n      \n      const updatedGoal = { ...prevGoal, isProgressAutoCalculated: isAutoCalculated };\n      \n      // If enabling auto-calculation, update the progress based on linked projects\n      if (isAutoCalculated) {\n        updatedGoal.progress = calculateGoalProgressFromProjects(prevGoal.linkedProjects.map(p => p));\n      }\n      \n      return updatedGoal;\n    });\n  };\n\n  const handleWeightChange = (projectId: string, newWeight: number) => {\n    if (!currentGoal) return;\n    \n    const updatedWeights = { ...projectWeights };\n    updatedWeights[projectId] = newWeight;\n    \n    // Ensure weights sum to 100%\n    normalizeWeights(updatedWeights);\n    setProjectWeights(updatedWeights);\n    \n    // Update linked projects with new weights\n    const updatedLinkedProjects = currentGoal.linkedProjects.map(project => \n      project.projectId === projectId \n        ? { ...project, weight: newWeight }\n        : { ...project, weight: updatedWeights[project.projectId] }\n    );\n    \n    setCurrentGoal({\n      ...currentGoal,\n      linkedProjects: updatedLinkedProjects\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!currentGoal) return;\n    \n    // Ensure project weights are properly set before saving\n    const finalLinkedProjects = currentGoal.linkedProjects.map(project => ({\n      projectId: project.projectId,\n      weight: projectWeights[project.projectId] || 0\n    }));\n    \n    const finalGoal = {\n      ...currentGoal,\n      linkedProjects: finalLinkedProjects,\n      updatedAt: new Date().toISOString()\n    };\n    \n    // Save the goal\n    if (isEditing) {\n      // Update existing goal\n      if (currentGoal.type === GoalType.STRATEGIC) {\n        setStrategicGoals(prevGoals =>\n          prevGoals.map(goal => goal.id === currentGoal.id ? finalGoal : goal)\n        );\n      } else {\n        setAnnualGoals(prevGoals =>\n          prevGoals.map(goal => goal.id === currentGoal.id ? finalGoal : goal)\n        );\n      }\n    } else {\n      // Add new goal\n      if (finalGoal.type === GoalType.STRATEGIC) {\n        setStrategicGoals(prevGoals => [...prevGoals, finalGoal]);\n      } else {\n        setAnnualGoals(prevGoals => [...prevGoals, finalGoal]);\n      }\n    }\n    \n    setOpenDialog(false);\n    setCurrentGoal(null);\n    setProjectWeights({});\n  };\n\n  const handleDeleteGoal = (id: string) => {\n    if (tabValue === 0) {\n      setStrategicGoals(strategicGoals.filter(goal => goal.id !== id));\n    } else {\n      setAnnualGoals(annualGoals.filter(goal => goal.id !== id));\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case GoalStatus.NOT_STARTED:\n        return 'default';\n      case GoalStatus.IN_PROGRESS:\n        return 'primary';\n      case GoalStatus.COMPLETED:\n        return 'success';\n      case GoalStatus.ON_HOLD:\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const getTranslatedStatus = (status: string): string => {\n    switch (status) {\n      case GoalStatus.NOT_STARTED: return t('goals.notStarted');\n      case GoalStatus.IN_PROGRESS: return t('status.inProgress');\n      case GoalStatus.COMPLETED: return t('status.completed');\n      case GoalStatus.ON_HOLD: return t('status.onHold');\n      default: return status;\n    }\n  };\n\n  const getTranslatedCategory = (category: string): string => {\n    switch (category) {\n      case GoalCategory.PERFORMANCE: return t('goals.performance');\n      case GoalCategory.FINANCIAL: return t('goals.financial');\n      case GoalCategory.CUSTOMER: return t('goals.customer');\n      case GoalCategory.LEARNING: return t('goals.learning');\n      case GoalCategory.PROCESS: return t('goals.process');\n      default: return category;\n    }\n  };\n\n  const renderGoalCards = (goals: GoalInterface[]) => (\n    <GridContainer spacing={3}>\n      {goals.map(goal => (\n        <GridItem key={goal.id} xs={12} md={6} lg={4}>\n          <Paper \n            elevation={2} \n            sx={{ \n              p: 2, \n              height: '100%', \n              display: 'flex', \n              flexDirection: 'column',\n              position: 'relative'\n            }}\n          >\n            <Box sx={{ \n              position: 'absolute', \n              top: 10, \n              right: 10,\n              display: 'flex'\n            }}>\n              <IconButton \n                size=\"small\" \n                onClick={() => handleOpenDialog(goal, true)}\n                sx={{ mr: 1 }}\n              >\n                <EditIcon fontSize=\"small\" />\n              </IconButton>\n              <IconButton \n                size=\"small\" \n                onClick={() => handleDeleteGoal(goal.id)}\n              >\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Box>\n            \n            <Typography variant=\"h6\" gutterBottom>\n              {goal.title}\n            </Typography>\n\n            <Typography \n              variant=\"body2\" \n              color=\"text.secondary\" \n              sx={{ mb: 2, minHeight: '40px' }}\n            >\n              {goal.description}\n            </Typography>\n            \n            <Box sx={{ mb: 2 }}>\n              <Chip \n                label={getTranslatedStatus(goal.status)} \n                size=\"small\" \n                sx={{ mr: 1, mb: 1 }}\n                color={getStatusColor(goal.status)}\n              />\n              <Chip \n                label={getTranslatedCategory(goal.category)} \n                size=\"small\"\n                sx={{ mb: 1 }}\n                variant=\"outlined\"\n              />\n            </Box>\n            \n            <Box sx={{ mb: 1 }}>\n              <Typography variant=\"body2\" display=\"flex\" alignItems=\"center\">\n                <Box component=\"span\" sx={{ width: '50%', fontWeight: 'bold', mr: 1 }}>\n                  {t('goals.progress')}:\n                </Box>\n                <Box component=\"span\" sx={{ width: '50%' }}>\n                  {goal.progress}%\n                </Box>\n              </Typography>\n              <LinearProgress \n                variant=\"determinate\" \n                value={goal.progress} \n                sx={{ mt: 1, mb: 1 }}\n              />\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                <FormControlLabel\n                  control={<Checkbox checked={goal.isProgressAutoCalculated} size=\"small\" disabled />}\n                  label={t('goals.autoCalculated')}\n                  sx={{ '& .MuiFormControlLabel-label': { fontSize: '0.75rem' } }}\n                />\n              </Typography>\n            </Box>\n            \n            <Box sx={{ mb: 1 }}>\n              <Typography variant=\"body2\" sx={{ fontWeight: 'bold' }}>\n                {t('timeline')}:\n              </Typography>\n              <Typography variant=\"body2\">\n                {new Date(goal.startDate).toLocaleDateString()} - {new Date(goal.endDate).toLocaleDateString()}\n              </Typography>\n            </Box>\n            \n            <Box sx={{ mt: 'auto', pt: 1 }}>\n              <Typography variant=\"body2\">\n                {t('goals.assignedTo')}: {goal.assignedTo}\n              </Typography>\n            </Box>\n            \n            {goal.linkedProjects.length > 0 && (\n              <Box sx={{ mt: 2 }}>\n                <Typography variant=\"body2\" sx={{ fontWeight: 'bold', mb: 1 }}>\n                  {t('goals.linkedProjects')}:\n                </Typography>\n                {goal.linkedProjects.map((projectWeight) => {\n                  const project = projects.find(p => p.id === projectWeight.projectId);\n                  return (\n                    <Box key={projectWeight.projectId} sx={{ \n                      display: 'flex', \n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      mb: 0.5 \n                    }}>\n                      <Chip\n                        icon={<LinkIcon fontSize=\"small\" />}\n                        label={project ? project.name : projectWeight.projectId}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        sx={{ mr: 1 }}\n                      />\n                      <Typography variant=\"caption\" sx={{ fontWeight: 'medium' }}>\n                        {projectWeight.weight}%\n                      </Typography>\n                    </Box>\n                  );\n                })}\n              </Box>\n            )}\n          </Paper>\n        </GridItem>\n      ))}\n    </GridContainer>\n  );\n\n  // Function to normalize weights to sum to 100%\n  const normalizeWeights = (weights: { [key: string]: number }) => {\n    const projectIds = Object.keys(weights);\n    if (projectIds.length === 0) return;\n    \n    // Calculate the total of all weights\n    const total = projectIds.reduce((sum, id) => sum + weights[id], 0);\n    \n    // If the total is not 100, normalize\n    if (total !== 100 && total !== 0) {\n      projectIds.forEach(id => {\n        weights[id] = Math.round((weights[id] / total) * 100);\n      });\n      \n      // Handle any rounding errors to ensure the sum is exactly 100\n      const newTotal = projectIds.reduce((sum, id) => sum + weights[id], 0);\n      if (newTotal !== 100) {\n        weights[projectIds[0]] += (100 - newTotal);\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3, alignItems: 'center' }}>\n        <Typography variant=\"h4\">{t('navigation.goals')}</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n        >\n          {t('goals.add')}\n        </Button>\n      </Box>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"goal types\">\n          <Tab label={t('goals.strategic')} {...a11yProps(0)} />\n          <Tab label={t('goals.annual')} {...a11yProps(1)} />\n        </Tabs>\n      </Box>\n      \n      <TabPanel value={tabValue} index={0}>\n        {renderGoalCards(strategicGoals)}\n      </TabPanel>\n      \n      <TabPanel value={tabValue} index={1}>\n        {renderGoalCards(annualGoals)}\n      </TabPanel>\n\n      {/* Goal Edit/Create Dialog */}\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {isEditing \n            ? t('goals.edit')\n            : `${t('goals.addNew')} ${tabValue === 0 ? t('goals.strategic') : t('goals.annual')} ${t('goals.goal')}`}\n        </DialogTitle>\n        <DialogContent>\n          <GridContainer spacing={2} sx={{ mt: 1 }}>\n            <GridItem xs={12}>\n              <TextField\n                label={t('goals.title')}\n                name=\"title\"\n                value={currentGoal?.title || ''}\n                onChange={handleChange}\n                fullWidth\n                required\n              />\n            </GridItem>\n            \n            <GridItem xs={12}>\n              <TextField\n                label={t('common.description')}\n                name=\"description\"\n                value={currentGoal?.description || ''}\n                onChange={handleChange}\n                fullWidth\n                multiline\n                rows={3}\n              />\n            </GridItem>\n            \n            <GridItem xs={12} sm={6}>\n              <TextField\n                select\n                label={t('goals.category')}\n                name=\"category\"\n                value={currentGoal?.category || GoalCategory.PERFORMANCE}\n                onChange={handleSelectChange as any}\n                fullWidth\n              >\n                {Object.values(GoalCategory).map((category) => (\n                  <MenuItem key={category} value={category}>\n                    {getTranslatedCategory(category as string)}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </GridItem>\n            \n            <GridItem xs={12} sm={6}>\n              <TextField\n                select\n                label={t('status.status')}\n                name=\"status\"\n                value={currentGoal?.status || GoalStatus.NOT_STARTED}\n                onChange={handleSelectChange as any}\n                fullWidth\n              >\n                {Object.values(GoalStatus).map((status) => (\n                  <MenuItem key={status} value={status}>\n                    {getTranslatedStatus(status as string)}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </GridItem>\n            \n            <GridItem xs={12} sm={6}>\n              <TextField\n                label={t('common.startDate')}\n                name=\"startDate\"\n                type=\"date\"\n                value={currentGoal?.startDate || ''}\n                onChange={handleChange}\n                fullWidth\n                InputLabelProps={{ shrink: true }}\n              />\n            </GridItem>\n            \n            <GridItem xs={12} sm={6}>\n              <TextField\n                label={t('common.endDate')}\n                name=\"endDate\"\n                type=\"date\"\n                value={currentGoal?.endDate || ''}\n                onChange={handleChange}\n                fullWidth\n                InputLabelProps={{ shrink: true }}\n              />\n            </GridItem>\n            \n            <GridItem xs={12}>\n              <TextField\n                label={t('goals.assignedTo')}\n                name=\"assignedTo\"\n                value={currentGoal?.assignedTo || ''}\n                onChange={handleChange}\n                fullWidth\n              />\n            </GridItem>\n            \n            <GridItem xs={12}>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"linked-projects-label\">{t('goals.linkedProjects')}</InputLabel>\n                <Select\n                  labelId=\"linked-projects-label\"\n                  multiple\n                  value={currentGoal?.linkedProjects.map(p => p.projectId) || []}\n                  onChange={handleLinkedProjectsChange}\n                  input={<OutlinedInput label={t('goals.linkedProjects')} />}\n                  renderValue={(selected) => (\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {selected.map((value) => {\n                        const project = projects.find(p => p.id === value);\n                        return (\n                          <Chip \n                            key={value} \n                            label={project ? project.name : value} \n                            size=\"small\" \n                          />\n                        );\n                      })}\n                    </Box>\n                  )}\n                  MenuProps={{\n                    PaperProps: {\n                      style: {\n                        maxHeight: 224,\n                        width: 250,\n                      },\n                    },\n                  }}\n                >\n                  {projects.map((project) => (\n                    <MenuItem key={project.id} value={project.id}>\n                      <Checkbox checked={currentGoal?.linkedProjects.some(p => p.projectId === project.id) || false} />\n                      <ListItemText primary={project.name} />\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </GridItem>\n            \n            <GridItem xs={12}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={currentGoal?.isProgressAutoCalculated || false}\n                    onChange={handleAutoCalculateChange}\n                    name=\"isProgressAutoCalculated\"\n                  />\n                }\n                label={t('goals.autoCalculateProgress')}\n              />\n              <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n                {t('goals.autoCalculateDescription')}\n              </Typography>\n            </GridItem>\n            \n            {!currentGoal?.isProgressAutoCalculated && (\n              <GridItem xs={12}>\n                <Typography id=\"progress-slider\" gutterBottom>\n                  {t('project.progress')}: {currentGoal?.progress || 0}%\n                </Typography>\n                <Slider\n                  value={currentGoal?.progress || 0}\n                  onChange={handleProgressChange}\n                  aria-labelledby=\"progress-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={5}\n                  marks\n                  min={0}\n                  max={100}\n                />\n              </GridItem>\n            )}\n            \n            {/* Project Weights Section */}\n            {currentGoal?.linkedProjects && currentGoal.linkedProjects.length > 0 && (\n              <Box sx={{ mt: 2 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  {t('Project Weights')}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\" paragraph>\n                  {t('Adjust the weight of each project\\'s contribution to this goal. Weights will automatically balance to 100%.')}\n                </Typography>\n                \n                {currentGoal?.linkedProjects && currentGoal.linkedProjects.map((projectLink) => {\n                  const project = projects.find(p => p.id === projectLink.projectId);\n                  return (\n                    <Box key={projectLink.projectId} sx={{ mb: 2 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography variant=\"body2\">\n                          {project ? project.name : projectLink.projectId}\n                        </Typography>\n                        <Typography variant=\"body2\" fontWeight=\"medium\">\n                          {projectWeights[projectLink.projectId] || projectLink.weight}%\n                        </Typography>\n                      </Box>\n                      <Slider\n                        value={projectWeights[projectLink.projectId] || projectLink.weight}\n                        onChange={(_, newValue) => handleWeightChange(projectLink.projectId, newValue as number)}\n                        aria-labelledby=\"project-weight-slider\"\n                        valueLabelDisplay=\"auto\"\n                        step={5}\n                        marks\n                        min={5}\n                        max={100}\n                      />\n                    </Box>\n                  );\n                })}\n              </Box>\n            )}\n          </GridContainer>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>{t('common.cancel')}</Button>\n          <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n            {isEditing ? t('common.update') : t('common.create')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default GoalsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}