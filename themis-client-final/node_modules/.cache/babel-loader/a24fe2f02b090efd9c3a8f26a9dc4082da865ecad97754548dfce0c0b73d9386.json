{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/TasksPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Chip, TextField, InputAdornment, Tooltip, Stack } from '@mui/material';\nimport { Search as SearchIcon, Assignment as AssignmentIcon } from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { ProjectStatus, ProjectPriority, UserRole, ProjectTemplateType } from '../types';\nimport { useTranslation } from 'react-i18next';\nimport TaskDetailDialog from '../components/Task/TaskDetailDialog';\n\n// Mock data for tasks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockTasks = [{\n  id: '1',\n  title: 'Requirements Gathering',\n  projectName: 'Digital Transformation',\n  description: 'Gather and document system requirements from stakeholders.',\n  status: 'IN_PROGRESS',\n  priority: 'HIGH',\n  startDate: '2023-01-15',\n  dueDate: '2023-01-31',\n  assignee: 'admin'\n}, {\n  id: '2',\n  title: 'Database Schema Design',\n  projectName: 'Digital Transformation',\n  description: 'Design the database schema for the new system.',\n  status: 'TODO',\n  priority: 'MEDIUM',\n  startDate: '2023-02-01',\n  dueDate: '2023-02-15',\n  assignee: 'admin'\n}, {\n  id: '3',\n  title: 'Frontend Prototype',\n  projectName: 'Digital Transformation',\n  description: 'Create a prototype of the user interface.',\n  status: 'TODO',\n  priority: 'MEDIUM',\n  startDate: '2023-02-15',\n  dueDate: '2023-03-01',\n  assignee: 'admin'\n}, {\n  id: '4',\n  title: 'API Documentation',\n  projectName: 'Cloud Migration',\n  description: 'Document all API endpoints and their usage.',\n  status: 'DONE',\n  priority: 'LOW',\n  startDate: '2023-01-10',\n  dueDate: '2023-01-20',\n  assignee: 'admin'\n}, {\n  id: '5',\n  title: 'Security Audit',\n  projectName: 'Cloud Migration',\n  description: 'Perform a security audit of the system.',\n  status: 'REVIEW',\n  priority: 'HIGH',\n  startDate: '2023-01-25',\n  dueDate: '2023-02-10',\n  assignee: 'admin'\n}];\n\n// Helper functions for determining the status and priority display\nconst getStatusColor = (status, dueDate) => {\n  // Check if the task is overdue (due date is before current date)\n  if (dueDate && new Date(dueDate) < new Date()) {\n    return 'error'; // Red color for overdue tasks\n  }\n  switch (status) {\n    case 'TODO':\n      return 'default';\n    case 'IN_PROGRESS':\n      return 'primary';\n    case 'REVIEW':\n      return 'warning';\n    case 'DONE':\n      return 'success';\n    default:\n      return 'default';\n  }\n};\nconst getStatusLabel = status => {\n  switch (status) {\n    case 'TODO':\n      return 'To Do';\n    case 'IN_PROGRESS':\n      return 'In Progress';\n    case 'REVIEW':\n      return 'In Review';\n    case 'DONE':\n      return 'Completed';\n    default:\n      return status;\n  }\n};\nconst getPriorityColor = priority => {\n  switch (priority) {\n    case 'LOW':\n      return 'success';\n    case 'MEDIUM':\n      return 'warning';\n    case 'HIGH':\n      return 'error';\n    default:\n      return 'default';\n  }\n};\nconst TasksPage = () => {\n  _s();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [projects, setProjects] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isTaskDetailOpen, setIsTaskDetailOpen] = useState(false);\n  const {\n    user,\n    token\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n\n  // Fetch tasks\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        setLoading(true);\n\n        // In a real application, you would fetch tasks from your API\n        // For now, we'll use mock data with a delay to simulate loading\n        setTimeout(() => {\n          const mockDepartment = {\n            id: '1',\n            name: 'IT Department',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          const mockUser = {\n            id: '1',\n            username: 'manager',\n            firstName: 'Project',\n            lastName: 'Manager',\n            email: 'manager@example.com',\n            role: UserRole.PROJECT_MANAGER,\n            department: mockDepartment,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          const mockProject = {\n            id: '1',\n            name: 'Digital Transformation',\n            description: 'Company-wide digital transformation initiative',\n            status: ProjectStatus.IN_PROGRESS,\n            priority: ProjectPriority.HIGH,\n            startDate: '2023-01-01',\n            endDate: '2023-12-31',\n            projectManager: mockUser,\n            department: mockDepartment,\n            progress: 50,\n            budget: 500000,\n            actualCost: 250000,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            templateType: ProjectTemplateType.DEFAULT\n          };\n          const transformedTasks = mockTasks.map(task => ({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            projectId: '1',\n            status: task.status,\n            priority: task.priority,\n            startDate: task.startDate,\n            dueDate: task.dueDate,\n            assignee: {\n              id: '1',\n              username: task.assignee,\n              firstName: 'Admin',\n              lastName: 'User',\n              email: 'admin@example.com',\n              role: UserRole.ADMIN,\n              department: mockDepartment,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            },\n            project: mockProject,\n            createdBy: {\n              id: '1',\n              username: 'admin',\n              firstName: 'Admin',\n              lastName: 'User',\n              email: 'admin@example.com',\n              role: UserRole.ADMIN,\n              department: mockDepartment,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            },\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            isMilestone: false\n          }));\n          setTasks(transformedTasks);\n\n          // Mock projects\n          setProjects([{\n            id: '1',\n            name: 'Digital Transformation'\n          }, {\n            id: '2',\n            name: 'Cloud Migration'\n          }]);\n          setLoading(false);\n        }, 500);\n      } catch (err) {\n        console.error('Error fetching tasks:', err);\n        setError('Failed to load tasks. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n    setPage(0);\n  };\n  const handleTaskClick = taskId => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setIsTaskDetailOpen(true);\n    }\n  };\n  const handleCloseTaskDetail = () => {\n    setIsTaskDetailOpen(false);\n    setSelectedTask(null);\n  };\n  const handleEditTask = task => {\n    // This would be implemented to open a task edit form\n    console.log('Edit task:', task);\n    setIsTaskDetailOpen(false);\n  };\n  const handleAddComment = async (taskId, comment) => {\n    // In a real app, this would call an API to add the comment\n    console.log('Add comment to task', taskId, comment);\n    return Promise.resolve();\n  };\n\n  // Filter tasks based on search query and current user\n  const filteredTasks = tasks.filter(task => {\n    var _task$assignee;\n    // Only show tasks assigned to the current user (for this demo, show all if user is admin)\n    const isAssignedToUser = (user === null || user === void 0 ? void 0 : user.username) === ((_task$assignee = task.assignee) === null || _task$assignee === void 0 ? void 0 : _task$assignee.username);\n\n    // Check if the search query matches task title, description, or project\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase()) || task.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return (isAssignedToUser || (user === null || user === void 0 ? void 0 : user.role) === UserRole.ADMIN) && matchesSearch;\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: t('assignments.myTasks')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"View and manage tasks assigned to you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 3,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Tasks\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: searchQuery,\n          onChange: handleSearchChange,\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('status.title')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: t('priority.title')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: loading ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    py: 3\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"Loading tasks...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    py: 3\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"error\",\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this) : filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 5,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    py: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(AssignmentIcon, {\n                    sx: {\n                      fontSize: 40,\n                      color: 'text.secondary',\n                      mb: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"No tasks found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: searchQuery ? 'Try adjusting your search terms' : 'You have no tasks assigned to you'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this) : filteredTasks.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(task => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: () => handleTaskClick(task.id),\n              sx: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    fontWeight: \"medium\",\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: task.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: task.project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: task.dueDate && new Date(task.dueDate) < new Date() ? `${getStatusLabel(task.status)} (Overdue)` : getStatusLabel(task.status),\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: getStatusLabel(task.status),\n                    color: getStatusColor(task.status, task.dueDate),\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: task.priority,\n                  color: getPriorityColor(task.priority),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(task.dueDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: filteredTasks.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskDetailDialog, {\n      open: isTaskDetailOpen,\n      task: selectedTask,\n      onClose: handleCloseTaskDetail,\n      onEdit: handleEditTask,\n      onAddComment: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"F+fgEIO+9UZ8OUHfYahJGhuFtX8=\", false, function () {\n  return [useAuth, useTranslation];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Chip","TextField","InputAdornment","Tooltip","Stack","Search","SearchIcon","Assignment","AssignmentIcon","useAuth","ProjectStatus","ProjectPriority","UserRole","ProjectTemplateType","useTranslation","TaskDetailDialog","jsxDEV","_jsxDEV","mockTasks","id","title","projectName","description","status","priority","startDate","dueDate","assignee","getStatusColor","Date","getStatusLabel","getPriorityColor","TasksPage","_s","page","setPage","rowsPerPage","setRowsPerPage","searchQuery","setSearchQuery","tasks","setTasks","loading","setLoading","error","setError","projects","setProjects","selectedTask","setSelectedTask","isTaskDetailOpen","setIsTaskDetailOpen","user","token","t","fetchTasks","setTimeout","mockDepartment","name","createdAt","toISOString","updatedAt","mockUser","username","firstName","lastName","email","role","PROJECT_MANAGER","department","mockProject","IN_PROGRESS","HIGH","endDate","projectManager","progress","budget","actualCost","templateType","DEFAULT","transformedTasks","map","task","projectId","ADMIN","project","createdBy","isMilestone","err","console","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSearchChange","handleTaskClick","taskId","find","handleCloseTaskDetail","handleEditTask","log","handleAddComment","comment","Promise","resolve","filteredTasks","filter","_task$assignee","isAssignedToUser","matchesSearch","toLowerCase","includes","children","sx","mb","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","p","direction","spacing","label","fullWidth","onChange","InputProps","startAdornment","position","colSpan","align","py","length","fontSize","slice","hover","onClick","cursor","fontWeight","size","toLocaleDateString","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onEdit","onAddComment","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/TasksPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Chip,\n  TextField,\n  InputAdornment,\n  Tooltip,\n  Stack\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  Assignment as AssignmentIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { Task, TaskStatus, TaskPriority, User, Project, ProjectStatus, ProjectPriority, Department, UserRole, ProjectTemplateType } from '../types';\nimport { TaskService } from '../services/TaskService';\nimport { useTranslation } from 'react-i18next';\nimport TaskDetailDialog from '../components/Task/TaskDetailDialog';\n\n// Mock data for tasks\nconst mockTasks = [\n  { \n    id: '1', \n    title: 'Requirements Gathering', \n    projectName: 'Digital Transformation',\n    description: 'Gather and document system requirements from stakeholders.',\n    status: 'IN_PROGRESS', \n    priority: 'HIGH',\n    startDate: '2023-01-15', \n    dueDate: '2023-01-31',\n    assignee: 'admin'\n  },\n  { \n    id: '2', \n    title: 'Database Schema Design', \n    projectName: 'Digital Transformation',\n    description: 'Design the database schema for the new system.',\n    status: 'TODO', \n    priority: 'MEDIUM',\n    startDate: '2023-02-01', \n    dueDate: '2023-02-15',\n    assignee: 'admin'\n  },\n  { \n    id: '3', \n    title: 'Frontend Prototype', \n    projectName: 'Digital Transformation',\n    description: 'Create a prototype of the user interface.',\n    status: 'TODO', \n    priority: 'MEDIUM',\n    startDate: '2023-02-15', \n    dueDate: '2023-03-01',\n    assignee: 'admin'\n  },\n  { \n    id: '4', \n    title: 'API Documentation', \n    projectName: 'Cloud Migration',\n    description: 'Document all API endpoints and their usage.',\n    status: 'DONE', \n    priority: 'LOW',\n    startDate: '2023-01-10', \n    dueDate: '2023-01-20',\n    assignee: 'admin'\n  },\n  { \n    id: '5', \n    title: 'Security Audit', \n    projectName: 'Cloud Migration',\n    description: 'Perform a security audit of the system.',\n    status: 'REVIEW', \n    priority: 'HIGH',\n    startDate: '2023-01-25', \n    dueDate: '2023-02-10',\n    assignee: 'admin'\n  }\n];\n\n// Helper functions for determining the status and priority display\nconst getStatusColor = (status: string, dueDate?: string) => {\n  // Check if the task is overdue (due date is before current date)\n  if (dueDate && new Date(dueDate) < new Date()) {\n    return 'error'; // Red color for overdue tasks\n  }\n  \n  switch(status) {\n    case 'TODO': return 'default';\n    case 'IN_PROGRESS': return 'primary';\n    case 'REVIEW': return 'warning';\n    case 'DONE': return 'success';\n    default: return 'default';\n  }\n};\n\nconst getStatusLabel = (status: string) => {\n  switch(status) {\n    case 'TODO': return 'To Do';\n    case 'IN_PROGRESS': return 'In Progress';\n    case 'REVIEW': return 'In Review';\n    case 'DONE': return 'Completed';\n    default: return status;\n  }\n};\n\nconst getPriorityColor = (priority: string) => {\n  switch(priority) {\n    case 'LOW': return 'success';\n    case 'MEDIUM': return 'warning';\n    case 'HIGH': return 'error';\n    default: return 'default';\n  }\n};\n\nconst TasksPage: React.FC = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [projects, setProjects] = useState<{id: string, name: string}[]>([]);\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [isTaskDetailOpen, setIsTaskDetailOpen] = useState(false);\n  \n  const { user, token } = useAuth();\n  const { t } = useTranslation();\n  \n  // Fetch tasks\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        setLoading(true);\n        \n        // In a real application, you would fetch tasks from your API\n        // For now, we'll use mock data with a delay to simulate loading\n        setTimeout(() => {\n          const mockDepartment: Department = {\n            id: '1',\n            name: 'IT Department',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          \n          const mockUser: User = {\n            id: '1',\n            username: 'manager',\n            firstName: 'Project',\n            lastName: 'Manager',\n            email: 'manager@example.com',\n            role: UserRole.PROJECT_MANAGER,\n            department: mockDepartment,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          \n          const mockProject: Project = {\n            id: '1',\n            name: 'Digital Transformation',\n            description: 'Company-wide digital transformation initiative',\n            status: ProjectStatus.IN_PROGRESS,\n            priority: ProjectPriority.HIGH,\n            startDate: '2023-01-01',\n            endDate: '2023-12-31',\n            projectManager: mockUser,\n            department: mockDepartment,\n            progress: 50,\n            budget: 500000,\n            actualCost: 250000,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            templateType: ProjectTemplateType.DEFAULT\n          };\n          \n          const transformedTasks: Task[] = mockTasks.map(task => ({\n            id: task.id,\n            title: task.title,\n            description: task.description,\n            projectId: '1',\n            status: task.status as TaskStatus,\n            priority: task.priority as TaskPriority,\n            startDate: task.startDate,\n            dueDate: task.dueDate,\n            assignee: {\n              id: '1',\n              username: task.assignee,\n              firstName: 'Admin',\n              lastName: 'User',\n              email: 'admin@example.com',\n              role: UserRole.ADMIN,\n              department: mockDepartment,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            },\n            project: mockProject,\n            createdBy: {\n              id: '1',\n              username: 'admin',\n              firstName: 'Admin',\n              lastName: 'User',\n              email: 'admin@example.com',\n              role: UserRole.ADMIN,\n              department: mockDepartment,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            },\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            isMilestone: false\n          }));\n          \n          setTasks(transformedTasks);\n          \n          // Mock projects\n          setProjects([\n            { id: '1', name: 'Digital Transformation' },\n            { id: '2', name: 'Cloud Migration' }\n          ]);\n          \n          setLoading(false);\n        }, 500);\n      } catch (err) {\n        console.error('Error fetching tasks:', err);\n        setError('Failed to load tasks. Please try again later.');\n        setLoading(false);\n      }\n    };\n    \n    fetchTasks();\n  }, []);\n  \n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n  \n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    setPage(0);\n  };\n  \n  const handleTaskClick = (taskId: string) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setIsTaskDetailOpen(true);\n    }\n  };\n  \n  const handleCloseTaskDetail = () => {\n    setIsTaskDetailOpen(false);\n    setSelectedTask(null);\n  };\n  \n  const handleEditTask = (task: Task) => {\n    // This would be implemented to open a task edit form\n    console.log('Edit task:', task);\n    setIsTaskDetailOpen(false);\n  };\n  \n  const handleAddComment = async (taskId: string, comment: string) => {\n    // In a real app, this would call an API to add the comment\n    console.log('Add comment to task', taskId, comment);\n    return Promise.resolve();\n  };\n  \n  // Filter tasks based on search query and current user\n  const filteredTasks = tasks.filter((task) => {\n    // Only show tasks assigned to the current user (for this demo, show all if user is admin)\n    const isAssignedToUser = user?.username === task.assignee?.username;\n    \n    // Check if the search query matches task title, description, or project\n    const matchesSearch = \n      task.title.toLowerCase().includes(searchQuery.toLowerCase()) || \n      task.description.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    return (isAssignedToUser || user?.role === UserRole.ADMIN) && matchesSearch;\n  });\n  \n  return (\n    <Box>\n      <Box sx={{ mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          {t('assignments.myTasks')}\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          View and manage tasks assigned to you\n        </Typography>\n      </Box>\n      \n      <Paper sx={{ mb: 3, p: 2 }}>\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\n          <TextField\n            label=\"Search Tasks\"\n            variant=\"outlined\"\n            fullWidth\n            value={searchQuery}\n            onChange={handleSearchChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n        \n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Task</TableCell>\n                <TableCell>Project</TableCell>\n                <TableCell>{t('status.title')}</TableCell>\n                <TableCell>{t('priority.title')}</TableCell>\n                <TableCell>Due Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\">\n                    <Box sx={{ py: 3 }}>\n                      <Typography>Loading tasks...</Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ) : error ? (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\">\n                    <Box sx={{ py: 3 }}>\n                      <Typography color=\"error\">{error}</Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ) : filteredTasks.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\">\n                    <Box sx={{ py: 3 }}>\n                      <AssignmentIcon sx={{ fontSize: 40, color: 'text.secondary', mb: 1 }} />\n                      <Typography variant=\"h6\">No tasks found</Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {searchQuery ? 'Try adjusting your search terms' : 'You have no tasks assigned to you'}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                filteredTasks\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((task) => (\n                    <TableRow \n                      key={task.id} \n                      hover\n                      onClick={() => handleTaskClick(task.id)}\n                      sx={{ cursor: 'pointer' }}\n                    >\n                      <TableCell>\n                        <Box>\n                          <Typography variant=\"body1\" fontWeight=\"medium\">\n                            {task.title}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {task.description}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>{task.project.name}</TableCell>\n                      <TableCell>\n                        <Tooltip \n                          title={\n                            task.dueDate && new Date(task.dueDate) < new Date()\n                              ? `${getStatusLabel(task.status)} (Overdue)`\n                              : getStatusLabel(task.status)\n                          }\n                        >\n                          <Chip \n                            label={getStatusLabel(task.status)} \n                            color={getStatusColor(task.status, task.dueDate) as any}\n                            size=\"small\"\n                          />\n                        </Tooltip>\n                      </TableCell>\n                      <TableCell>\n                        <Chip \n                          label={task.priority} \n                          color={getPriorityColor(task.priority) as any}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell>{new Date(task.dueDate).toLocaleDateString()}</TableCell>\n                    </TableRow>\n                  ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        \n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredTasks.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      \n      {/* Task Detail Dialog */}\n      <TaskDetailDialog\n        open={isTaskDetailOpen}\n        task={selectedTask}\n        onClose={handleCloseTaskDetail}\n        onEdit={handleEditTask}\n        onAddComment={handleAddComment}\n      />\n    </Box>\n  );\n};\n\nexport default TasksPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}