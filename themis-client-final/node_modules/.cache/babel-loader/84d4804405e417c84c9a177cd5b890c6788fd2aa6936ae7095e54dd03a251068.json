{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{useKonamiCode}from'../hooks/useKonamiCode';import{jsx as _jsx}from\"react/jsx-runtime\";const EasterEggContext=/*#__PURE__*/createContext(undefined);export const useEasterEgg=()=>{const context=useContext(EasterEggContext);if(!context){throw new Error('useEasterEgg must be used within an EasterEggProvider');}return context;};export const EasterEggProvider=_ref=>{let{children}=_ref;// Check if easter egg state was saved in localStorage\nconst[easterEggActive,setEasterEggActive]=useState(()=>{const savedState=localStorage.getItem('themis-easter-egg');return savedState==='true';});// Save easter egg state to localStorage when it changes\nuseEffect(()=>{localStorage.setItem('themis-easter-egg',easterEggActive.toString());// Apply/remove easter egg class to body\nif(easterEggActive){document.body.classList.add('easter-egg-mode');}else{document.body.classList.remove('easter-egg-mode');}},[easterEggActive]);const toggleEasterEgg=()=>{setEasterEggActive(prev=>!prev);// Play a sound effect when activated\nif(!easterEggActive)// Create a simple beep sound instead of relying on an audio file\ntry{// Create audio context\nconst AudioContext=window.AudioContext||window.webkitAudioContext;if(AudioContext){const audioCtx=new AudioContext();const oscillator=audioCtx.createOscillator();const gainNode=audioCtx.createGain();// Configure oscillator\noscillator.type='square';oscillator.frequency.setValueAtTime(440,audioCtx.currentTime);// A4 note\noscillator.connect(gainNode);gainNode.connect(audioCtx.destination);// Configure gain (volume)\ngainNode.gain.setValueAtTime(0.2,audioCtx.currentTime);// Start and stop the sound\noscillator.start();setTimeout(()=>{oscillator.frequency.setValueAtTime(880,audioCtx.currentTime);// Up to A5\nsetTimeout(()=>{oscillator.stop();},100);},100);}else{console.log('Web Audio API not supported in this browser');}}catch(err){console.log('Error playing sound:',err);}};// Setup Konami code detector\nuseKonamiCode(toggleEasterEgg);return/*#__PURE__*/_jsx(EasterEggContext.Provider,{value:{easterEggActive,toggleEasterEgg},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useKonamiCode","jsx","_jsx","EasterEggContext","undefined","useEasterEgg","context","Error","EasterEggProvider","_ref","children","easterEggActive","setEasterEggActive","savedState","localStorage","getItem","setItem","toString","document","body","classList","add","remove","toggleEasterEgg","prev","AudioContext","window","webkitAudioContext","audioCtx","oscillator","createOscillator","gainNode","createGain","type","frequency","setValueAtTime","currentTime","connect","destination","gain","start","setTimeout","stop","console","log","err","Provider","value"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/context/EasterEggContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport { useKonamiCode } from '../hooks/useKonamiCode';\n\ninterface EasterEggContextType {\n  easterEggActive: boolean;\n  toggleEasterEgg: () => void;\n}\n\nconst EasterEggContext = createContext<EasterEggContextType | undefined>(undefined);\n\nexport const useEasterEgg = (): EasterEggContextType => {\n  const context = useContext(EasterEggContext);\n  if (!context) {\n    throw new Error('useEasterEgg must be used within an EasterEggProvider');\n  }\n  return context;\n};\n\ninterface EasterEggProviderProps {\n  children: ReactNode;\n}\n\nexport const EasterEggProvider: React.FC<EasterEggProviderProps> = ({ children }) => {\n  // Check if easter egg state was saved in localStorage\n  const [easterEggActive, setEasterEggActive] = useState<boolean>(() => {\n    const savedState = localStorage.getItem('themis-easter-egg');\n    return savedState === 'true';\n  });\n\n  // Save easter egg state to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('themis-easter-egg', easterEggActive.toString());\n    \n    // Apply/remove easter egg class to body\n    if (easterEggActive) {\n      document.body.classList.add('easter-egg-mode');\n    } else {\n      document.body.classList.remove('easter-egg-mode');\n    }\n  }, [easterEggActive]);\n\n  const toggleEasterEgg = () => {\n    setEasterEggActive(prev => !prev);\n    // Play a sound effect when activated\n    if (!easterEggActive)\n      // Create a simple beep sound instead of relying on an audio file\n      try {\n        // Create audio context\n        const AudioContext = window.AudioContext || (window as any).webkitAudioContext;\n        if (AudioContext) {\n          const audioCtx = new AudioContext();\n          const oscillator = audioCtx.createOscillator();\n          const gainNode = audioCtx.createGain();\n\n          // Configure oscillator\n          oscillator.type = 'square';\n          oscillator.frequency.setValueAtTime(440, audioCtx.currentTime); // A4 note\n          oscillator.connect(gainNode);\n          gainNode.connect(audioCtx.destination);\n\n          // Configure gain (volume)\n          gainNode.gain.setValueAtTime(0.2, audioCtx.currentTime);\n          \n          // Start and stop the sound\n          oscillator.start();\n          setTimeout(() => {\n            oscillator.frequency.setValueAtTime(880, audioCtx.currentTime); // Up to A5\n            setTimeout(() => {\n              oscillator.stop();\n            }, 100);\n          }, 100);\n        } else {\n          console.log('Web Audio API not supported in this browser');\n        }\n      } catch (err) {\n        console.log('Error playing sound:', err);\n      }\n  };\n\n  // Setup Konami code detector\n  useKonamiCode(toggleEasterEgg);\n\n  return (\n    <EasterEggContext.Provider value={{ easterEggActive, toggleEasterEgg }}>\n      {children}\n    </EasterEggContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}