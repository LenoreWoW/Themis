{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/AssignmentsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Grid } from '@mui/material';\nimport { Add as AddIcon, CheckCircle as CheckCircleIcon, Schedule as ScheduleIcon, Warning as WarningIcon } from '@mui/icons-material';\nimport { TaskPriority, AssignmentStatus } from '../types';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { useTranslation } from 'react-i18next';\nimport AssignmentCard from '../components/Assignment/AssignmentCard';\nimport AssignmentDetailDialog from '../components/Assignment/AssignmentDetailDialog';\nimport AssignmentEditDialog from '../components/Assignment/AssignmentEditDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignmentsPage = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n  const [assignments, setAssignments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingAssignment, setEditingAssignment] = useState(null);\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState(null);\n  const [isDetailDialogOpen, setIsDetailDialogOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    priority: TaskPriority.MEDIUM,\n    dueDate: '',\n    assignedTo: ''\n  });\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editingAssignmentData, setEditingAssignmentData] = useState(null);\n  const fetchAssignments = async () => {\n    try {\n      const response = await api.assignments.getAllAssignments('');\n      if (response.success && response.data) {\n        setAssignments(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching assignments:', error);\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await api.users.getAllUsers('');\n      if (response.success && response.data) {\n        setUsers(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAssignments();\n    fetchUsers();\n  }, []);\n  const handleOpenDialog = assignment => {\n    if (assignment) {\n      setEditingAssignment(assignment);\n      setFormData({\n        title: assignment.title,\n        description: assignment.description,\n        priority: assignment.priority,\n        dueDate: assignment.dueDate.split('T')[0],\n        assignedTo: assignment.assignedTo.id\n      });\n    } else {\n      setEditingAssignment(null);\n      setFormData({\n        title: '',\n        description: '',\n        priority: TaskPriority.MEDIUM,\n        dueDate: '',\n        assignedTo: ''\n      });\n    }\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingAssignment(null);\n  };\n  const handleSaveAssignment = async () => {\n    try {\n      const selectedUser = users.find(u => u.id === formData.assignedTo);\n      if (!selectedUser) {\n        console.error('Selected user not found');\n        return;\n      }\n      const assignmentData = {\n        ...formData,\n        assignedBy: user || undefined,\n        assignedTo: selectedUser\n      };\n      const response = editingAssignment ? await api.assignments.updateAssignment(editingAssignment.id, assignmentData, '') : await api.assignments.createAssignment(assignmentData, '');\n      if (response.success) {\n        fetchAssignments();\n        handleCloseDialog();\n      }\n    } catch (error) {\n      console.error('Error saving assignment:', error);\n    }\n  };\n  const handleDeleteAssignment = async assignmentId => {\n    try {\n      const response = await api.assignments.deleteAssignment(assignmentId, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error deleting assignment:', error);\n    }\n  };\n  const handleStatusChange = async (assignment, newStatus) => {\n    try {\n      const response = await api.assignments.updateAssignment(assignment.id, {\n        ...assignment,\n        status: newStatus\n      }, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error updating assignment status:', error);\n    }\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this);\n      case AssignmentStatus.IN_PROGRESS:\n        return /*#__PURE__*/_jsxDEV(ScheduleIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 16\n        }, this);\n      case AssignmentStatus.CANCELLED:\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  const getFormattedStatus = status => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return 'Completed';\n      case AssignmentStatus.IN_PROGRESS:\n        return 'In Progress';\n      case AssignmentStatus.CANCELLED:\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n  const handleAssignmentClick = assignmentId => {\n    setSelectedAssignmentId(assignmentId);\n    setIsDetailDialogOpen(true);\n  };\n  const handleCloseDetailDialog = () => {\n    setIsDetailDialogOpen(false);\n    setSelectedAssignmentId(null);\n  };\n  const handleEditFromDetailDialog = assignment => {\n    // The assignment object from the detail dialog might need conversion\n    // Find the original assignment from our assignments array\n    const assignmentToEdit = assignments.find(a => a.id === assignment.id);\n    if (assignmentToEdit) {\n      handleOpenEditDialog(assignmentToEdit);\n    }\n    // Close the detail dialog\n    setIsDetailDialogOpen(false);\n  };\n  const handleAddComment = async (assignmentId, content) => {\n    // In a real app, this would call an API to add a comment\n    console.log('Add comment to assignment', assignmentId, content);\n    return Promise.resolve();\n  };\n  const handleOpenEditDialog = assignment => {\n    setEditingAssignmentData(assignment);\n    setIsEditDialogOpen(true);\n  };\n  const handleCloseEditDialog = () => {\n    setIsEditDialogOpen(false);\n    setEditingAssignmentData(null);\n  };\n  const handleSaveEditedAssignment = editedAssignment => {\n    // Update the assignment in the local state\n    setAssignments(prevAssignments => prevAssignments.map(a => a.id === editedAssignment.id ? editedAssignment : a));\n\n    // Close the dialog\n    handleCloseEditDialog();\n\n    // In a real app, you would also call the API to update the assignment\n    console.log('Saving edited assignment:', editedAssignment);\n  };\n  const handleUpdateProgress = (assignmentId, progress, newStatus) => {\n    // Update the assignment status in local state\n    setAssignments(prevAssignments => prevAssignments.map(a => {\n      if (a.id === assignmentId) {\n        return {\n          ...a,\n          status: newStatus\n        };\n      }\n      return a;\n    }));\n\n    // In a real app, you would also call the API to update the assignment\n    console.log(`Updating assignment ${assignmentId} progress to ${progress}%, status: ${newStatus}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: t('assignments.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 22\n        }, this),\n        onClick: () => handleOpenDialog(),\n        children: \"New Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mt: 1\n      },\n      children: assignments.map(assignment => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(AssignmentCard, {\n          assignment: {\n            id: assignment.id,\n            title: assignment.title,\n            description: assignment.description,\n            status: assignment.status === AssignmentStatus.COMPLETED ? 'COMPLETED' : assignment.status === AssignmentStatus.IN_PROGRESS ? 'IN_PROGRESS' : 'PENDING',\n            dueDate: assignment.dueDate,\n            assignedBy: assignment.assignedBy || {\n              id: '1',\n              firstName: 'Default',\n              lastName: 'Manager'\n            },\n            assignedTo: assignment.assignedTo,\n            createdAt: assignment.createdAt || new Date().toISOString(),\n            updatedAt: assignment.updatedAt || new Date().toISOString()\n          },\n          onClick: () => handleAssignmentClick(assignment.id),\n          onAddComment: handleAddComment,\n          onUpdateProgress: handleUpdateProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, assignment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingAssignment ? 'Edit Assignment' : 'New Assignment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Title\",\n            fullWidth: true,\n            value: formData.title,\n            onChange: e => setFormData({\n              ...formData,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Description\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: t('priority.title'),\n            fullWidth: true,\n            value: formData.priority,\n            onChange: e => setFormData({\n              ...formData,\n              priority: e.target.value\n            }),\n            children: Object.values(TaskPriority).map(priority => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: priority,\n              children: priority\n            }, priority, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            select: true,\n            label: \"Assign To\",\n            fullWidth: true,\n            value: formData.assignedTo,\n            onChange: e => setFormData({\n              ...formData,\n              assignedTo: e.target.value\n            }),\n            children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: user.id,\n              children: [user.firstName, \" \", user.lastName]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Due Date\",\n            type: \"date\",\n            fullWidth: true,\n            value: formData.dueDate,\n            onChange: e => setFormData({\n              ...formData,\n              dueDate: e.target.value\n            }),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveAssignment,\n          variant: \"contained\",\n          color: \"primary\",\n          children: editingAssignment ? 'Save Changes' : 'Create Assignment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignmentDetailDialog, {\n      open: isDetailDialogOpen,\n      onClose: handleCloseDetailDialog,\n      assignmentId: selectedAssignmentId,\n      onEdit: handleEditFromDetailDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignmentEditDialog, {\n      open: isEditDialogOpen,\n      assignment: editingAssignmentData,\n      onClose: handleCloseEditDialog,\n      onSave: handleSaveEditedAssignment,\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentsPage, \"e/UO4Nv3NHO7b0qImHgu9rGKfi8=\", false, function () {\n  return [useTranslation, useAuth];\n});\n_c = AssignmentsPage;\nexport default AssignmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Grid","Add","AddIcon","CheckCircle","CheckCircleIcon","Schedule","ScheduleIcon","Warning","WarningIcon","TaskPriority","AssignmentStatus","useAuth","api","useTranslation","AssignmentCard","AssignmentDetailDialog","AssignmentEditDialog","jsxDEV","_jsxDEV","AssignmentsPage","_s","t","user","assignments","setAssignments","users","setUsers","openDialog","setOpenDialog","editingAssignment","setEditingAssignment","selectedAssignmentId","setSelectedAssignmentId","isDetailDialogOpen","setIsDetailDialogOpen","formData","setFormData","title","description","priority","MEDIUM","dueDate","assignedTo","isEditDialogOpen","setIsEditDialogOpen","editingAssignmentData","setEditingAssignmentData","fetchAssignments","response","getAllAssignments","success","data","error","console","fetchUsers","getAllUsers","handleOpenDialog","assignment","split","id","handleCloseDialog","handleSaveAssignment","selectedUser","find","u","assignmentData","assignedBy","undefined","updateAssignment","createAssignment","handleDeleteAssignment","assignmentId","deleteAssignment","handleStatusChange","newStatus","status","getPriorityColor","HIGH","LOW","getStatusIcon","COMPLETED","color","fileName","_jsxFileName","lineNumber","columnNumber","IN_PROGRESS","CANCELLED","getFormattedStatus","handleAssignmentClick","handleCloseDetailDialog","handleEditFromDetailDialog","assignmentToEdit","a","handleOpenEditDialog","handleAddComment","content","log","Promise","resolve","handleCloseEditDialog","handleSaveEditedAssignment","editedAssignment","prevAssignments","map","handleUpdateProgress","progress","sx","p","children","display","justifyContent","mb","variant","startIcon","onClick","container","spacing","mt","item","xs","sm","md","firstName","lastName","createdAt","Date","toISOString","updatedAt","onAddComment","onUpdateProgress","open","onClose","maxWidth","fullWidth","pt","flexDirection","gap","label","value","onChange","e","target","multiline","rows","select","Object","values","type","InputLabelProps","shrink","onEdit","onSave","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/AssignmentsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  MenuItem,\n  Card,\n  CardContent,\n  CardActions,\n  Chip,\n  IconButton,\n  Tooltip,\n  Grid\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  CheckCircle as CheckCircleIcon,\n  Schedule as ScheduleIcon,\n  Warning as WarningIcon,\n} from '@mui/icons-material';\nimport { User, TaskPriority, Assignment, AssignmentStatus } from '../types';\nimport { useAuth } from '../context/AuthContext';\nimport api from '../services/api';\nimport { useTranslation } from 'react-i18next';\nimport AssignmentCard from '../components/Assignment/AssignmentCard';\nimport AssignmentDetailDialog from '../components/Assignment/AssignmentDetailDialog';\nimport AssignmentEditDialog from '../components/Assignment/AssignmentEditDialog';\n\ninterface AssignmentFormData {\n  title: string;\n  description: string;\n  priority: TaskPriority;\n  dueDate: string;\n  assignedTo: string;\n}\n\nconst AssignmentsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [assignments, setAssignments] = useState<Assignment[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingAssignment, setEditingAssignment] = useState<Assignment | null>(null);\n  const [selectedAssignmentId, setSelectedAssignmentId] = useState<string | null>(null);\n  const [isDetailDialogOpen, setIsDetailDialogOpen] = useState(false);\n  const [formData, setFormData] = useState<AssignmentFormData>({\n    title: '',\n    description: '',\n    priority: TaskPriority.MEDIUM,\n    dueDate: '',\n    assignedTo: '',\n  });\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editingAssignmentData, setEditingAssignmentData] = useState<Assignment | null>(null);\n\n  const fetchAssignments = async () => {\n    try {\n      const response = await api.assignments.getAllAssignments('');\n      if (response.success && response.data) {\n        setAssignments(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching assignments:', error);\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await api.users.getAllUsers('');\n      if (response.success && response.data) {\n        setUsers(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAssignments();\n    fetchUsers();\n  }, []);\n\n  const handleOpenDialog = (assignment?: Assignment) => {\n    if (assignment) {\n      setEditingAssignment(assignment);\n      setFormData({\n        title: assignment.title,\n        description: assignment.description,\n        priority: assignment.priority,\n        dueDate: assignment.dueDate.split('T')[0],\n        assignedTo: assignment.assignedTo.id,\n      });\n    } else {\n      setEditingAssignment(null);\n      setFormData({\n        title: '',\n        description: '',\n        priority: TaskPriority.MEDIUM,\n        dueDate: '',\n        assignedTo: '',\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingAssignment(null);\n  };\n\n  const handleSaveAssignment = async () => {\n    try {\n      const selectedUser = users.find(u => u.id === formData.assignedTo);\n      if (!selectedUser) {\n        console.error('Selected user not found');\n        return;\n      }\n\n      const assignmentData = {\n        ...formData,\n        assignedBy: user || undefined,\n        assignedTo: selectedUser\n      };\n\n      const response = editingAssignment\n        ? await api.assignments.updateAssignment(editingAssignment.id, assignmentData, '')\n        : await api.assignments.createAssignment(assignmentData, '');\n\n      if (response.success) {\n        fetchAssignments();\n        handleCloseDialog();\n      }\n    } catch (error) {\n      console.error('Error saving assignment:', error);\n    }\n  };\n\n  const handleDeleteAssignment = async (assignmentId: string) => {\n    try {\n      const response = await api.assignments.deleteAssignment(assignmentId, '');\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error deleting assignment:', error);\n    }\n  };\n\n  const handleStatusChange = async (assignment: Assignment, newStatus: AssignmentStatus) => {\n    try {\n      const response = await api.assignments.updateAssignment(\n        assignment.id,\n        { ...assignment, status: newStatus },\n        ''\n      );\n      if (response.success) {\n        fetchAssignments();\n      }\n    } catch (error) {\n      console.error('Error updating assignment status:', error);\n    }\n  };\n\n  const getPriorityColor = (priority: TaskPriority) => {\n    switch (priority) {\n      case TaskPriority.HIGH:\n        return 'error';\n      case TaskPriority.MEDIUM:\n        return 'warning';\n      case TaskPriority.LOW:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: AssignmentStatus) => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return <CheckCircleIcon color=\"success\" />;\n      case AssignmentStatus.IN_PROGRESS:\n        return <ScheduleIcon color=\"primary\" />;\n      case AssignmentStatus.CANCELLED:\n        return <WarningIcon color=\"error\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getFormattedStatus = (status: AssignmentStatus): string => {\n    switch (status) {\n      case AssignmentStatus.COMPLETED:\n        return 'Completed';\n      case AssignmentStatus.IN_PROGRESS:\n        return 'In Progress';\n      case AssignmentStatus.CANCELLED:\n        return 'Cancelled';\n      default:\n        return status;\n    }\n  };\n  \n  const handleAssignmentClick = (assignmentId: string) => {\n    setSelectedAssignmentId(assignmentId);\n    setIsDetailDialogOpen(true);\n  };\n  \n  const handleCloseDetailDialog = () => {\n    setIsDetailDialogOpen(false);\n    setSelectedAssignmentId(null);\n  };\n  \n  const handleEditFromDetailDialog = (assignment: any) => {\n    // The assignment object from the detail dialog might need conversion\n    // Find the original assignment from our assignments array\n    const assignmentToEdit = assignments.find(a => a.id === assignment.id);\n    if (assignmentToEdit) {\n      handleOpenEditDialog(assignmentToEdit);\n    }\n    // Close the detail dialog\n    setIsDetailDialogOpen(false);\n  };\n  \n  const handleAddComment = async (assignmentId: string, content: string) => {\n    // In a real app, this would call an API to add a comment\n    console.log('Add comment to assignment', assignmentId, content);\n    return Promise.resolve();\n  };\n\n  const handleOpenEditDialog = (assignment: Assignment) => {\n    setEditingAssignmentData(assignment);\n    setIsEditDialogOpen(true);\n  };\n  \n  const handleCloseEditDialog = () => {\n    setIsEditDialogOpen(false);\n    setEditingAssignmentData(null);\n  };\n  \n  const handleSaveEditedAssignment = (editedAssignment: Assignment) => {\n    // Update the assignment in the local state\n    setAssignments(prevAssignments => \n      prevAssignments.map(a => \n        a.id === editedAssignment.id ? editedAssignment : a\n      )\n    );\n    \n    // Close the dialog\n    handleCloseEditDialog();\n    \n    // In a real app, you would also call the API to update the assignment\n    console.log('Saving edited assignment:', editedAssignment);\n  };\n  \n  const handleUpdateProgress = (assignmentId: string, progress: number, newStatus: string) => {\n    // Update the assignment status in local state\n    setAssignments(prevAssignments => \n      prevAssignments.map(a => {\n        if (a.id === assignmentId) {\n          return {\n            ...a,\n            status: newStatus as AssignmentStatus\n          };\n        }\n        return a;\n      })\n    );\n    \n    // In a real app, you would also call the API to update the assignment\n    console.log(`Updating assignment ${assignmentId} progress to ${progress}%, status: ${newStatus}`);\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">{t('assignments.title')}</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n        >\n          New Assignment\n        </Button>\n      </Box>\n\n      <Grid container spacing={3} sx={{ mt: 1 }}>\n        {assignments.map((assignment) => (\n          <Grid item xs={12} sm={6} md={4} key={assignment.id}>\n            <AssignmentCard\n              assignment={{\n                id: assignment.id,\n                title: assignment.title,\n                description: assignment.description,\n                status: (assignment.status === AssignmentStatus.COMPLETED \n                  ? 'COMPLETED' \n                  : assignment.status === AssignmentStatus.IN_PROGRESS \n                  ? 'IN_PROGRESS' \n                  : 'PENDING') as 'PENDING' | 'IN_PROGRESS' | 'COMPLETED' | 'OVERDUE',\n                dueDate: assignment.dueDate,\n                assignedBy: assignment.assignedBy || {\n                  id: '1',\n                  firstName: 'Default',\n                  lastName: 'Manager'\n                },\n                assignedTo: assignment.assignedTo,\n                createdAt: assignment.createdAt || new Date().toISOString(),\n                updatedAt: assignment.updatedAt || new Date().toISOString()\n              }}\n              onClick={() => handleAssignmentClick(assignment.id)}\n              onAddComment={handleAddComment}\n              onUpdateProgress={handleUpdateProgress}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          {editingAssignment ? 'Edit Assignment' : 'New Assignment'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              label=\"Title\"\n              fullWidth\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n            />\n            <TextField\n              label=\"Description\"\n              fullWidth\n              multiline\n              rows={4}\n              value={formData.description}\n              onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n            />\n            <TextField\n              select\n              label={t('priority.title')}\n              fullWidth\n              value={formData.priority}\n              onChange={(e) => setFormData({ ...formData, priority: e.target.value as TaskPriority })}\n            >\n              {Object.values(TaskPriority).map((priority) => (\n                <MenuItem key={priority} value={priority}>\n                  {priority}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              select\n              label=\"Assign To\"\n              fullWidth\n              value={formData.assignedTo}\n              onChange={(e) => setFormData({ ...formData, assignedTo: e.target.value })}\n            >\n              {users.map((user) => (\n                <MenuItem key={user.id} value={user.id}>\n                  {user.firstName} {user.lastName}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              label=\"Due Date\"\n              type=\"date\"\n              fullWidth\n              value={formData.dueDate}\n              onChange={(e) => setFormData({ ...formData, dueDate: e.target.value })}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSaveAssignment} variant=\"contained\" color=\"primary\">\n            {editingAssignment ? 'Save Changes' : 'Create Assignment'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Assignment Detail Dialog */}\n      <AssignmentDetailDialog\n        open={isDetailDialogOpen}\n        onClose={handleCloseDetailDialog}\n        assignmentId={selectedAssignmentId}\n        onEdit={handleEditFromDetailDialog}\n      />\n      \n      {/* Assignment Edit Dialog */}\n      <AssignmentEditDialog\n        open={isEditDialogOpen}\n        assignment={editingAssignmentData}\n        onClose={handleCloseEditDialog}\n        onSave={handleSaveEditedAssignment}\n        users={users}\n      />\n    </Box>\n  );\n};\n\nexport default AssignmentsPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EAEVC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,SAAS,EACTC,QAAQ,EAORC,IAAI,QACC,eAAe;AACtB,SACEC,GAAG,IAAIC,OAAO,EAGdC,WAAW,IAAIC,eAAe,EAC9BC,QAAQ,IAAIC,YAAY,EACxBC,OAAO,IAAIC,WAAW,QACjB,qBAAqB;AAC5B,SAAeC,YAAY,EAAcC,gBAAgB,QAAQ,UAAU;AAC3E,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,sBAAsB,MAAM,iDAAiD;AACpF,OAAOC,oBAAoB,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUjF,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAe,EAAE,CAAC;EAChE,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzC,QAAQ,CAAoB,IAAI,CAAC;EACnF,MAAM,CAAC0C,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG3C,QAAQ,CAAgB,IAAI,CAAC;EACrF,MAAM,CAAC4C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC8C,QAAQ,EAAEC,WAAW,CAAC,GAAG/C,QAAQ,CAAqB;IAC3DgD,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE9B,YAAY,CAAC+B,MAAM;IAC7BC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwD,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGzD,QAAQ,CAAoB,IAAI,CAAC;EAE3F,MAAM0D,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpC,GAAG,CAACW,WAAW,CAAC0B,iBAAiB,CAAC,EAAE,CAAC;MAC5D,IAAID,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACG,IAAI,EAAE;QACrC3B,cAAc,CAACwB,QAAQ,CAACG,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMpC,GAAG,CAACa,KAAK,CAAC8B,WAAW,CAAC,EAAE,CAAC;MAChD,IAAIP,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACG,IAAI,EAAE;QACrCzB,QAAQ,CAACsB,QAAQ,CAACG,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED9D,SAAS,CAAC,MAAM;IACdyD,gBAAgB,CAAC,CAAC;IAClBO,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIC,UAAuB,IAAK;IACpD,IAAIA,UAAU,EAAE;MACd3B,oBAAoB,CAAC2B,UAAU,CAAC;MAChCrB,WAAW,CAAC;QACVC,KAAK,EAAEoB,UAAU,CAACpB,KAAK;QACvBC,WAAW,EAAEmB,UAAU,CAACnB,WAAW;QACnCC,QAAQ,EAAEkB,UAAU,CAAClB,QAAQ;QAC7BE,OAAO,EAAEgB,UAAU,CAAChB,OAAO,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzChB,UAAU,EAAEe,UAAU,CAACf,UAAU,CAACiB;MACpC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL7B,oBAAoB,CAAC,IAAI,CAAC;MAC1BM,WAAW,CAAC;QACVC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE9B,YAAY,CAAC+B,MAAM;QAC7BC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;IACAd,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMgC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhC,aAAa,CAAC,KAAK,CAAC;IACpBE,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM+B,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,YAAY,GAAGrC,KAAK,CAACsC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKxB,QAAQ,CAACO,UAAU,CAAC;MAClE,IAAI,CAACoB,YAAY,EAAE;QACjBT,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAC;QACxC;MACF;MAEA,MAAMa,cAAc,GAAG;QACrB,GAAG9B,QAAQ;QACX+B,UAAU,EAAE5C,IAAI,IAAI6C,SAAS;QAC7BzB,UAAU,EAAEoB;MACd,CAAC;MAED,MAAMd,QAAQ,GAAGnB,iBAAiB,GAC9B,MAAMjB,GAAG,CAACW,WAAW,CAAC6C,gBAAgB,CAACvC,iBAAiB,CAAC8B,EAAE,EAAEM,cAAc,EAAE,EAAE,CAAC,GAChF,MAAMrD,GAAG,CAACW,WAAW,CAAC8C,gBAAgB,CAACJ,cAAc,EAAE,EAAE,CAAC;MAE9D,IAAIjB,QAAQ,CAACE,OAAO,EAAE;QACpBH,gBAAgB,CAAC,CAAC;QAClBa,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMkB,sBAAsB,GAAG,MAAOC,YAAoB,IAAK;IAC7D,IAAI;MACF,MAAMvB,QAAQ,GAAG,MAAMpC,GAAG,CAACW,WAAW,CAACiD,gBAAgB,CAACD,YAAY,EAAE,EAAE,CAAC;MACzE,IAAIvB,QAAQ,CAACE,OAAO,EAAE;QACpBH,gBAAgB,CAAC,CAAC;MACpB;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMqB,kBAAkB,GAAG,MAAAA,CAAOhB,UAAsB,EAAEiB,SAA2B,KAAK;IACxF,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMpC,GAAG,CAACW,WAAW,CAAC6C,gBAAgB,CACrDX,UAAU,CAACE,EAAE,EACb;QAAE,GAAGF,UAAU;QAAEkB,MAAM,EAAED;MAAU,CAAC,EACpC,EACF,CAAC;MACD,IAAI1B,QAAQ,CAACE,OAAO,EAAE;QACpBH,gBAAgB,CAAC,CAAC;MACpB;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,MAAMwB,gBAAgB,GAAIrC,QAAsB,IAAK;IACnD,QAAQA,QAAQ;MACd,KAAK9B,YAAY,CAACoE,IAAI;QACpB,OAAO,OAAO;MAChB,KAAKpE,YAAY,CAAC+B,MAAM;QACtB,OAAO,SAAS;MAClB,KAAK/B,YAAY,CAACqE,GAAG;QACnB,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,MAAMC,aAAa,GAAIJ,MAAwB,IAAK;IAClD,QAAQA,MAAM;MACZ,KAAKjE,gBAAgB,CAACsE,SAAS;QAC7B,oBAAO9D,OAAA,CAACd,eAAe;UAAC6E,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5C,KAAK3E,gBAAgB,CAAC4E,WAAW;QAC/B,oBAAOpE,OAAA,CAACZ,YAAY;UAAC2E,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC,KAAK3E,gBAAgB,CAAC6E,SAAS;QAC7B,oBAAOrE,OAAA,CAACV,WAAW;UAACyE,KAAK,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtC;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,MAAMG,kBAAkB,GAAIb,MAAwB,IAAa;IAC/D,QAAQA,MAAM;MACZ,KAAKjE,gBAAgB,CAACsE,SAAS;QAC7B,OAAO,WAAW;MACpB,KAAKtE,gBAAgB,CAAC4E,WAAW;QAC/B,OAAO,aAAa;MACtB,KAAK5E,gBAAgB,CAAC6E,SAAS;QAC7B,OAAO,WAAW;MACpB;QACE,OAAOZ,MAAM;IACjB;EACF,CAAC;EAED,MAAMc,qBAAqB,GAAIlB,YAAoB,IAAK;IACtDvC,uBAAuB,CAACuC,YAAY,CAAC;IACrCrC,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMwD,uBAAuB,GAAGA,CAAA,KAAM;IACpCxD,qBAAqB,CAAC,KAAK,CAAC;IAC5BF,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAM2D,0BAA0B,GAAIlC,UAAe,IAAK;IACtD;IACA;IACA,MAAMmC,gBAAgB,GAAGrE,WAAW,CAACwC,IAAI,CAAC8B,CAAC,IAAIA,CAAC,CAAClC,EAAE,KAAKF,UAAU,CAACE,EAAE,CAAC;IACtE,IAAIiC,gBAAgB,EAAE;MACpBE,oBAAoB,CAACF,gBAAgB,CAAC;IACxC;IACA;IACA1D,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAM6D,gBAAgB,GAAG,MAAAA,CAAOxB,YAAoB,EAAEyB,OAAe,KAAK;IACxE;IACA3C,OAAO,CAAC4C,GAAG,CAAC,2BAA2B,EAAE1B,YAAY,EAAEyB,OAAO,CAAC;IAC/D,OAAOE,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAML,oBAAoB,GAAIrC,UAAsB,IAAK;IACvDX,wBAAwB,CAACW,UAAU,CAAC;IACpCb,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMwD,qBAAqB,GAAGA,CAAA,KAAM;IAClCxD,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAMuD,0BAA0B,GAAIC,gBAA4B,IAAK;IACnE;IACA9E,cAAc,CAAC+E,eAAe,IAC5BA,eAAe,CAACC,GAAG,CAACX,CAAC,IACnBA,CAAC,CAAClC,EAAE,KAAK2C,gBAAgB,CAAC3C,EAAE,GAAG2C,gBAAgB,GAAGT,CACpD,CACF,CAAC;;IAED;IACAO,qBAAqB,CAAC,CAAC;;IAEvB;IACA/C,OAAO,CAAC4C,GAAG,CAAC,2BAA2B,EAAEK,gBAAgB,CAAC;EAC5D,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAAClC,YAAoB,EAAEmC,QAAgB,EAAEhC,SAAiB,KAAK;IAC1F;IACAlD,cAAc,CAAC+E,eAAe,IAC5BA,eAAe,CAACC,GAAG,CAACX,CAAC,IAAI;MACvB,IAAIA,CAAC,CAAClC,EAAE,KAAKY,YAAY,EAAE;QACzB,OAAO;UACL,GAAGsB,CAAC;UACJlB,MAAM,EAAED;QACV,CAAC;MACH;MACA,OAAOmB,CAAC;IACV,CAAC,CACH,CAAC;;IAED;IACAxC,OAAO,CAAC4C,GAAG,CAAC,uBAAuB1B,YAAY,gBAAgBmC,QAAQ,cAAchC,SAAS,EAAE,CAAC;EACnG,CAAC;EAED,oBACExD,OAAA,CAAC3B,GAAG;IAACoH,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChB3F,OAAA,CAAC3B,GAAG;MAACoH,EAAE,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACnE3F,OAAA,CAAC1B,UAAU;QAACyH,OAAO,EAAC,IAAI;QAAAJ,QAAA,EAAExF,CAAC,CAAC,mBAAmB;MAAC;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC9DnE,OAAA,CAACzB,MAAM;QACLwH,OAAO,EAAC,WAAW;QACnBC,SAAS,eAAEhG,OAAA,CAAChB,OAAO;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACvB8B,OAAO,EAAEA,CAAA,KAAM3D,gBAAgB,CAAC,CAAE;QAAAqD,QAAA,EACnC;MAED;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENnE,OAAA,CAAClB,IAAI;MAACoH,SAAS;MAACC,OAAO,EAAE,CAAE;MAACV,EAAE,EAAE;QAAEW,EAAE,EAAE;MAAE,CAAE;MAAAT,QAAA,EACvCtF,WAAW,CAACiF,GAAG,CAAE/C,UAAU,iBAC1BvC,OAAA,CAAClB,IAAI;QAACuH,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eAC9B3F,OAAA,CAACJ,cAAc;UACb2C,UAAU,EAAE;YACVE,EAAE,EAAEF,UAAU,CAACE,EAAE;YACjBtB,KAAK,EAAEoB,UAAU,CAACpB,KAAK;YACvBC,WAAW,EAAEmB,UAAU,CAACnB,WAAW;YACnCqC,MAAM,EAAGlB,UAAU,CAACkB,MAAM,KAAKjE,gBAAgB,CAACsE,SAAS,GACrD,WAAW,GACXvB,UAAU,CAACkB,MAAM,KAAKjE,gBAAgB,CAAC4E,WAAW,GAClD,aAAa,GACb,SAAiE;YACrE7C,OAAO,EAAEgB,UAAU,CAAChB,OAAO;YAC3ByB,UAAU,EAAET,UAAU,CAACS,UAAU,IAAI;cACnCP,EAAE,EAAE,GAAG;cACPgE,SAAS,EAAE,SAAS;cACpBC,QAAQ,EAAE;YACZ,CAAC;YACDlF,UAAU,EAAEe,UAAU,CAACf,UAAU;YACjCmF,SAAS,EAAEpE,UAAU,CAACoE,SAAS,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;YAC3DC,SAAS,EAAEvE,UAAU,CAACuE,SAAS,IAAI,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;UAC5D,CAAE;UACFZ,OAAO,EAAEA,CAAA,KAAM1B,qBAAqB,CAAChC,UAAU,CAACE,EAAE,CAAE;UACpDsE,YAAY,EAAElC,gBAAiB;UAC/BmC,gBAAgB,EAAEzB;QAAqB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GAxBkC5B,UAAU,CAACE,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyB7C,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEPnE,OAAA,CAACxB,MAAM;MAACyI,IAAI,EAAExG,UAAW;MAACyG,OAAO,EAAExE,iBAAkB;MAACyE,QAAQ,EAAC,IAAI;MAACC,SAAS;MAAAzB,QAAA,gBAC3E3F,OAAA,CAACvB,WAAW;QAAAkH,QAAA,EACThF,iBAAiB,GAAG,iBAAiB,GAAG;MAAgB;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACdnE,OAAA,CAACtB,aAAa;QAAAiH,QAAA,eACZ3F,OAAA,CAAC3B,GAAG;UAACoH,EAAE,EAAE;YAAE4B,EAAE,EAAE,CAAC;YAAEzB,OAAO,EAAE,MAAM;YAAE0B,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAA5B,QAAA,gBACnE3F,OAAA,CAACpB,SAAS;YACR4I,KAAK,EAAC,OAAO;YACbJ,SAAS;YACTK,KAAK,EAAExG,QAAQ,CAACE,KAAM;YACtBuG,QAAQ,EAAGC,CAAC,IAAKzG,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEE,KAAK,EAAEwG,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtE,CAAC,eACFnE,OAAA,CAACpB,SAAS;YACR4I,KAAK,EAAC,aAAa;YACnBJ,SAAS;YACTS,SAAS;YACTC,IAAI,EAAE,CAAE;YACRL,KAAK,EAAExG,QAAQ,CAACG,WAAY;YAC5BsG,QAAQ,EAAGC,CAAC,IAAKzG,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEG,WAAW,EAAEuG,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC,eACFnE,OAAA,CAACpB,SAAS;YACRmJ,MAAM;YACNP,KAAK,EAAErH,CAAC,CAAC,gBAAgB,CAAE;YAC3BiH,SAAS;YACTK,KAAK,EAAExG,QAAQ,CAACI,QAAS;YACzBqG,QAAQ,EAAGC,CAAC,IAAKzG,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEI,QAAQ,EAAEsG,CAAC,CAACC,MAAM,CAACH;YAAsB,CAAC,CAAE;YAAA9B,QAAA,EAEvFqC,MAAM,CAACC,MAAM,CAAC1I,YAAY,CAAC,CAAC+F,GAAG,CAAEjE,QAAQ,iBACxCrB,OAAA,CAACnB,QAAQ;cAAgB4I,KAAK,EAAEpG,QAAS;cAAAsE,QAAA,EACtCtE;YAAQ,GADIA,QAAQ;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACZnE,OAAA,CAACpB,SAAS;YACRmJ,MAAM;YACNP,KAAK,EAAC,WAAW;YACjBJ,SAAS;YACTK,KAAK,EAAExG,QAAQ,CAACO,UAAW;YAC3BkG,QAAQ,EAAGC,CAAC,IAAKzG,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEO,UAAU,EAAEmG,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAA9B,QAAA,EAEzEpF,KAAK,CAAC+E,GAAG,CAAElF,IAAI,iBACdJ,OAAA,CAACnB,QAAQ;cAAe4I,KAAK,EAAErH,IAAI,CAACqC,EAAG;cAAAkD,QAAA,GACpCvF,IAAI,CAACqG,SAAS,EAAC,GAAC,EAACrG,IAAI,CAACsG,QAAQ;YAAA,GADlBtG,IAAI,CAACqC,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eACZnE,OAAA,CAACpB,SAAS;YACR4I,KAAK,EAAC,UAAU;YAChBU,IAAI,EAAC,MAAM;YACXd,SAAS;YACTK,KAAK,EAAExG,QAAQ,CAACM,OAAQ;YACxBmG,QAAQ,EAAGC,CAAC,IAAKzG,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEM,OAAO,EAAEoG,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YACvEU,eAAe,EAAE;cAAEC,MAAM,EAAE;YAAK;UAAE;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAChBnE,OAAA,CAACrB,aAAa;QAAAgH,QAAA,gBACZ3F,OAAA,CAACzB,MAAM;UAAC0H,OAAO,EAAEvD,iBAAkB;UAAAiD,QAAA,EAAC;QAAM;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnDnE,OAAA,CAACzB,MAAM;UAAC0H,OAAO,EAAEtD,oBAAqB;UAACoD,OAAO,EAAC,WAAW;UAAChC,KAAK,EAAC,SAAS;UAAA4B,QAAA,EACvEhF,iBAAiB,GAAG,cAAc,GAAG;QAAmB;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGTnE,OAAA,CAACH,sBAAsB;MACrBoH,IAAI,EAAElG,kBAAmB;MACzBmG,OAAO,EAAE1C,uBAAwB;MACjCnB,YAAY,EAAExC,oBAAqB;MACnCwH,MAAM,EAAE5D;IAA2B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGFnE,OAAA,CAACF,oBAAoB;MACnBmH,IAAI,EAAExF,gBAAiB;MACvBc,UAAU,EAAEZ,qBAAsB;MAClCuF,OAAO,EAAEhC,qBAAsB;MAC/BoD,MAAM,EAAEnD,0BAA2B;MACnC5E,KAAK,EAAEA;IAAM;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjE,EAAA,CA1WID,eAAyB;EAAA,QACfN,cAAc,EACXF,OAAO;AAAA;AAAA8I,EAAA,GAFpBtI,eAAyB;AA4W/B,eAAeA,eAAe;AAAC,IAAAsI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}