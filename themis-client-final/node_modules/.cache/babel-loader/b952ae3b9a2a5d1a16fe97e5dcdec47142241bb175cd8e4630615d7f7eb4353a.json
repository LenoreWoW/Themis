{"ast":null,"code":"import React,{useState,useEffect}from'react';import{MenuItem,ListItemText,IconButton,Menu}from'@mui/material';import{Language as LanguageIcon}from'@mui/icons-material';import{useTranslation}from'react-i18next';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const LanguageSwitcher=_ref=>{let{onDirectionChange}=_ref;const{i18n,t}=useTranslation();const[anchorEl,setAnchorEl]=useState(null);const auth=useAuth();const currentLanguage=i18n.language;const languages=[{code:'en',name:t('language.english'),dir:'ltr'},{code:'ar',name:t('language.arabic'),dir:'rtl'}];// Initialize language from localStorage on component mount\nuseEffect(()=>{const savedLanguage=localStorage.getItem('themisLanguage');if(savedLanguage&&savedLanguage!==i18n.language){const langDirection=savedLanguage==='ar'?'rtl':'ltr';i18n.changeLanguage(savedLanguage);onDirectionChange(langDirection);console.log('Initialized language from localStorage:',savedLanguage,langDirection);}},[]);const handleClick=event=>{setAnchorEl(event.currentTarget);};const handleClose=()=>{setAnchorEl(null);};const handleLanguageChange=(langCode,direction)=>{i18n.changeLanguage(langCode);localStorage.setItem('themisLanguage',langCode);onDirectionChange(direction);handleClose();// Preserve auth state when changing language\nif(auth.isAuthenticated&&auth.user){// Save minimal auth data to sessionStorage (temporary storage)\nconst authState={isPreserved:true,userId:auth.user.id,username:auth.user.username};sessionStorage.setItem('themis_preserve_auth',JSON.stringify(authState));}// Force a page reload to ensure all components update with the new language\nwindow.location.reload();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",\"aria-label\":\"change language\",\"aria-controls\":\"language-menu\",\"aria-haspopup\":\"true\",onClick:handleClick,size:\"small\",sx:{ml:1},children:/*#__PURE__*/_jsx(LanguageIcon,{})}),/*#__PURE__*/_jsx(Menu,{id:\"language-menu\",anchorEl:anchorEl,keepMounted:true,open:Boolean(anchorEl),onClose:handleClose,children:languages.map(lang=>/*#__PURE__*/_jsx(MenuItem,{onClick:()=>handleLanguageChange(lang.code,lang.dir),selected:currentLanguage===lang.code,children:/*#__PURE__*/_jsx(ListItemText,{children:lang.name})},lang.code))})]});};export default LanguageSwitcher;","map":{"version":3,"names":["React","useState","useEffect","MenuItem","ListItemText","IconButton","Menu","Language","LanguageIcon","useTranslation","useAuth","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LanguageSwitcher","_ref","onDirectionChange","i18n","t","anchorEl","setAnchorEl","auth","currentLanguage","language","languages","code","name","dir","savedLanguage","localStorage","getItem","langDirection","changeLanguage","console","log","handleClick","event","currentTarget","handleClose","handleLanguageChange","langCode","direction","setItem","isAuthenticated","user","authState","isPreserved","userId","id","username","sessionStorage","JSON","stringify","window","location","reload","children","color","onClick","size","sx","ml","keepMounted","open","Boolean","onClose","map","lang","selected"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/LanguageSwitcher.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  MenuItem, \n  ListItemText,\n  IconButton,\n  Menu,\n} from '@mui/material';\nimport { \n  Language as LanguageIcon,\n} from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport { Direction } from '@mui/material/styles';\nimport { useAuth } from '../context/AuthContext';\n\ninterface LanguageSwitcherProps {\n  onDirectionChange: (direction: Direction) => void;\n}\n\nconst LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ onDirectionChange }) => {\n  const { i18n, t } = useTranslation();\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const auth = useAuth();\n  \n  const currentLanguage = i18n.language;\n  \n  const languages = [\n    { code: 'en', name: t('language.english'), dir: 'ltr' },\n    { code: 'ar', name: t('language.arabic'), dir: 'rtl' }\n  ];\n\n  // Initialize language from localStorage on component mount\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('themisLanguage');\n    if (savedLanguage && savedLanguage !== i18n.language) {\n      const langDirection = savedLanguage === 'ar' ? 'rtl' : 'ltr';\n      i18n.changeLanguage(savedLanguage);\n      onDirectionChange(langDirection as Direction);\n      console.log('Initialized language from localStorage:', savedLanguage, langDirection);\n    }\n  }, []);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleLanguageChange = (langCode: string, direction: Direction) => {\n    i18n.changeLanguage(langCode);\n    localStorage.setItem('themisLanguage', langCode);\n    onDirectionChange(direction);\n    handleClose();\n    \n    // Preserve auth state when changing language\n    if (auth.isAuthenticated && auth.user) {\n      // Save minimal auth data to sessionStorage (temporary storage)\n      const authState = {\n        isPreserved: true,\n        userId: auth.user.id,\n        username: auth.user.username\n      };\n      sessionStorage.setItem('themis_preserve_auth', JSON.stringify(authState));\n    }\n    \n    // Force a page reload to ensure all components update with the new language\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"change language\"\n        aria-controls=\"language-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        size=\"small\"\n        sx={{ ml: 1 }}\n      >\n        <LanguageIcon />\n      </IconButton>\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang) => (\n          <MenuItem \n            key={lang.code} \n            onClick={() => handleLanguageChange(lang.code, lang.dir as Direction)}\n            selected={currentLanguage === lang.code}\n          >\n            <ListItemText>{lang.name}</ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n};\n\nexport default LanguageSwitcher; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}