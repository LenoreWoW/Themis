{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import{Box,Typography,Paper,Button,Tabs,Tab,Chip,Stack,Avatar,Card,CardContent,Divider,Alert,AlertTitle,CircularProgress,Dialog,DialogTitle,DialogContent,DialogActions,FormControl,InputLabel,Select,MenuItem,OutlinedInput,Checkbox,ListItemText,FormHelperText,List,ListItem,ListItemIcon,IconButton,Tooltip,Snackbar,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TablePagination,Menu}from'@mui/material';import{CalendarMonth as CalendarIcon,Group as TeamIcon,ViewKanban as KanbanIcon,Timeline as GanttIcon,AccountTree as MindMapIcon,ArrowBack as BackIcon,Add as AddIcon,PersonAdd as PersonAddIcon,CloudUpload as UploadIcon,PictureAsPdf as PdfIcon,Image as ImageIcon,InsertDriveFile as DocIcon,DescriptionOutlined as FileIcon,DeleteOutline as DeleteIcon,RequestQuote as RequestIcon,Summarize as SummarizeIcon,FactCheck as LogIcon,Download as DownloadIcon,Person as PersonIcon,ChangeCircle as ChangeCircleIcon,Event as EventIcon,AttachMoney as AttachMoneyIcon,Subject as SubjectIcon,MoreHoriz as MoreHorizIcon,Close as CloseIcon}from'@mui/icons-material';import{useAuth}from'../context/AuthContext';import{useTasks}from'../context/TaskContext';import{ProjectStatus,ProjectPriority,UserRole}from'../types';import KanbanBoard from'../components/Kanban/KanbanBoard';import AddTaskDialog from'../components/Task/AddTaskDialog';import MindMapView from'../components/MindMap/MindMapView';import ErrorBoundary from'../components/common/ErrorBoundary';import{useProjects}from'../context/ProjectContext';import WeeklyUpdates from'../components/Project/WeeklyUpdates';import GanttChart from'../components/Gantt/GanttChart';import ChangeRequestDialog from'../components/Project/ChangeRequestDialog';import{canAddTasks,canRequestTasks,canManageProjects}from'../utils/permissions';import{runFullAudit}from'../utils/auditUtils';// Add this enum at the top of your file, just before const mockUsers\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";var AuditAction=/*#__PURE__*/function(AuditAction){AuditAction[\"CREATE\"]=\"CREATE\";AuditAction[\"UPDATE\"]=\"UPDATE\";AuditAction[\"DELETE\"]=\"DELETE\";AuditAction[\"LOGIN\"]=\"LOGIN\";AuditAction[\"LOGOUT\"]=\"LOGOUT\";AuditAction[\"APPROVE\"]=\"APPROVE\";AuditAction[\"REJECT\"]=\"REJECT\";AuditAction[\"SUBMIT\"]=\"SUBMIT\";return AuditAction;}(AuditAction||{});// Mock data for project\nconst mockUsers=[{id:'1',email:'alice@example.com',firstName:'Alice',lastName:'Smith',role:UserRole.PROJECT_MANAGER,department:{id:'1',name:'IT',description:'Information Technology Department',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'2',email:'bob@example.com',firstName:'Bob',lastName:'Johnson',role:UserRole.ADMIN,department:{id:'2',name:'Engineering',description:'Engineering Department',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'3',email:'carol@example.com',firstName:'Carol',lastName:'Williams',role:UserRole.TEAM_LEAD,department:{id:'3',name:'PMO',description:'Project Management Office',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];const mockAttachments=[{id:'1',name:'Project Charter',filename:'Project Charter.pdf',type:'application/pdf',size:1024*1024,url:'https://example.com/project-charter.pdf',uploadedBy:{id:mockUsers[0].id,firstName:mockUsers[0].firstName,lastName:mockUsers[0].lastName},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'2',name:'Requirements Document',filename:'Requirements.docx',type:'application/vnd.openxmlformats-officedocument.wordprocessingml.document',size:512*1024,url:'https://example.com/requirements.docx',uploadedBy:{id:mockUsers[1].id,firstName:mockUsers[1].firstName,lastName:mockUsers[1].lastName},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];const mockProject={id:'1',name:'Digital Transformation',description:'Company-wide digital transformation initiative',client:'Sample Client',status:ProjectStatus.IN_PROGRESS,priority:ProjectPriority.MEDIUM,startDate:'2024-01-01',endDate:'2024-12-31',projectManager:{id:'1',firstName:'John',lastName:'Doe'},department:{id:'1',name:'Engineering'},team:mockUsers,attachments:mockAttachments,budget:1000000,actualCost:450000,progress:45,createdAt:'2024-01-01',updatedAt:'2024-01-01'};// Mock data for tasks\nconst mockTasks=[{id:'1',title:'Requirements Gathering',description:'Gather and document system requirements from stakeholders.',status:'DONE',priority:'HIGH',startDate:'2023-01-15',dueDate:'2023-01-31',assignee:'Jane Smith'},{id:'2',title:'Database Schema Design',description:'Design the database schema for the new system.',status:'DONE',priority:'MEDIUM',startDate:'2023-02-01',dueDate:'2023-02-15',assignee:'Robert Brown'},{id:'3',title:'Frontend Prototype',description:'Create a prototype of the user interface.',status:'IN_PROGRESS',priority:'MEDIUM',startDate:'2023-02-15',dueDate:'2023-03-01',assignee:'Sarah Williams'},{id:'4',title:'API Development',description:'Develop the API endpoints for the system.',status:'IN_PROGRESS',priority:'HIGH',startDate:'2023-02-15',dueDate:'2023-03-15',assignee:'Robert Brown'},{id:'5',title:'Testing Plan',description:'Create a comprehensive testing plan for the system.',status:'TODO',priority:'MEDIUM',startDate:'2023-03-01',dueDate:'2023-03-15',assignee:'Mike Johnson'}];// Helper function to get status color\nconst getStatusColor=(status,endDate)=>{// Check if the project is overdue (end date is before current date)\nif(endDate&&new Date(endDate)<new Date()){return'error';// Red color for overdue projects\n}switch(status){case'InProgress':case'IN_PROGRESS':return'primary';case'Completed':case'COMPLETED':return'success';case'OnHold':case'ON_HOLD':return'warning';case'Cancelled':case'CANCELLED':return'error';case'Draft':case'PLANNING':return'default';case'SubPMOReview':return'info';case'MainPMOApproval':return'secondary';default:return'default';}};// Helper function to get status label\nconst getStatusLabel=status=>{switch(status){case'InProgress':case'IN_PROGRESS':return'In Progress';case'Completed':case'COMPLETED':return'Completed';case'OnHold':case'ON_HOLD':return'On Hold';case'Cancelled':case'CANCELLED':return'Cancelled';case'Draft':case'PLANNING':return'Planning';case'SubPMOReview':return'Sub PMO Review';case'MainPMOApproval':return'Main PMO Approval';default:return status;}};function TabPanel(props){const{children,value,index,...other}=props;return/*#__PURE__*/_jsx(\"div\",{role:\"tabpanel\",hidden:value!==index,id:`project-tabpanel-${index}`,\"aria-labelledby\":`project-tab-${index}`,...other,children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{p:3},children:children})});}function a11yProps(index){return{id:`project-tab-${index}`,'aria-controls':`project-tabpanel-${index}`};}// Updated interface for AuthContext\n// Function to convert ProjectWithTeamData to a full Project with proper types\nconst convertToFullProject=data=>{// Create a complete User object from the minimal projectManager data\nconst projectManager={id:data.projectManager.id,firstName:data.projectManager.firstName,lastName:data.projectManager.lastName,email:`${data.projectManager.firstName.toLowerCase()}.${data.projectManager.lastName.toLowerCase()}@example.com`,role:UserRole.PROJECT_MANAGER,department:{id:data.department.id,name:data.department.name,description:'Department description',createdAt:data.createdAt,updatedAt:data.updatedAt},createdAt:data.createdAt,updatedAt:data.updatedAt};// Create a complete Department object\nconst department={id:data.department.id,name:data.department.name,description:'Department description',createdAt:data.createdAt,updatedAt:data.updatedAt};// Create and return a complete Project object\nreturn{id:data.id,name:data.name,description:data.description,client:data.client,status:data.status,priority:data.priority,startDate:data.startDate,endDate:data.endDate,projectManager:projectManager,department:department,progress:data.progress,budget:data.budget,actualCost:data.actualCost,createdAt:data.createdAt,updatedAt:data.updatedAt};};// Need to define our own interface since KanbanBoardProps doesn't include tasks\n// Define the Log interface\n// Add mock logs data\nconst mockProjectLogs=[{id:'1',action:AuditAction.CREATE,details:'Project created',user:{id:'1',firstName:'John',lastName:'Doe'},timestamp:new Date(Date.now()-30*24*60*60*1000).toISOString()},{id:'2',action:AuditAction.UPDATE,details:'Project status updated to IN_PROGRESS',user:{id:'1',firstName:'John',lastName:'Doe'},timestamp:new Date(Date.now()-25*24*60*60*1000).toISOString()},{id:'3',action:AuditAction.UPDATE,details:'Team member added: Alice Smith',user:{id:'1',firstName:'John',lastName:'Doe'},timestamp:new Date(Date.now()-20*24*60*60*1000).toISOString()},{id:'4',action:AuditAction.UPDATE,details:'Project description updated',user:{id:'2',firstName:'Bob',lastName:'Johnson'},timestamp:new Date(Date.now()-15*24*60*60*1000).toISOString()},{id:'5',action:AuditAction.UPDATE,details:'New file uploaded: Project Charter.pdf',user:{id:'1',firstName:'John',lastName:'Doe'},timestamp:new Date(Date.now()-10*24*60*60*1000).toISOString()},{id:'6',action:AuditAction.UPDATE,details:'Team member added: Carol Williams',user:{id:'1',firstName:'John',lastName:'Doe'},timestamp:new Date(Date.now()-5*24*60*60*1000).toISOString()}];const ProjectDetailPage=()=>{const{id}=useParams();const{user}=useAuth();const{projects}=useProjects();const[project,setProject]=useState(null);const[tasks,setTasks]=useState([]);const[isAddTaskDialogOpen,setIsAddTaskDialogOpen]=useState(false);const[isRequestTaskDialogOpen,setIsRequestTaskDialogOpen]=useState(false);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[tabValue,setTabValue]=useState(0);const{tasks:contextTasks,addTask,updateTask,deleteTask,moveTask,loading:tasksLoading,error:contextError}=useTasks();const navigate=useNavigate();const[isAddTeamMemberDialogOpen,setIsAddTeamMemberDialogOpen]=useState(false);const[availableUsers,setAvailableUsers]=useState([]);const[selectedTeamMembers,setSelectedTeamMembers]=useState([]);const[addingTeamMembers,setAddingTeamMembers]=useState(false);const[projectAttachments,setProjectAttachments]=useState(mockAttachments);const[isUploadDialogOpen,setIsUploadDialogOpen]=useState(false);const[uploadingFile,setUploadingFile]=useState(false);const fileInputRef=useRef(null);const[selectedFiles,setSelectedFiles]=useState([]);const[newTaskStatus,setNewTaskStatus]=useState(undefined);const[projectLogs,setProjectLogs]=useState(mockProjectLogs);const[page,setPage]=useState(0);const[rowsPerPage,setRowsPerPage]=useState(10);// Fetch project data based on ID\nuseEffect(()=>{const fetchProjectData=async()=>{if(!id)return;try{setIsLoading(true);setError(null);// In a real app, this would use the API\n// const response = await projectService.getProjectById(id);\n// const projectData = response.data;\n// For now, find the project in the projects array or use mock data\nconst foundProject=projects.find(p=>p.id===id);if(foundProject){// Convert to ProjectWithTeamData format if needed\nconst projectWithTeam={...foundProject,team:mockUsers,// In a real app, you would fetch the team members\nattachments:mockAttachments,// In a real app, you would fetch the attachments\n// Ensure all required properties are explicitly set with string values\ncreatedAt:foundProject.createdAt||new Date().toISOString(),updatedAt:foundProject.updatedAt||new Date().toISOString()};setProject(projectWithTeam);}else{// If project not found in the context, use the mock data as fallback\n// but with the correct ID\nconst mockWithCorrectId={...mockProject,id:id};setProject(mockWithCorrectId);console.warn(`Project with ID ${id} not found in context, using mock data.`);}}catch(err){console.error('Error fetching project:',err);setError('Failed to load project data');}finally{setIsLoading(false);}};fetchProjectData();},[id,projects]);// Load available users when needed\nuseEffect(()=>{if(isAddTeamMemberDialogOpen&&user!==null&&user!==void 0&&user.token){const fetchUsers=async()=>{try{// In a real app, you would fetch users from your API\n// For now, we'll use mock data\nsetAvailableUsers(mockUsers);}catch(err){console.error('Error fetching users:',err);}};fetchUsers();}},[isAddTeamMemberDialogOpen,user===null||user===void 0?void 0:user.token]);// Fetch attachments when the Attachments tab is selected\nuseEffect(()=>{const fetchAttachments=async()=>{if(!id||!(user!==null&&user!==void 0&&user.token)||tabValue!==5)return;try{// In a real app, you would fetch the attachments from the API\n// For now, we'll just use the mock data\nsetProjectAttachments(mockAttachments);}catch(err){console.error('Error fetching attachments:',err);}};fetchAttachments();},[id,user===null||user===void 0?void 0:user.token,tabValue]);// Fetch logs when the Logs tab is selected\nuseEffect(()=>{const fetchLogs=async()=>{if(!id||!(user!==null&&user!==void 0&&user.token)||tabValue!==7)return;try{// In a real app, you would fetch the logs from the API\n// For now, we'll just use mock data\nsetProjectLogs(mockProjectLogs);}catch(err){console.error('Error fetching project logs:',err);}};fetchLogs();},[id,user===null||user===void 0?void 0:user.token,tabValue]);// Gantt Chart error handling\nconst[ganttError,setGanttError]=useState(null);const handleGanttError=error=>{console.error('Gantt chart error:',error);setGanttError(error.message||'An error occurred loading the Gantt chart');};// Check user permissions\nconst userCanAddTasks=user!==null&&user!==void 0&&user.role?canAddTasks(user.role):false;const userCanRequestTasks=user!==null&&user!==void 0&&user.role?canRequestTasks(user.role):false;const userCanManageProjects=user!==null&&user!==void 0&&user.role?canManageProjects(user.role):false;const handleTabChange=(event,newValue)=>{setTabValue(newValue);};const handleGoBack=()=>{navigate('/projects');};// Use the fetched project data instead of the mock\nconst projectData=project||mockProject;// Calculate project progress\nconst progress=projectData.progress;const daysTotal=Math.ceil((new Date(projectData.endDate).getTime()-new Date(projectData.startDate).getTime())/(1000*3600*24));const daysElapsed=Math.ceil((new Date().getTime()-new Date(projectData.startDate).getTime())/(1000*3600*24));const daysRemaining=Math.max(0,daysTotal-daysElapsed);const isOverdue=new Date()>new Date(projectData.endDate)&&projectData.status!==ProjectStatus.COMPLETED;const handleAddTask=async newTask=>{try{await addTask(newTask);setIsAddTaskDialogOpen(false);}catch(err){console.error('Error adding task:',err);}};const handleUpdateTask=async(taskId,updatedTask)=>{try{await updateTask(taskId,updatedTask);}catch(err){console.error('Error updating task:',err);}};const handleDeleteTask=async taskId=>{try{await deleteTask(taskId);}catch(err){console.error('Error deleting task:',err);}};const handleMoveTask=async(taskId,newStatus)=>{try{await moveTask(taskId,newStatus);}catch(err){console.error('Error moving task:',err);}};const handleOpenAddTeamMemberDialog=()=>{setSelectedTeamMembers([]);setIsAddTeamMemberDialogOpen(true);};const handleCloseAddTeamMemberDialog=()=>{setIsAddTeamMemberDialogOpen(false);};const handleTeamMembersChange=event=>{const{value}=event.target;setSelectedTeamMembers(typeof value==='string'?value.split(','):value);};const handleAddTeamMembers=async()=>{if(!id||!(user!==null&&user!==void 0&&user.token)||selectedTeamMembers.length===0)return;setAddingTeamMembers(true);try{// In a real app, you would call your API to add team members\n// For now, we'll just simulate success\nconsole.log('Adding team members:',selectedTeamMembers);// Simulate API call with a delay\nawait new Promise(resolve=>setTimeout(resolve,500));// Update the UI with the new team members\nconst newTeamMembers=selectedTeamMembers.map(userId=>{const foundUser=availableUsers.find(u=>u.id===userId);if(foundUser){// If we found the user in our available users, just use that\nreturn foundUser;}else{// Create a minimal valid User if not found\nreturn{id:userId,firstName:`User`,lastName:userId,email:`user${userId}@example.com`,role:UserRole.DEVELOPER,department:{id:'0',name:'Unknown Department',description:'Unknown department',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};}});// In a real app, you would refetch the project data\n// For now, we'll just update our mock data\nmockProject.team=[...mockProject.team,...newTeamMembers];handleCloseAddTeamMemberDialog();}catch(err){console.error('Error adding team members:',err);}finally{setAddingTeamMembers(false);}};// Handle file selection for upload\nconst handleFileChange=e=>{if(e.target.files&&e.target.files.length>0){const filesArray=Array.from(e.target.files);setSelectedFiles(prevFiles=>[...prevFiles,...filesArray]);// Reset the input value to allow selecting the same file again\ne.target.value='';}};// Handle file upload button click\nconst handleUploadClick=()=>{if(fileInputRef.current){fileInputRef.current.click();}};// Remove a selected file before upload\nconst handleRemoveSelectedFile=index=>{setSelectedFiles(prevFiles=>prevFiles.filter((_,i)=>i!==index));};// Upload files to the server\nconst handleUploadFiles=async()=>{if(!id||!(user!==null&&user!==void 0&&user.token)||selectedFiles.length===0)return;setUploadingFile(true);try{// In a real app, you would upload the files to the API\n// For now, we'll just simulate a delay and add them to our mock data\nawait new Promise(resolve=>setTimeout(resolve,1000));// Create new mock attachments\nconst newAttachments=selectedFiles.map((file,index)=>({id:`new-${Date.now()}-${index}`,name:file.name,filename:file.name,type:file.type,size:file.size,url:URL.createObjectURL(file),// In a real app, this would be the URL from the server\nuploadedBy:{id:(user===null||user===void 0?void 0:user.id)||'0',firstName:(user===null||user===void 0?void 0:user.firstName)||'Unknown',lastName:(user===null||user===void 0?void 0:user.lastName)||'User'},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}));setProjectAttachments([...projectAttachments,...newAttachments]);setSelectedFiles([]);setIsUploadDialogOpen(false);}catch(err){console.error('Error uploading files:',err);}finally{setUploadingFile(false);}};// Format file size for display\nconst formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};// Get icon for file type\nconst getFileIcon=fileType=>{if(fileType.includes('pdf')){return/*#__PURE__*/_jsx(PdfIcon,{color:\"error\"});}else if(fileType.includes('image')){return/*#__PURE__*/_jsx(ImageIcon,{color:\"primary\"});}else if(fileType.includes('word')||fileType.includes('document')){return/*#__PURE__*/_jsx(DocIcon,{color:\"info\"});}return/*#__PURE__*/_jsx(FileIcon,{});};// Handle download attachment\nconst handleDownloadAttachment=attachment=>{// In a real app, you would implement a proper download mechanism\nwindow.open(attachment.url,'_blank');};// Handle delete attachment\nconst handleDeleteAttachment=async attachmentId=>{if(!id||!(user!==null&&user!==void 0&&user.token))return;try{// In a real app, you would call the API to delete the attachment\n// For now, we'll just update our local state\nsetProjectAttachments(prevAttachments=>prevAttachments.filter(att=>att.id!==attachmentId));}catch(err){console.error('Error deleting attachment:',err);}};// Update the handleAddTaskOpen function\nconst handleAddTaskOpen=status=>{if(status){setNewTaskStatus(status);}setIsAddTaskDialogOpen(true);};// Add this function along with your other handlers\nconst handleGanttTaskClick=task=>{console.log('Task clicked from Gantt:',task);// Do something with the task, e.g. show details\n};const handleRequestTask=()=>{setIsRequestTaskDialogOpen(true);};const handleRequestTaskSubmit=async taskData=>{try{// In a real app, you would send this to a task request endpoint\nconsole.log('Task request submitted:',taskData);setIsRequestTaskDialogOpen(false);}catch(err){console.error('Error submitting task request:',err);}};// Fix for the TaskClick handler\nconst handleTaskClick=taskId=>{console.log('Task clicked:',taskId);// Do something with the task, e.g. show details\n};// Add a state for selected task view\nconst[activeTaskView,setActiveTaskView]=useState('kanban');// Add shared task state to be used across all views\nconst[projectTasks,setProjectTasks]=useState([]);// Sync tasks from context to local state\nuseEffect(()=>{if(contextTasks){setProjectTasks(contextTasks);console.log('Task state synchronized across views:',contextTasks);}},[contextTasks]);// Add snackbar state\nconst[snackbar,setSnackbar]=useState({open:false,message:'',severity:'success'});// Show snackbar function\nconst showSnackbar=(message,severity)=>{setSnackbar({open:true,message,severity});};// Close snackbar function\nconst handleSnackbarClose=()=>{setSnackbar(prev=>({...prev,open:false}));};// Update the handleTaskAdded function to ensure synchronization\nconst handleTaskAdded=async newTask=>{try{// Add task through context which will update the global task state\nawait addTask(newTask);showSnackbar('Task added successfully','success');}catch(error){console.error('Error adding task:',error);showSnackbar('Failed to add task','error');}};// Create a wrapper function that matches the expected signature for AddTaskDialog\nconst handleTaskAddedWrapper=success=>{if(success){showSnackbar('Task added successfully','success');}else{showSnackbar('Failed to add task','error');}};// Handle log pagination\nconst handleChangePage=(event,newPage)=>{setPage(newPage);};const handleChangeRowsPerPage=event=>{setRowsPerPage(parseInt(event.target.value,10));setPage(0);};// Get action color\nconst getActionColor=action=>{switch(action){case AuditAction.CREATE:return'success';case AuditAction.UPDATE:return'primary';case AuditAction.DELETE:return'error';case AuditAction.APPROVE:return'success';case AuditAction.REJECT:return'error';case AuditAction.SUBMIT:return'info';default:return'default';}};// Change request handlers\nconst[anchorEl,setAnchorEl]=useState(null);const[changeRequestType,setChangeRequestType]=useState(null);const openChangeRequestMenu=Boolean(anchorEl);const handleChangeRequestMenuOpen=event=>{setAnchorEl(event.currentTarget);};const handleChangeRequestMenuClose=()=>{setAnchorEl(null);};const handleChangeRequestOpen=function(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;setChangeRequestType(type);setIsChangeRequestDialogOpen(true);handleChangeRequestMenuClose();};const handleChangeRequestClose=()=>{setIsChangeRequestDialogOpen(false);};const handleChangeRequestSubmitted=()=>{showSnackbar('Change request submitted successfully!','success');};// Add state for change request menu and dialog\nconst[isChangeRequestDialogOpen,setIsChangeRequestDialogOpen]=useState(false);// Add state for audit results\nconst[auditResult,setAuditResult]=useState(null);// Run audit on page load to verify compliance with ClientTerms\nuseEffect(()=>{// Only run audit for admin users\nif((user===null||user===void 0?void 0:user.role)===UserRole.ADMIN){const result=runFullAudit();setAuditResult(result);if(!result.passed){showSnackbar('Audit found compliance issues. Check the console for details.','error');console.warn('Audit results:',result);}}},[user===null||user===void 0?void 0:user.role]);return/*#__PURE__*/_jsxs(Box,{children:[auditResult&&!auditResult.passed&&/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:2},action:/*#__PURE__*/_jsx(Button,{color:\"inherit\",size:\"small\",onClick:()=>console.log('Audit details:',auditResult),children:\"View Details\"}),children:\"This project has compliance issues with client terms. Please review and address them.\"}),/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(BackIcon,{}),onClick:handleGoBack,sx:{mb:2},children:\"Back to Projects\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:mockProject.name}),/*#__PURE__*/_jsx(Tooltip,{title:`Status: ${getStatusLabel(mockProject.status)}${isOverdue?' (Overdue)':''}`,children:/*#__PURE__*/_jsx(Chip,{label:getStatusLabel(mockProject.status),color:getStatusColor(mockProject.status,mockProject.endDate),sx:{fontWeight:'bold'}})})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Project Details\"}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[userCanManageProjects&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(ChangeCircleIcon,{}),onClick:handleChangeRequestMenuOpen,children:\"Change Request\"}),/*#__PURE__*/_jsxs(Menu,{anchorEl:anchorEl,open:openChangeRequestMenu,onClose:handleChangeRequestMenuClose,PaperProps:{elevation:3,sx:{minWidth:200}},children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('SCHEDULE'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(EventIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Extend Project\"})]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('CLOSURE'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Close Project\"})]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('SCOPE'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SubjectIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Change Project Scope\"})]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('BUDGET'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(AttachMoneyIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Change Project Cost\"})]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('RESOURCE'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(PersonIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Delegate Project\"})]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>handleChangeRequestOpen('OTHER'),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(MoreHorizIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{children:\"Other Changes\"})]})]})]}),userCanAddTasks?/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setIsAddTaskDialogOpen(true),children:\"Add Task\"}):userCanRequestTasks?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(RequestIcon,{}),onClick:handleRequestTask,children:\"Request Task\"}):null]})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{mt:1},children:mockProject.description})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:3,mb:3},children:[/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 200px'},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Manager\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[mockProject.projectManager.firstName,\" \",mockProject.projectManager.lastName]})]})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 200px'},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Department\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:mockProject.department.name})]})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 200px'},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Timeline\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[new Date(mockProject.startDate).toLocaleDateString(),\" - \",new Date(mockProject.endDate).toLocaleDateString()]})]})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 200px'},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Completion\"}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[progress,\"%\"]}),isOverdue&&/*#__PURE__*/_jsx(Chip,{label:\"Overdue\",size:\"small\",color:\"error\"})]})]})})]}),/*#__PURE__*/_jsxs(Paper,{sx:{width:'100%',mb:3},children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,\"aria-label\":\"project tabs\",children:[/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(CalendarIcon,{}),label:\"Overview\",...a11yProps(0)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(TeamIcon,{}),label:\"Team\",...a11yProps(1)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(KanbanIcon,{}),label:\"Kanban\",...a11yProps(2)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(GanttIcon,{}),label:\"Gantt Chart\",...a11yProps(3)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(MindMapIcon,{}),label:\"Mind Map\",...a11yProps(4)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(UploadIcon,{}),label:\"Attachments\",...a11yProps(5)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(SummarizeIcon,{}),label:\"Weekly Updates\",...a11yProps(6)}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(LogIcon,{}),label:\"Logs\",...a11yProps(7)})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:0,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexWrap:'wrap',gap:3},children:[/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 400px'},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Project Overview\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:2}}),/*#__PURE__*/_jsxs(Stack,{spacing:2,children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Budget\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"$\",mockProject.budget.toLocaleString()]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Actual Cost\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"$\",mockProject.actualCost.toLocaleString()]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Remaining\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"$\",(mockProject.budget-mockProject.actualCost).toLocaleString()]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Days Remaining\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[daysRemaining,\" days\"]})]})]})]})})}),/*#__PURE__*/_jsx(Box,{sx:{flex:'1 1 400px'},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Recent Tasks\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:2}}),/*#__PURE__*/_jsx(Stack,{spacing:2,children:mockTasks.slice(0,3).map(task=>/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:task.title}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Assigned to: \",task.assignee]}),/*#__PURE__*/_jsx(Chip,{label:task.status.replace('_',' '),size:\"small\",color:task.dueDate&&new Date(task.dueDate)<new Date()?'error':task.status==='DONE'?'success':task.status==='IN_PROGRESS'?'primary':'default'})]})]},task.id))})]})})})]})}),/*#__PURE__*/_jsxs(TabPanel,{value:tabValue,index:1,children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Project Team\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(PersonAddIcon,{}),onClick:handleOpenAddTeamMemberDialog,children:\"Add Team Member\"})]}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:2},children:(mockProject.team||[]).map(user=>/*#__PURE__*/_jsx(Box,{sx:{width:{xs:'100%',sm:'48%',md:'31%'}},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[user.firstName,\" \",user.lastName]}),/*#__PURE__*/_jsxs(Typography,{color:\"text.secondary\",children:[user.role,\" - \",user.department.name]})]})})},user.id))})]}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:2,children:tasksLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'300px'},children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsxs(Alert,{severity:\"error\",sx:{mb:3},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),error]}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Kanban Board\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:3},children:\"Manage tasks by dragging them between the columns to update their status.\"}),/*#__PURE__*/_jsx(KanbanBoard,{project:convertToFullProject(mockProject),tasks:contextTasks,onTaskUpdate:handleMoveTask,onTaskClick:handleTaskClick,onAddTask:userCanAddTasks?()=>setIsAddTaskDialogOpen(true):undefined,onRequestTask:userCanRequestTasks?handleRequestTask:undefined})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:3,children:tasksLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'300px'},children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsxs(Alert,{severity:\"error\",sx:{mb:3},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),error]}):ganttError?/*#__PURE__*/_jsxs(Alert,{severity:\"error\",sx:{mb:3},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),ganttError,/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>setGanttError(null),children:\"Try Again\"})})]}):/*#__PURE__*/_jsxs(Box,{sx:{height:'600px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Gantt Chart\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:3},children:\"View tasks in a timeline format showing dependencies and milestones.\"}),/*#__PURE__*/_jsx(ErrorBoundary,{onError:handleGanttError,children:/*#__PURE__*/_jsx(Box,{sx:{position:'relative'},children:/*#__PURE__*/_jsx(GanttChart,{project:convertToFullProject(mockProject),tasks:contextTasks,onTaskClick:handleGanttTaskClick})})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:4,children:tasksLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'300px'},children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsxs(Alert,{severity:\"error\",sx:{mb:3},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),error]}):/*#__PURE__*/_jsxs(Box,{sx:{height:'600px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Mind Map\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:3},children:\"Visualize project structure, tasks, and relationships in a mind map.\"}),/*#__PURE__*/_jsx(MindMapView,{project:convertToFullProject(mockProject),tasks:contextTasks})]})}),/*#__PURE__*/_jsxs(TabPanel,{value:tabValue,index:5,children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Project Attachments\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(UploadIcon,{}),onClick:()=>setIsUploadDialogOpen(true),children:\"Upload Files\"})]}),projectAttachments.length===0?/*#__PURE__*/_jsxs(Paper,{sx:{p:3,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No attachments have been uploaded for this project\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(UploadIcon,{}),onClick:()=>setIsUploadDialogOpen(true),sx:{mt:2},children:\"Upload Your First File\"})]}):/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(List,{children:projectAttachments.map(attachment=>/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"download\",onClick:()=>handleDownloadAttachment(attachment),color:\"primary\",children:/*#__PURE__*/_jsx(DownloadIcon,{})}),/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"delete\",onClick:()=>handleDeleteAttachment(attachment.id),color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{})})]}),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getFileIcon(attachment.type)}),/*#__PURE__*/_jsx(ListItemText,{primary:attachment.filename,secondary:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Typography,{component:\"span\",variant:\"body2\",color:\"text.secondary\",children:[formatFileSize(attachment.size),\" \\u2022 Uploaded by \",attachment.uploadedBy.firstName,\" \",attachment.uploadedBy.lastName,\" \\u2022 \",new Date(attachment.createdAt).toLocaleDateString()]})})})]},attachment.id))})})})]}),/*#__PURE__*/_jsx(TabPanel,{value:tabValue,index:6,children:/*#__PURE__*/_jsx(WeeklyUpdates,{projectId:mockProject.id})}),/*#__PURE__*/_jsxs(TabPanel,{value:tabValue,index:7,children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Project Activity Logs\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Track all changes and activities related to this project.\"})]}),/*#__PURE__*/_jsxs(TableContainer,{component:Paper,children:[/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"project logs table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Details\"}),/*#__PURE__*/_jsx(TableCell,{children:\"User\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date & Time\"})]})}),/*#__PURE__*/_jsxs(TableBody,{children:[projectLogs.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(log=>/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:log.action.replace('_',' '),size:\"small\",color:getActionColor(log.action)})}),/*#__PURE__*/_jsx(TableCell,{children:log.details}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Avatar,{sx:{width:24,height:24,mr:1},children:[log.user.firstName.charAt(0),log.user.lastName.charAt(0)]}),log.user.firstName,\" \",log.user.lastName]})}),/*#__PURE__*/_jsxs(TableCell,{children:[new Date(log.timestamp).toLocaleDateString(),\" \",new Date(log.timestamp).toLocaleTimeString()]})]},log.id)),projectLogs.length===0&&/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:4,align:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{py:2},children:\"No activity logs found for this project\"})})})]})]}),/*#__PURE__*/_jsx(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:projectLogs.length,rowsPerPage:rowsPerPage,page:page,onPageChange:handleChangePage,onRowsPerPageChange:handleChangeRowsPerPage})]})]})]}),/*#__PURE__*/_jsx(AddTaskDialog,{open:isAddTaskDialogOpen,onClose:()=>setIsAddTaskDialogOpen(false),projectId:mockProject.id,initialStatus:newTaskStatus,onTaskAdded:handleTaskAddedWrapper,projectUsers:mockProject.team}),/*#__PURE__*/_jsxs(Dialog,{open:isAddTeamMemberDialogOpen,onClose:handleCloseAddTeamMemberDialog,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add Team Members\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Box,{sx:{mt:2},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"add-team-members-label\",children:\"Select Users\"}),/*#__PURE__*/_jsx(Select,{labelId:\"add-team-members-label\",id:\"add-team-members\",multiple:true,value:selectedTeamMembers,onChange:handleTeamMembersChange,input:/*#__PURE__*/_jsx(OutlinedInput,{label:\"Select Users\"}),renderValue:selected=>/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selected.map(userId=>{const user=availableUsers.find(u=>u.id===userId);return/*#__PURE__*/_jsx(Chip,{label:user?`${user.firstName} ${user.lastName}`:userId,size:\"small\"},userId);})}),children:availableUsers.map(user=>/*#__PURE__*/_jsxs(MenuItem,{value:user.id,children:[/*#__PURE__*/_jsx(Checkbox,{checked:selectedTeamMembers.indexOf(user.id)>-1}),/*#__PURE__*/_jsx(ListItemText,{primary:`${user.firstName} ${user.lastName}`,secondary:`${user.role} - ${user.department.name}`})]},user.id))}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Select users to add to the project team\"})]})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseAddTeamMemberDialog,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleAddTeamMembers,disabled:selectedTeamMembers.length===0||addingTeamMembers,children:addingTeamMembers?'Adding...':'Add to Team'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:isUploadDialogOpen,onClose:()=>!uploadingFile&&setIsUploadDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Upload Project Files\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,style:{display:'none'},onChange:handleFileChange,multiple:true}),/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{p:3,mb:3,textAlign:'center',cursor:'pointer',backgroundColor:'rgba(0, 0, 0, 0.02)'},onClick:handleUploadClick,children:[/*#__PURE__*/_jsx(UploadIcon,{fontSize:\"large\",color:\"primary\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:1},children:\"Click to select files or drag and drop files here\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:\"Supported file types: PDF, DOCX, XLSX, JPG, PNG, and more\"})]}),selectedFiles.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Selected Files (\",selectedFiles.length,\")\"]}),/*#__PURE__*/_jsx(List,{children:selectedFiles.map((file,index)=>/*#__PURE__*/_jsxs(ListItem,{secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"remove\",onClick:()=>handleRemoveSelectedFile(index),children:/*#__PURE__*/_jsx(DeleteIcon,{})}),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:getFileIcon(file.type)}),/*#__PURE__*/_jsx(ListItemText,{primary:file.name,secondary:formatFileSize(file.size)})]},index))})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setIsUploadDialogOpen(false),disabled:uploadingFile,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleUploadFiles,variant:\"contained\",disabled:selectedFiles.length===0||uploadingFile,startIcon:uploadingFile?/*#__PURE__*/_jsx(CircularProgress,{size:24}):/*#__PURE__*/_jsx(UploadIcon,{}),children:uploadingFile?'Uploading...':'Upload Files'})]})]}),/*#__PURE__*/_jsx(RequestTaskDialog,{open:isRequestTaskDialogOpen,onClose:()=>setIsRequestTaskDialogOpen(false),projectId:mockProject.id}),/*#__PURE__*/_jsx(ChangeRequestDialog,{open:isChangeRequestDialogOpen,onClose:handleChangeRequestClose,projectId:mockProject.id,onSubmitted:handleChangeRequestSubmitted,changeRequestType:changeRequestType}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:6000,onClose:handleSnackbarClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleSnackbarClose,severity:snackbar.severity,variant:\"filled\",children:snackbar.message})})]});};// Create mock components for missing imports\nconst RequestTaskDialog=_ref=>{let{open,onClose,projectId}=_ref;return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Request Task (Mock)\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Typography,{children:\"This is a mock component for RequestTaskDialog\"})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Close\"})})]});};export default ProjectDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","Box","Typography","Paper","Button","Tabs","Tab","Chip","Stack","Avatar","Card","CardContent","Divider","Alert","AlertTitle","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","OutlinedInput","Checkbox","ListItemText","FormHelperText","List","ListItem","ListItemIcon","IconButton","Tooltip","Snackbar","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Menu","CalendarMonth","CalendarIcon","Group","TeamIcon","ViewKanban","KanbanIcon","Timeline","GanttIcon","AccountTree","MindMapIcon","ArrowBack","BackIcon","Add","AddIcon","PersonAdd","PersonAddIcon","CloudUpload","UploadIcon","PictureAsPdf","PdfIcon","Image","ImageIcon","InsertDriveFile","DocIcon","DescriptionOutlined","FileIcon","DeleteOutline","DeleteIcon","RequestQuote","RequestIcon","Summarize","SummarizeIcon","FactCheck","LogIcon","Download","DownloadIcon","Person","PersonIcon","ChangeCircle","ChangeCircleIcon","Event","EventIcon","AttachMoney","AttachMoneyIcon","Subject","SubjectIcon","MoreHoriz","MoreHorizIcon","Close","CloseIcon","useAuth","useTasks","ProjectStatus","ProjectPriority","UserRole","KanbanBoard","AddTaskDialog","MindMapView","ErrorBoundary","useProjects","WeeklyUpdates","GanttChart","ChangeRequestDialog","canAddTasks","canRequestTasks","canManageProjects","runFullAudit","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AuditAction","mockUsers","id","email","firstName","lastName","role","PROJECT_MANAGER","department","name","description","createdAt","Date","toISOString","updatedAt","ADMIN","TEAM_LEAD","mockAttachments","filename","type","size","url","uploadedBy","mockProject","client","status","IN_PROGRESS","priority","MEDIUM","startDate","endDate","projectManager","team","attachments","budget","actualCost","progress","mockTasks","title","dueDate","assignee","getStatusColor","getStatusLabel","TabPanel","props","children","value","index","other","hidden","sx","p","a11yProps","convertToFullProject","data","toLowerCase","mockProjectLogs","action","CREATE","details","user","timestamp","now","UPDATE","ProjectDetailPage","projects","project","setProject","tasks","setTasks","isAddTaskDialogOpen","setIsAddTaskDialogOpen","isRequestTaskDialogOpen","setIsRequestTaskDialogOpen","isLoading","setIsLoading","error","setError","tabValue","setTabValue","contextTasks","addTask","updateTask","deleteTask","moveTask","loading","tasksLoading","contextError","navigate","isAddTeamMemberDialogOpen","setIsAddTeamMemberDialogOpen","availableUsers","setAvailableUsers","selectedTeamMembers","setSelectedTeamMembers","addingTeamMembers","setAddingTeamMembers","projectAttachments","setProjectAttachments","isUploadDialogOpen","setIsUploadDialogOpen","uploadingFile","setUploadingFile","fileInputRef","selectedFiles","setSelectedFiles","newTaskStatus","setNewTaskStatus","undefined","projectLogs","setProjectLogs","page","setPage","rowsPerPage","setRowsPerPage","fetchProjectData","foundProject","find","projectWithTeam","mockWithCorrectId","console","warn","err","token","fetchUsers","fetchAttachments","fetchLogs","ganttError","setGanttError","handleGanttError","message","userCanAddTasks","userCanRequestTasks","userCanManageProjects","handleTabChange","event","newValue","handleGoBack","projectData","daysTotal","Math","ceil","getTime","daysElapsed","daysRemaining","max","isOverdue","COMPLETED","handleAddTask","newTask","handleUpdateTask","taskId","updatedTask","handleDeleteTask","handleMoveTask","newStatus","handleOpenAddTeamMemberDialog","handleCloseAddTeamMemberDialog","handleTeamMembersChange","target","split","handleAddTeamMembers","length","log","Promise","resolve","setTimeout","newTeamMembers","map","userId","foundUser","u","DEVELOPER","handleFileChange","e","files","filesArray","Array","from","prevFiles","handleUploadClick","current","click","handleRemoveSelectedFile","filter","_","i","handleUploadFiles","newAttachments","file","URL","createObjectURL","formatFileSize","bytes","k","sizes","floor","parseFloat","pow","toFixed","getFileIcon","fileType","includes","color","handleDownloadAttachment","attachment","window","open","handleDeleteAttachment","attachmentId","prevAttachments","att","handleAddTaskOpen","handleGanttTaskClick","task","handleRequestTask","handleRequestTaskSubmit","taskData","handleTaskClick","activeTaskView","setActiveTaskView","projectTasks","setProjectTasks","snackbar","setSnackbar","severity","showSnackbar","handleSnackbarClose","prev","handleTaskAdded","handleTaskAddedWrapper","success","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","getActionColor","DELETE","APPROVE","REJECT","SUBMIT","anchorEl","setAnchorEl","changeRequestType","setChangeRequestType","openChangeRequestMenu","Boolean","handleChangeRequestMenuOpen","currentTarget","handleChangeRequestMenuClose","handleChangeRequestOpen","arguments","setIsChangeRequestDialogOpen","handleChangeRequestClose","handleChangeRequestSubmitted","isChangeRequestDialogOpen","auditResult","setAuditResult","result","passed","mb","onClick","startIcon","direction","justifyContent","alignItems","spacing","variant","component","label","fontWeight","display","gap","onClose","PaperProps","elevation","minWidth","fontSize","mt","flexWrap","flex","toLocaleDateString","width","borderBottom","borderColor","onChange","icon","gutterBottom","toLocaleString","slice","replace","xs","sm","md","height","onTaskUpdate","onTaskClick","onAddTask","onRequestTask","onError","position","textAlign","secondaryAction","primary","secondary","projectId","hover","mr","charAt","toLocaleTimeString","colSpan","align","py","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","initialStatus","onTaskAdded","projectUsers","maxWidth","fullWidth","labelId","multiple","input","renderValue","selected","checked","indexOf","disabled","ref","style","cursor","backgroundColor","edge","RequestTaskDialog","onSubmitted","autoHideDuration","_ref"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/pages/ProjectDetailPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  Box, \n  Typography,\n  Paper,\n  Button,\n  Tabs,\n  Tab,\n  Chip,\n  Stack,\n  Avatar,\n  AvatarGroup,\n  Card,\n  CardContent,\n  Divider,\n  Alert,\n  AlertTitle,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  SelectChangeEvent,\n  OutlinedInput,\n  Checkbox,\n  ListItemText,\n  FormHelperText,\n  List,\n  ListItem,\n  ListItemIcon,\n  IconButton,\n  Tooltip,\n  Snackbar,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  LinearProgress,\n  Menu\n} from '@mui/material';\nimport {\n  CalendarMonth as CalendarIcon,\n  Group as TeamIcon,\n  ViewKanban as KanbanIcon,\n  Timeline as GanttIcon,\n  AccountTree as MindMapIcon,\n  ArrowBack as BackIcon,\n  Add as AddIcon,\n  PersonAdd as PersonAddIcon,\n  CloudUpload as UploadIcon,\n  PictureAsPdf as PdfIcon,\n  Image as ImageIcon,\n  InsertDriveFile as DocIcon,\n  DescriptionOutlined as FileIcon,\n  DeleteOutline as DeleteIcon,\n  RequestQuote as RequestIcon,\n  Summarize as SummarizeIcon,\n  FactCheck as LogIcon,\n  Download as DownloadIcon,\n  Edit as EditIcon,\n  Person as PersonIcon,\n  Folder as FolderIcon,\n  Refresh as RefreshIcon,\n  MoreVert as MoreVertIcon,\n  ChangeCircle as ChangeCircleIcon,\n  Event as EventIcon,\n  AttachMoney as AttachMoneyIcon,\n  Subject as SubjectIcon,\n  MoreHoriz as MoreHorizIcon,\n  Close as CloseIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../context/AuthContext';\nimport { useTasks } from '../context/TaskContext';\nimport { formatDistanceToNow, format } from 'date-fns';\nimport { \n  Project, \n  Task, \n  Risk, \n  User, \n  Issue,\n  Department,\n  ProjectStatus,\n  ProjectPriority,\n  TaskStatus,\n  Attachment,\n  UserRole\n} from '../types';\nimport { TaskService } from '../services/TaskService';\nimport api from '../services/api';\nimport RiskIssueRegister from '../components/RiskIssue/RiskIssueRegister';\nimport TaskModal from '../components/Task/TaskModal';\nimport { useTranslation } from 'react-i18next';\nimport KanbanBoard from '../components/Kanban/KanbanBoard';\nimport AddTaskDialog from '../components/Task/AddTaskDialog';\nimport MindMapView from '../components/MindMap/MindMapView';\nimport ErrorBoundary from '../components/common/ErrorBoundary';\nimport { useProjects } from '../context/ProjectContext';\nimport AddTeamMemberDialog from '../components/Project/AddTeamMemberDialog';\nimport WeeklyUpdates from '../components/Project/WeeklyUpdates';\nimport GanttChart from '../components/Gantt/GanttChart';\nimport ChangeRequestDialog from '../components/Project/ChangeRequestDialog';\nimport { canAddTasks, canRequestTasks, canManageProjects, canApproveProjects } from '../utils/permissions';\nimport { runFullAudit, AuditResult } from '../utils/auditUtils';\n\n// Add this enum at the top of your file, just before const mockUsers\nenum AuditAction {\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n  LOGIN = 'LOGIN',\n  LOGOUT = 'LOGOUT',\n  APPROVE = 'APPROVE',\n  REJECT = 'REJECT',\n  SUBMIT = 'SUBMIT'\n}\n\n// Mock data for project\nconst mockUsers: User[] = [\n  {\n    id: '1',\n    email: 'alice@example.com',\n    firstName: 'Alice',\n    lastName: 'Smith',\n    role: UserRole.PROJECT_MANAGER,\n    department: {\n      id: '1',\n      name: 'IT',\n      description: 'Information Technology Department',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '2',\n    email: 'bob@example.com',\n    firstName: 'Bob',\n    lastName: 'Johnson',\n    role: UserRole.ADMIN,\n    department: {\n      id: '2',\n      name: 'Engineering',\n      description: 'Engineering Department',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '3',\n    email: 'carol@example.com',\n    firstName: 'Carol',\n    lastName: 'Williams',\n    role: UserRole.TEAM_LEAD,\n    department: {\n      id: '3',\n      name: 'PMO',\n      description: 'Project Management Office',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\nconst mockAttachments: Attachment[] = [\n  {\n    id: '1',\n    name: 'Project Charter',\n    filename: 'Project Charter.pdf',\n    type: 'application/pdf',\n    size: 1024 * 1024,\n    url: 'https://example.com/project-charter.pdf',\n    uploadedBy: {\n      id: mockUsers[0].id,\n      firstName: mockUsers[0].firstName,\n      lastName: mockUsers[0].lastName\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  {\n    id: '2',\n    name: 'Requirements Document',\n    filename: 'Requirements.docx',\n    type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    size: 512 * 1024,\n    url: 'https://example.com/requirements.docx',\n    uploadedBy: {\n      id: mockUsers[1].id,\n      firstName: mockUsers[1].firstName,\n      lastName: mockUsers[1].lastName\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n];\n\ninterface ProjectWithTeamData {\n  id: string;\n  name: string;\n  description: string;\n  client: string;\n  status: ProjectStatus;\n  priority: ProjectPriority;\n  startDate: string;\n  endDate: string;\n  projectManager: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  department: {\n    id: string;\n    name: string;\n  };\n  team: User[];\n  attachments: Attachment[];\n  budget: number;\n  actualCost: number;\n  progress: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst mockProject: ProjectWithTeamData = {\n  id: '1',\n  name: 'Digital Transformation',\n  description: 'Company-wide digital transformation initiative',\n  client: 'Sample Client',\n  status: ProjectStatus.IN_PROGRESS,\n  priority: ProjectPriority.MEDIUM,\n  startDate: '2024-01-01',\n  endDate: '2024-12-31',\n  projectManager: {\n    id: '1',\n    firstName: 'John',\n    lastName: 'Doe'\n  },\n  department: {\n    id: '1',\n    name: 'Engineering'\n  },\n  team: mockUsers,\n  attachments: mockAttachments,\n  budget: 1000000,\n  actualCost: 450000,\n  progress: 45,\n  createdAt: '2024-01-01',\n  updatedAt: '2024-01-01'\n};\n\n// Mock data for tasks\nconst mockTasks = [\n  { \n    id: '1', \n    title: 'Requirements Gathering', \n    description: 'Gather and document system requirements from stakeholders.',\n    status: 'DONE', \n    priority: 'HIGH',\n    startDate: '2023-01-15', \n    dueDate: '2023-01-31',\n    assignee: 'Jane Smith'\n  },\n  { \n    id: '2', \n    title: 'Database Schema Design', \n    description: 'Design the database schema for the new system.',\n    status: 'DONE', \n    priority: 'MEDIUM',\n    startDate: '2023-02-01', \n    dueDate: '2023-02-15',\n    assignee: 'Robert Brown'\n  },\n  { \n    id: '3', \n    title: 'Frontend Prototype', \n    description: 'Create a prototype of the user interface.',\n    status: 'IN_PROGRESS', \n    priority: 'MEDIUM',\n    startDate: '2023-02-15', \n    dueDate: '2023-03-01',\n    assignee: 'Sarah Williams'\n  },\n  { \n    id: '4', \n    title: 'API Development', \n    description: 'Develop the API endpoints for the system.',\n    status: 'IN_PROGRESS', \n    priority: 'HIGH',\n    startDate: '2023-02-15', \n    dueDate: '2023-03-15',\n    assignee: 'Robert Brown'\n  },\n  { \n    id: '5', \n    title: 'Testing Plan', \n    description: 'Create a comprehensive testing plan for the system.',\n    status: 'TODO', \n    priority: 'MEDIUM',\n    startDate: '2023-03-01', \n    dueDate: '2023-03-15',\n    assignee: 'Mike Johnson'\n  }\n];\n\n// Helper function to get status color\nconst getStatusColor = (status: string, endDate?: string) => {\n  // Check if the project is overdue (end date is before current date)\n  if (endDate && new Date(endDate) < new Date()) {\n    return 'error'; // Red color for overdue projects\n  }\n  \n  switch(status) {\n    case 'InProgress': \n    case 'IN_PROGRESS': return 'primary';\n    case 'Completed': \n    case 'COMPLETED': return 'success';\n    case 'OnHold': \n    case 'ON_HOLD': return 'warning';\n    case 'Cancelled': \n    case 'CANCELLED': return 'error';\n    case 'Draft': \n    case 'PLANNING': return 'default';\n    case 'SubPMOReview': return 'info';\n    case 'MainPMOApproval': return 'secondary';\n    default: return 'default';\n  }\n};\n\n// Helper function to get status label\nconst getStatusLabel = (status: string) => {\n  switch(status) {\n    case 'InProgress': \n    case 'IN_PROGRESS': return 'In Progress';\n    case 'Completed': \n    case 'COMPLETED': return 'Completed';\n    case 'OnHold': \n    case 'ON_HOLD': return 'On Hold';\n    case 'Cancelled': \n    case 'CANCELLED': return 'Cancelled';\n    case 'Draft': \n    case 'PLANNING': return 'Planning';\n    case 'SubPMOReview': return 'Sub PMO Review';\n    case 'MainPMOApproval': return 'Main PMO Approval';\n    default: return status;\n  }\n};\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`project-tabpanel-${index}`}\n      aria-labelledby={`project-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `project-tab-${index}`,\n    'aria-controls': `project-tabpanel-${index}`,\n  };\n}\n\n// Updated interface for AuthContext\ninterface AuthUser extends User {\n  token?: string;\n}\n\ninterface AuthContextValue {\n  user: AuthUser | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\ninterface AddTaskDialogProps {\n  open: boolean;\n  onClose: () => void;\n  projectId: string;\n}\n\ninterface RequestTaskDialogProps {\n  open: boolean;\n  onClose: () => void;\n  projectId: string;\n}\n\n// Function to convert ProjectWithTeamData to a full Project with proper types\nconst convertToFullProject = (data: ProjectWithTeamData): Project => {\n  // Create a complete User object from the minimal projectManager data\n  const projectManager: User = {\n    id: data.projectManager.id,\n    firstName: data.projectManager.firstName,\n    lastName: data.projectManager.lastName,\n    email: `${data.projectManager.firstName.toLowerCase()}.${data.projectManager.lastName.toLowerCase()}@example.com`,\n    role: UserRole.PROJECT_MANAGER,\n    department: {\n      id: data.department.id,\n      name: data.department.name,\n      description: 'Department description',\n      createdAt: data.createdAt,\n      updatedAt: data.updatedAt\n    },\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt\n  };\n\n  // Create a complete Department object\n  const department: Department = {\n    id: data.department.id,\n    name: data.department.name,\n    description: 'Department description',\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt\n  };\n\n  // Create and return a complete Project object\n  return {\n    id: data.id,\n    name: data.name,\n    description: data.description,\n    client: data.client,\n    status: data.status,\n    priority: data.priority,\n    startDate: data.startDate,\n    endDate: data.endDate,\n    projectManager: projectManager,\n    department: department,\n    progress: data.progress,\n    budget: data.budget,\n    actualCost: data.actualCost,\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt\n  };\n};\n\n// Need to define our own interface since KanbanBoardProps doesn't include tasks\ninterface CustomKanbanBoardProps {\n  project: Project;\n  tasks: Task[];\n  onTaskUpdate: (taskId: string, newStatus: TaskStatus) => Promise<void>;\n  onTaskClick: (taskId: string) => void;\n  onAddTask?: () => void;\n  onRequestTask?: () => void;\n}\n\n// Define the Log interface\ninterface ProjectLog {\n  id: string;\n  action: AuditAction;\n  details: string;\n  user: {\n    id: string;\n    firstName: string;\n    lastName: string;\n  };\n  timestamp: string;\n}\n\n// Add mock logs data\nconst mockProjectLogs: ProjectLog[] = [\n  {\n    id: '1',\n    action: AuditAction.CREATE,\n    details: 'Project created',\n    user: {\n      id: '1',\n      firstName: 'John',\n      lastName: 'Doe'\n    },\n    timestamp: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '2',\n    action: AuditAction.UPDATE,\n    details: 'Project status updated to IN_PROGRESS',\n    user: {\n      id: '1',\n      firstName: 'John',\n      lastName: 'Doe'\n    },\n    timestamp: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '3',\n    action: AuditAction.UPDATE,\n    details: 'Team member added: Alice Smith',\n    user: {\n      id: '1',\n      firstName: 'John',\n      lastName: 'Doe'\n    },\n    timestamp: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '4',\n    action: AuditAction.UPDATE,\n    details: 'Project description updated',\n    user: {\n      id: '2',\n      firstName: 'Bob',\n      lastName: 'Johnson'\n    },\n    timestamp: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '5',\n    action: AuditAction.UPDATE,\n    details: 'New file uploaded: Project Charter.pdf',\n    user: {\n      id: '1',\n      firstName: 'John',\n      lastName: 'Doe'\n    },\n    timestamp: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString()\n  },\n  {\n    id: '6',\n    action: AuditAction.UPDATE,\n    details: 'Team member added: Carol Williams',\n    user: {\n      id: '1',\n      firstName: 'John',\n      lastName: 'Doe'\n    },\n    timestamp: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()\n  }\n];\n\nconst ProjectDetailPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { user } = useAuth() as AuthContextValue;\n  const { projects } = useProjects();\n  const [project, setProject] = useState<ProjectWithTeamData | null>(null);\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [isAddTaskDialogOpen, setIsAddTaskDialogOpen] = useState(false);\n  const [isRequestTaskDialogOpen, setIsRequestTaskDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n  const { tasks: contextTasks, addTask, updateTask, deleteTask, moveTask, loading: tasksLoading, error: contextError } = useTasks();\n  const navigate = useNavigate();\n  const [isAddTeamMemberDialogOpen, setIsAddTeamMemberDialogOpen] = useState(false);\n  const [availableUsers, setAvailableUsers] = useState<User[]>([]);\n  const [selectedTeamMembers, setSelectedTeamMembers] = useState<string[]>([]);\n  const [addingTeamMembers, setAddingTeamMembers] = useState(false);\n  const [projectAttachments, setProjectAttachments] = useState<Attachment[]>(mockAttachments);\n  const [isUploadDialogOpen, setIsUploadDialogOpen] = useState(false);\n  const [uploadingFile, setUploadingFile] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [newTaskStatus, setNewTaskStatus] = useState<TaskStatus | undefined>(undefined);\n  const [projectLogs, setProjectLogs] = useState<ProjectLog[]>(mockProjectLogs);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // Fetch project data based on ID\n  useEffect(() => {\n    const fetchProjectData = async () => {\n      if (!id) return;\n      \n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        // In a real app, this would use the API\n        // const response = await projectService.getProjectById(id);\n        // const projectData = response.data;\n        \n        // For now, find the project in the projects array or use mock data\n        const foundProject = projects.find(p => p.id === id);\n        \n        if (foundProject) {\n          // Convert to ProjectWithTeamData format if needed\n          const projectWithTeam: ProjectWithTeamData = {\n            ...foundProject,\n            team: mockUsers, // In a real app, you would fetch the team members\n            attachments: mockAttachments, // In a real app, you would fetch the attachments\n            // Ensure all required properties are explicitly set with string values\n            createdAt: foundProject.createdAt || new Date().toISOString(), \n            updatedAt: foundProject.updatedAt || new Date().toISOString()\n          };\n          setProject(projectWithTeam);\n        } else {\n          // If project not found in the context, use the mock data as fallback\n          // but with the correct ID\n          const mockWithCorrectId = {\n            ...mockProject,\n            id: id\n          };\n          setProject(mockWithCorrectId);\n          console.warn(`Project with ID ${id} not found in context, using mock data.`);\n        }\n      } catch (err) {\n        console.error('Error fetching project:', err);\n        setError('Failed to load project data');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchProjectData();\n  }, [id, projects]);\n\n  // Load available users when needed\n  useEffect(() => {\n    if (isAddTeamMemberDialogOpen && user?.token) {\n      const fetchUsers = async () => {\n        try {\n          // In a real app, you would fetch users from your API\n          // For now, we'll use mock data\n          setAvailableUsers(mockUsers);\n        } catch (err) {\n          console.error('Error fetching users:', err);\n        }\n      };\n      \n      fetchUsers();\n    }\n  }, [isAddTeamMemberDialogOpen, user?.token]);\n\n  // Fetch attachments when the Attachments tab is selected\n  useEffect(() => {\n    const fetchAttachments = async () => {\n      if (!id || !user?.token || tabValue !== 5) return;\n      \n      try {\n        // In a real app, you would fetch the attachments from the API\n        // For now, we'll just use the mock data\n        setProjectAttachments(mockAttachments);\n      } catch (err) {\n        console.error('Error fetching attachments:', err);\n      }\n    };\n    \n    fetchAttachments();\n  }, [id, user?.token, tabValue]);\n\n  // Fetch logs when the Logs tab is selected\n  useEffect(() => {\n    const fetchLogs = async () => {\n      if (!id || !user?.token || tabValue !== 7) return;\n      \n      try {\n        // In a real app, you would fetch the logs from the API\n        // For now, we'll just use mock data\n        setProjectLogs(mockProjectLogs);\n      } catch (err) {\n        console.error('Error fetching project logs:', err);\n      }\n    };\n    \n    fetchLogs();\n  }, [id, user?.token, tabValue]);\n\n  // Gantt Chart error handling\n  const [ganttError, setGanttError] = useState<string | null>(null);\n  const handleGanttError = (error: Error) => {\n    console.error('Gantt chart error:', error);\n    setGanttError(error.message || 'An error occurred loading the Gantt chart');\n  };\n\n  // Check user permissions\n  const userCanAddTasks = user?.role ? canAddTasks(user.role) : false;\n  const userCanRequestTasks = user?.role ? canRequestTasks(user.role) : false;\n  const userCanManageProjects = user?.role ? canManageProjects(user.role) : false;\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleGoBack = () => {\n    navigate('/projects');\n  };\n\n  // Use the fetched project data instead of the mock\n  const projectData = project || mockProject;\n\n  // Calculate project progress\n  const progress = projectData.progress;\n  const daysTotal = Math.ceil((new Date(projectData.endDate).getTime() - new Date(projectData.startDate).getTime()) / (1000 * 3600 * 24));\n  const daysElapsed = Math.ceil((new Date().getTime() - new Date(projectData.startDate).getTime()) / (1000 * 3600 * 24));\n  const daysRemaining = Math.max(0, daysTotal - daysElapsed);\n  const isOverdue = new Date() > new Date(projectData.endDate) && projectData.status !== ProjectStatus.COMPLETED;\n\n  const handleAddTask = async (newTask: Task) => {\n    try {\n      await addTask(newTask);\n      setIsAddTaskDialogOpen(false);\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n\n  const handleUpdateTask = async (taskId: string, updatedTask: Partial<Task>) => {\n    try {\n      await updateTask(taskId, updatedTask);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  const handleDeleteTask = async (taskId: string) => {\n    try {\n      await deleteTask(taskId);\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  const handleMoveTask = async (taskId: string, newStatus: TaskStatus) => {\n    try {\n      await moveTask(taskId, newStatus);\n    } catch (err) {\n      console.error('Error moving task:', err);\n    }\n  };\n\n  const handleOpenAddTeamMemberDialog = () => {\n    setSelectedTeamMembers([]);\n    setIsAddTeamMemberDialogOpen(true);\n  };\n  \n  const handleCloseAddTeamMemberDialog = () => {\n    setIsAddTeamMemberDialogOpen(false);\n  };\n  \n  const handleTeamMembersChange = (event: SelectChangeEvent<string[]>) => {\n    const { value } = event.target;\n    setSelectedTeamMembers(typeof value === 'string' ? value.split(',') : value);\n  };\n  \n  const handleAddTeamMembers = async () => {\n    if (!id || !user?.token || selectedTeamMembers.length === 0) return;\n    \n    setAddingTeamMembers(true);\n    try {\n      // In a real app, you would call your API to add team members\n      // For now, we'll just simulate success\n      console.log('Adding team members:', selectedTeamMembers);\n      \n      // Simulate API call with a delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Update the UI with the new team members\n      const newTeamMembers = selectedTeamMembers.map(userId => {\n        const foundUser = availableUsers.find(u => u.id === userId);\n        if (foundUser) {\n          // If we found the user in our available users, just use that\n          return foundUser;\n        } else {\n          // Create a minimal valid User if not found\n          return {\n            id: userId,\n            firstName: `User`,\n            lastName: userId,\n            email: `user${userId}@example.com`,\n            role: UserRole.DEVELOPER,\n            department: {\n              id: '0',\n              name: 'Unknown Department',\n              description: 'Unknown department',\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            },\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          } as User;\n        }\n      });\n      \n      // In a real app, you would refetch the project data\n      // For now, we'll just update our mock data\n      mockProject.team = [...mockProject.team, ...newTeamMembers];\n      \n      handleCloseAddTeamMemberDialog();\n    } catch (err) {\n      console.error('Error adding team members:', err);\n    } finally {\n      setAddingTeamMembers(false);\n    }\n  };\n\n  // Handle file selection for upload\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const filesArray = Array.from(e.target.files);\n      setSelectedFiles(prevFiles => [...prevFiles, ...filesArray]);\n      \n      // Reset the input value to allow selecting the same file again\n      e.target.value = '';\n    }\n  };\n\n  // Handle file upload button click\n  const handleUploadClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Remove a selected file before upload\n  const handleRemoveSelectedFile = (index: number) => {\n    setSelectedFiles(prevFiles => prevFiles.filter((_, i) => i !== index));\n  };\n\n  // Upload files to the server\n  const handleUploadFiles = async () => {\n    if (!id || !user?.token || selectedFiles.length === 0) return;\n    \n    setUploadingFile(true);\n    try {\n      // In a real app, you would upload the files to the API\n      // For now, we'll just simulate a delay and add them to our mock data\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Create new mock attachments\n      const newAttachments: Attachment[] = selectedFiles.map((file, index) => ({\n        id: `new-${Date.now()}-${index}`,\n        name: file.name,\n        filename: file.name,\n        type: file.type,\n        size: file.size,\n        url: URL.createObjectURL(file), // In a real app, this would be the URL from the server\n        uploadedBy: {\n          id: user?.id || '0',\n          firstName: user?.firstName || 'Unknown',\n          lastName: user?.lastName || 'User'\n        },\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }));\n      \n      setProjectAttachments([...projectAttachments, ...newAttachments]);\n      setSelectedFiles([]);\n      setIsUploadDialogOpen(false);\n    } catch (err) {\n      console.error('Error uploading files:', err);\n    } finally {\n      setUploadingFile(false);\n    }\n  };\n\n  // Format file size for display\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Get icon for file type\n  const getFileIcon = (fileType: string) => {\n    if (fileType.includes('pdf')) {\n      return <PdfIcon color=\"error\" />;\n    } else if (fileType.includes('image')) {\n      return <ImageIcon color=\"primary\" />;\n    } else if (fileType.includes('word') || fileType.includes('document')) {\n      return <DocIcon color=\"info\" />;\n    }\n    return <FileIcon />;\n  };\n\n  // Handle download attachment\n  const handleDownloadAttachment = (attachment: Attachment) => {\n    // In a real app, you would implement a proper download mechanism\n    window.open(attachment.url, '_blank');\n  };\n\n  // Handle delete attachment\n  const handleDeleteAttachment = async (attachmentId: string) => {\n    if (!id || !user?.token) return;\n    \n    try {\n      // In a real app, you would call the API to delete the attachment\n      // For now, we'll just update our local state\n      setProjectAttachments(prevAttachments => \n        prevAttachments.filter(att => att.id !== attachmentId)\n      );\n    } catch (err) {\n      console.error('Error deleting attachment:', err);\n    }\n  };\n\n  // Update the handleAddTaskOpen function\n  const handleAddTaskOpen = (status?: TaskStatus) => {\n    if (status) {\n      setNewTaskStatus(status);\n    }\n    setIsAddTaskDialogOpen(true);\n  };\n\n  // Add this function along with your other handlers\n  const handleGanttTaskClick = (task: Task) => {\n    console.log('Task clicked from Gantt:', task);\n    // Do something with the task, e.g. show details\n  };\n\n  const handleRequestTask = () => {\n    setIsRequestTaskDialogOpen(true);\n  };\n\n  const handleRequestTaskSubmit = async (taskData: Partial<Task>) => {\n    try {\n      // In a real app, you would send this to a task request endpoint\n      console.log('Task request submitted:', taskData);\n      setIsRequestTaskDialogOpen(false);\n    } catch (err) {\n      console.error('Error submitting task request:', err);\n    }\n  };\n\n  // Fix for the TaskClick handler\n  const handleTaskClick = (taskId: string) => {\n    console.log('Task clicked:', taskId);\n    // Do something with the task, e.g. show details\n  };\n\n  // Add a state for selected task view\n  const [activeTaskView, setActiveTaskView] = useState<'kanban' | 'gantt' | 'mindmap'>('kanban');\n  \n  // Add shared task state to be used across all views\n  const [projectTasks, setProjectTasks] = useState<Task[]>([]);\n\n  // Sync tasks from context to local state\n  useEffect(() => {\n    if (contextTasks) {\n      setProjectTasks(contextTasks);\n      console.log('Task state synchronized across views:', contextTasks);\n    }\n  }, [contextTasks]);\n\n  // Add snackbar state\n  const [snackbar, setSnackbar] = useState<{ open: boolean; message: string; severity: 'success' | 'error' }>({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  // Show snackbar function\n  const showSnackbar = (message: string, severity: 'success' | 'error') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  // Close snackbar function\n  const handleSnackbarClose = () => {\n    setSnackbar(prev => ({ ...prev, open: false }));\n  };\n  \n  // Update the handleTaskAdded function to ensure synchronization\n  const handleTaskAdded = async (newTask: Task) => {\n    try {\n      // Add task through context which will update the global task state\n      await addTask(newTask);\n      showSnackbar('Task added successfully', 'success');\n    } catch (error) {\n      console.error('Error adding task:', error);\n      showSnackbar('Failed to add task', 'error');\n    }\n  };\n\n  // Create a wrapper function that matches the expected signature for AddTaskDialog\n  const handleTaskAddedWrapper = (success: boolean) => {\n    if (success) {\n      showSnackbar('Task added successfully', 'success');\n    } else {\n      showSnackbar('Failed to add task', 'error');\n    }\n  };\n\n  // Handle log pagination\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Get action color\n  const getActionColor = (action: AuditAction) => {\n    switch(action) {\n      case AuditAction.CREATE: return 'success';\n      case AuditAction.UPDATE: return 'primary';\n      case AuditAction.DELETE: return 'error';\n      case AuditAction.APPROVE: return 'success';\n      case AuditAction.REJECT: return 'error';\n      case AuditAction.SUBMIT: return 'info';\n      default: return 'default';\n    }\n  };\n\n  // Change request handlers\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [changeRequestType, setChangeRequestType] = useState<string | null>(null);\n  const openChangeRequestMenu = Boolean(anchorEl);\n  \n  const handleChangeRequestMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleChangeRequestMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeRequestOpen = (type: string | null = null) => {\n    setChangeRequestType(type);\n    setIsChangeRequestDialogOpen(true);\n    handleChangeRequestMenuClose();\n  };\n\n  const handleChangeRequestClose = () => {\n    setIsChangeRequestDialogOpen(false);\n  };\n\n  const handleChangeRequestSubmitted = () => {\n    showSnackbar('Change request submitted successfully!', 'success');\n  };\n\n  // Add state for change request menu and dialog\n  const [isChangeRequestDialogOpen, setIsChangeRequestDialogOpen] = useState(false);\n\n  // Add state for audit results\n  const [auditResult, setAuditResult] = useState<AuditResult | null>(null);\n\n  // Run audit on page load to verify compliance with ClientTerms\n  useEffect(() => {\n    // Only run audit for admin users\n    if (user?.role === UserRole.ADMIN) {\n      const result = runFullAudit();\n      setAuditResult(result);\n      if (!result.passed) {\n        showSnackbar('Audit found compliance issues. Check the console for details.', 'error');\n        console.warn('Audit results:', result);\n      }\n    }\n  }, [user?.role]);\n\n  return (\n    <Box>\n      {auditResult && !auditResult.passed && (\n        <Alert \n          severity=\"warning\" \n          sx={{ mb: 2 }}\n          action={\n            <Button color=\"inherit\" size=\"small\" onClick={() => console.log('Audit details:', auditResult)}>\n              View Details\n            </Button>\n          }\n        >\n          This project has compliance issues with client terms. Please review and address them.\n        </Alert>\n      )}\n      <Button \n        startIcon={<BackIcon />} \n        onClick={handleGoBack} \n        sx={{ mb: 2 }}\n      >\n        Back to Projects\n      </Button>\n\n      <Box sx={{ mb: 3 }}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <Typography variant=\"h4\" component=\"h1\">\n              {mockProject.name}\n            </Typography>\n            <Tooltip title={`Status: ${getStatusLabel(mockProject.status)}${isOverdue ? ' (Overdue)' : ''}`}>\n              <Chip \n                label={getStatusLabel(mockProject.status)} \n                color={getStatusColor(mockProject.status, mockProject.endDate) as any}\n                sx={{ fontWeight: 'bold' }}\n              />\n            </Tooltip>\n          </Stack>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">Project Details</Typography>\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              {userCanManageProjects && (\n                <>\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<ChangeCircleIcon />}\n                    onClick={handleChangeRequestMenuOpen}\n                  >\n                    Change Request\n                  </Button>\n                  <Menu\n                    anchorEl={anchorEl}\n                    open={openChangeRequestMenu}\n                    onClose={handleChangeRequestMenuClose}\n                    PaperProps={{\n                      elevation: 3,\n                      sx: { minWidth: 200 }\n                    }}\n                  >\n                    <MenuItem onClick={() => handleChangeRequestOpen('SCHEDULE')}>\n                      <ListItemIcon>\n                        <EventIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Extend Project</ListItemText>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleChangeRequestOpen('CLOSURE')}>\n                      <ListItemIcon>\n                        <CloseIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Close Project</ListItemText>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleChangeRequestOpen('SCOPE')}>\n                      <ListItemIcon>\n                        <SubjectIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Change Project Scope</ListItemText>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleChangeRequestOpen('BUDGET')}>\n                      <ListItemIcon>\n                        <AttachMoneyIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Change Project Cost</ListItemText>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleChangeRequestOpen('RESOURCE')}>\n                      <ListItemIcon>\n                        <PersonIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Delegate Project</ListItemText>\n                    </MenuItem>\n                    <MenuItem onClick={() => handleChangeRequestOpen('OTHER')}>\n                      <ListItemIcon>\n                        <MoreHorizIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText>Other Changes</ListItemText>\n                    </MenuItem>\n                  </Menu>\n                </>\n              )}\n              {userCanAddTasks ? (\n                <Button\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={() => setIsAddTaskDialogOpen(true)}\n                >\n                  Add Task\n                </Button>\n              ) : userCanRequestTasks ? (\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<RequestIcon />}\n                  onClick={handleRequestTask}\n                >\n                  Request Task\n                </Button>\n              ) : null}\n            </Box>\n          </Box>\n        </Stack>\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 1 }}>\n          {mockProject.description}\n        </Typography>\n      </Box>\n\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, mb: 3 }}>\n        <Box sx={{ flex: '1 1 200px' }}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">Manager</Typography>\n            <Typography variant=\"body1\">{mockProject.projectManager.firstName} {mockProject.projectManager.lastName}</Typography>\n          </Paper>\n        </Box>\n        <Box sx={{ flex: '1 1 200px' }}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">Department</Typography>\n            <Typography variant=\"body1\">{mockProject.department.name}</Typography>\n          </Paper>\n        </Box>\n        <Box sx={{ flex: '1 1 200px' }}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">Timeline</Typography>\n            <Typography variant=\"body1\">\n              {new Date(mockProject.startDate).toLocaleDateString()} - {new Date(mockProject.endDate).toLocaleDateString()}\n            </Typography>\n          </Paper>\n        </Box>\n        <Box sx={{ flex: '1 1 200px' }}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">Completion</Typography>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n              <Typography variant=\"body1\">{progress}%</Typography>\n              {isOverdue && (\n                <Chip label=\"Overdue\" size=\"small\" color=\"error\" />\n              )}\n            </Stack>\n          </Paper>\n        </Box>\n      </Box>\n\n      <Paper sx={{ width: '100%', mb: 3 }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"project tabs\">\n            <Tab icon={<CalendarIcon />} label=\"Overview\" {...a11yProps(0)} />\n            <Tab icon={<TeamIcon />} label=\"Team\" {...a11yProps(1)} />\n            <Tab icon={<KanbanIcon />} label=\"Kanban\" {...a11yProps(2)} />\n            <Tab icon={<GanttIcon />} label=\"Gantt Chart\" {...a11yProps(3)} />\n            <Tab icon={<MindMapIcon />} label=\"Mind Map\" {...a11yProps(4)} />\n            <Tab icon={<UploadIcon />} label=\"Attachments\" {...a11yProps(5)} />\n            <Tab icon={<SummarizeIcon />} label=\"Weekly Updates\" {...a11yProps(6)} />\n            <Tab icon={<LogIcon />} label=\"Logs\" {...a11yProps(7)} />\n          </Tabs>\n        </Box>\n        \n        <TabPanel value={tabValue} index={0}>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3 }}>\n            <Box sx={{ flex: '1 1 400px' }}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>Project Overview</Typography>\n                  <Divider sx={{ mb: 2 }} />\n                  <Stack spacing={2}>\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Budget</Typography>\n                      <Typography variant=\"body1\">${mockProject.budget.toLocaleString()}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Actual Cost</Typography>\n                      <Typography variant=\"body1\">${mockProject.actualCost.toLocaleString()}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Remaining</Typography>\n                      <Typography variant=\"body1\">${(mockProject.budget - mockProject.actualCost).toLocaleString()}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"subtitle2\" color=\"text.secondary\">Days Remaining</Typography>\n                      <Typography variant=\"body1\">{daysRemaining} days</Typography>\n                    </Box>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Box>\n            <Box sx={{ flex: '1 1 400px' }}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>Recent Tasks</Typography>\n                  <Divider sx={{ mb: 2 }} />\n                  <Stack spacing={2}>\n                    {mockTasks.slice(0, 3).map(task => (\n                      <Box key={task.id}>\n                        <Typography variant=\"subtitle2\">{task.title}</Typography>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            Assigned to: {task.assignee}\n                          </Typography>\n                          <Chip \n                            label={task.status.replace('_', ' ')} \n                            size=\"small\"\n                            color={\n                              task.dueDate && new Date(task.dueDate) < new Date() \n                                ? 'error' \n                                : task.status === 'DONE' \n                                  ? 'success' \n                                  : task.status === 'IN_PROGRESS' \n                                    ? 'primary' \n                                    : 'default'\n                            }\n                          />\n                        </Box>\n                      </Box>\n                    ))}\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Box>\n          </Box>\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={1}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">Project Team</Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<PersonAddIcon />}\n              onClick={handleOpenAddTeamMemberDialog}\n            >\n              Add Team Member\n            </Button>\n          </Box>\n          <Divider sx={{ mb: 3 }} />\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n            {(mockProject.team || []).map((user) => (\n              <Box key={user.id} sx={{ width: { xs: '100%', sm: '48%', md: '31%' } }}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\">{user.firstName} {user.lastName}</Typography>\n                    <Typography color=\"text.secondary\">{user.role} - {user.department.name}</Typography>\n                  </CardContent>\n                </Card>\n              </Box>\n            ))}\n          </Box>\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={2}>\n          {tasksLoading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '300px' }}>\n              <CircularProgress />\n            </Box>\n          ) : error ? (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              <AlertTitle>Error</AlertTitle>\n              {error}\n            </Alert>\n          ) : (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>Kanban Board</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                Manage tasks by dragging them between the columns to update their status.\n              </Typography>\n              \n              <KanbanBoard\n                {...{\n                  project: convertToFullProject(mockProject),\n                  tasks: contextTasks,\n                  onTaskUpdate: handleMoveTask,\n                  onTaskClick: handleTaskClick,\n                  onAddTask: userCanAddTasks ? () => setIsAddTaskDialogOpen(true) : undefined,\n                  onRequestTask: userCanRequestTasks ? handleRequestTask : undefined\n                } as CustomKanbanBoardProps}\n              />\n            </Box>\n          )}\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={3}>\n          {tasksLoading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '300px' }}>\n              <CircularProgress />\n            </Box>\n          ) : error ? (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              <AlertTitle>Error</AlertTitle>\n              {error}\n            </Alert>\n          ) : ganttError ? (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              <AlertTitle>Error</AlertTitle>\n              {ganttError}\n              <Box sx={{ mt: 2 }}>\n                <Button variant=\"contained\" onClick={() => setGanttError(null)}>\n                  Try Again\n                </Button>\n              </Box>\n            </Alert>\n          ) : (\n            <Box sx={{ height: '600px' }}>\n              <Typography variant=\"h6\" gutterBottom>Gantt Chart</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                View tasks in a timeline format showing dependencies and milestones.\n              </Typography>\n              \n              <ErrorBoundary onError={handleGanttError}>\n                <Box sx={{ position: 'relative' }}>\n                  <GanttChart\n                    project={convertToFullProject(mockProject)}\n                    tasks={contextTasks}\n                    onTaskClick={handleGanttTaskClick}\n                  />\n                </Box>\n              </ErrorBoundary>\n            </Box>\n          )}\n        </TabPanel>\n        \n        <TabPanel value={tabValue} index={4}>\n          {tasksLoading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '300px' }}>\n              <CircularProgress />\n            </Box>\n          ) : error ? (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              <AlertTitle>Error</AlertTitle>\n              {error}\n            </Alert>\n          ) : (\n            <Box sx={{ height: '600px' }}>\n              <Typography variant=\"h6\" gutterBottom>Mind Map</Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                Visualize project structure, tasks, and relationships in a mind map.\n              </Typography>\n              \n              <MindMapView \n                project={convertToFullProject(mockProject)}\n                tasks={contextTasks}\n              />\n            </Box>\n          )}\n        </TabPanel>\n\n        {/* Attachments Tab */}\n        <TabPanel value={tabValue} index={5}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Typography variant=\"h6\">Project Attachments</Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<UploadIcon />}\n              onClick={() => setIsUploadDialogOpen(true)}\n            >\n              Upload Files\n            </Button>\n          </Box>\n\n          {projectAttachments.length === 0 ? (\n            <Paper sx={{ p: 3, textAlign: 'center' }}>\n              <Typography color=\"text.secondary\">\n                No attachments have been uploaded for this project\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                startIcon={<UploadIcon />}\n                onClick={() => setIsUploadDialogOpen(true)}\n                sx={{ mt: 2 }}\n              >\n                Upload Your First File\n              </Button>\n            </Paper>\n          ) : (\n            <Box>\n              <Paper>\n                <List>\n                  {projectAttachments.map((attachment) => (\n                    <ListItem\n                      key={attachment.id}\n                      secondaryAction={\n                        <Box>\n                          <IconButton \n                            aria-label=\"download\" \n                            onClick={() => handleDownloadAttachment(attachment)}\n                            color=\"primary\"\n                          >\n                            <DownloadIcon />\n                          </IconButton>\n                          <IconButton \n                            aria-label=\"delete\" \n                            onClick={() => handleDeleteAttachment(attachment.id)}\n                            color=\"error\"\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Box>\n                      }\n                    >\n                      <ListItemIcon>\n                        {getFileIcon(attachment.type)}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={attachment.filename}\n                        secondary={\n                          <>\n                            <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\">\n                              {formatFileSize(attachment.size)} • Uploaded by {attachment.uploadedBy.firstName} {attachment.uploadedBy.lastName} • {new Date(attachment.createdAt).toLocaleDateString()}\n                            </Typography>\n                          </>\n                        }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Box>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={6}>\n          <WeeklyUpdates projectId={mockProject.id} />\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={7}>\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>Project Activity Logs</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Track all changes and activities related to this project.\n            </Typography>\n          </Box>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"project logs table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Action</TableCell>\n                  <TableCell>Details</TableCell>\n                  <TableCell>User</TableCell>\n                  <TableCell>Date & Time</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {projectLogs\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((log) => (\n                    <TableRow key={log.id} hover>\n                      <TableCell>\n                        <Chip\n                          label={log.action.replace('_', ' ')}\n                          size=\"small\"\n                          color={getActionColor(log.action) as any}\n                        />\n                      </TableCell>\n                      <TableCell>{log.details}</TableCell>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                          <Avatar sx={{ width: 24, height: 24, mr: 1 }}>\n                            {log.user.firstName.charAt(0)}\n                            {log.user.lastName.charAt(0)}\n                          </Avatar>\n                          {log.user.firstName} {log.user.lastName}\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        {new Date(log.timestamp).toLocaleDateString()} {new Date(log.timestamp).toLocaleTimeString()}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                {projectLogs.length === 0 && (\n                  <TableRow>\n                    <TableCell colSpan={4} align=\"center\">\n                      <Typography variant=\"body1\" sx={{ py: 2 }}>\n                        No activity logs found for this project\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={projectLogs.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </TableContainer>\n        </TabPanel>\n      </Paper>\n\n      <AddTaskDialog\n        open={isAddTaskDialogOpen}\n        onClose={() => setIsAddTaskDialogOpen(false)}\n        projectId={mockProject.id}\n        initialStatus={newTaskStatus}\n        onTaskAdded={handleTaskAddedWrapper}\n        projectUsers={mockProject.team}\n      />\n\n      {/* Add Team Member Dialog */}\n      <Dialog open={isAddTeamMemberDialogOpen} onClose={handleCloseAddTeamMemberDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Add Team Members</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 2 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"add-team-members-label\">Select Users</InputLabel>\n              <Select\n                labelId=\"add-team-members-label\"\n                id=\"add-team-members\"\n                multiple\n                value={selectedTeamMembers}\n                onChange={handleTeamMembersChange}\n                input={<OutlinedInput label=\"Select Users\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((userId) => {\n                      const user = availableUsers.find(u => u.id === userId);\n                      return (\n                        <Chip \n                          key={userId} \n                          label={user ? `${user.firstName} ${user.lastName}` : userId} \n                          size=\"small\" \n                        />\n                      );\n                    })}\n                  </Box>\n                )}\n              >\n                {availableUsers.map((user) => (\n                  <MenuItem key={user.id} value={user.id}>\n                    <Checkbox checked={selectedTeamMembers.indexOf(user.id) > -1} />\n                    <ListItemText \n                      primary={`${user.firstName} ${user.lastName}`} \n                      secondary={`${user.role} - ${user.department.name}`} \n                    />\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>\n                Select users to add to the project team\n              </FormHelperText>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseAddTeamMemberDialog}>Cancel</Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleAddTeamMembers}\n            disabled={selectedTeamMembers.length === 0 || addingTeamMembers}\n          >\n            {addingTeamMembers ? 'Adding...' : 'Add to Team'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Upload Files Dialog */}\n      <Dialog open={isUploadDialogOpen} onClose={() => !uploadingFile && setIsUploadDialogOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Upload Project Files</DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 2 }}>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              style={{ display: 'none' }}\n              onChange={handleFileChange}\n              multiple\n            />\n            \n            <Paper\n              variant=\"outlined\"\n              sx={{\n                p: 3,\n                mb: 3,\n                textAlign: 'center',\n                cursor: 'pointer',\n                backgroundColor: 'rgba(0, 0, 0, 0.02)',\n              }}\n              onClick={handleUploadClick}\n            >\n              <UploadIcon fontSize=\"large\" color=\"primary\" />\n              <Typography variant=\"body1\" sx={{ mt: 1 }}>\n                Click to select files or drag and drop files here\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                Supported file types: PDF, DOCX, XLSX, JPG, PNG, and more\n              </Typography>\n            </Paper>\n            \n            {selectedFiles.length > 0 && (\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Selected Files ({selectedFiles.length})\n                </Typography>\n                <List>\n                  {selectedFiles.map((file, index) => (\n                    <ListItem\n                      key={index}\n                      secondaryAction={\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"remove\"\n                          onClick={() => handleRemoveSelectedFile(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      }\n                    >\n                      <ListItemIcon>\n                        {getFileIcon(file.type)}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={file.name}\n                        secondary={formatFileSize(file.size)}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsUploadDialogOpen(false)} disabled={uploadingFile}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleUploadFiles}\n            variant=\"contained\"\n            disabled={selectedFiles.length === 0 || uploadingFile}\n            startIcon={uploadingFile ? <CircularProgress size={24} /> : <UploadIcon />}\n          >\n            {uploadingFile ? 'Uploading...' : 'Upload Files'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <RequestTaskDialog\n        open={isRequestTaskDialogOpen}\n        onClose={() => setIsRequestTaskDialogOpen(false)}\n        projectId={mockProject.id}\n      />\n\n      {/* Change Request Dialog */}\n      <ChangeRequestDialog\n        open={isChangeRequestDialogOpen}\n        onClose={handleChangeRequestClose}\n        projectId={mockProject.id}\n        onSubmitted={handleChangeRequestSubmitted}\n        changeRequestType={changeRequestType}\n      />\n\n      {/* Add Snackbar for notifications */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert \n          onClose={handleSnackbarClose} \n          severity={snackbar.severity}\n          variant=\"filled\"\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\n// Create mock components for missing imports\nconst RequestTaskDialog = ({ open, onClose, projectId }: { open: boolean, onClose: () => void, projectId: string }) => (\n  <Dialog open={open} onClose={onClose}>\n    <DialogTitle>Request Task (Mock)</DialogTitle>\n    <DialogContent>\n      <Typography>This is a mock component for RequestTaskDialog</Typography>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose}>Close</Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default ProjectDetailPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}