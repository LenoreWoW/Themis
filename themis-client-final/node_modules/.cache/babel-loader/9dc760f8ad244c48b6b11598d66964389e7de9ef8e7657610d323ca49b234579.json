{"ast":null,"code":"import{ProjectStatus,ProjectPriority,TaskStatus,UserRole,TaskPriority,ProjectTemplateType}from'../types';// Mock Departments\nexport const mockDepartments=[{id:'d1',name:'Information Technology',description:'Manages all IT infrastructure and software development',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d2',name:'Marketing',description:'Handles all marketing campaigns and brand management',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d3',name:'Finance',description:'Manages company finances and budgeting',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d4',name:'Operations',description:'Oversees daily business operations and logistics',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d5',name:'Human Resources',description:'Responsible for recruitment and employee management',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d6',name:'Research & Development',description:'Focuses on innovation and new product development',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d7',name:'Customer Support',description:'Provides assistance and technical support to customers',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'},{id:'d8',name:'Legal',description:'Handles legal matters and compliance',createdAt:'2023-01-01T00:00:00Z',updatedAt:'2023-01-01T00:00:00Z'}];// Mock Users\nexport const mockUsers=[{id:'u1',firstName:'John',lastName:'Smith',email:'john.smith@themis.com',role:UserRole.ADMIN,department:mockDepartments[0],username:'john.smith',isActive:true,createdAt:'2023-01-15T08:30:00Z',updatedAt:'2023-06-10T14:45:00Z'},{id:'u2',firstName:'Sarah',lastName:'Johnson',email:'sarah.johnson@themis.com',role:UserRole.PROJECT_MANAGER,department:mockDepartments[0],username:'sarah.johnson',isActive:true,createdAt:'2023-01-20T09:15:00Z',updatedAt:'2023-05-25T11:30:00Z'},{id:'u3',firstName:'Michael',lastName:'Chen',email:'michael.chen@themis.com',role:UserRole.DEVELOPER,department:mockDepartments[0],username:'michael.chen',isActive:true,createdAt:'2023-02-05T10:45:00Z',updatedAt:'2023-06-15T16:20:00Z'},{id:'u4',firstName:'Emma',lastName:'Garcia',email:'emma.garcia@themis.com',role:UserRole.DEPARTMENT_DIRECTOR,department:mockDepartments[1],username:'emma.garcia',isActive:true,createdAt:'2023-01-10T08:00:00Z',updatedAt:'2023-06-05T13:15:00Z'},{id:'u5',firstName:'David',lastName:'Wilson',email:'david.wilson@themis.com',role:UserRole.PROJECT_MANAGER,department:mockDepartments[1],username:'david.wilson',isActive:true,createdAt:'2023-02-10T11:20:00Z',updatedAt:'2023-05-30T15:45:00Z'},{id:'u6',firstName:'Sophia',lastName:'Kim',email:'sophia.kim@themis.com',role:UserRole.DESIGNER,department:mockDepartments[1],username:'sophia.kim',isActive:true,createdAt:'2023-03-01T09:30:00Z',updatedAt:'2023-06-20T10:10:00Z'},{id:'u7',firstName:'Robert',lastName:'Taylor',email:'robert.taylor@themis.com',role:UserRole.EXECUTIVE,department:mockDepartments[2],username:'robert.taylor',isActive:true,createdAt:'2023-01-05T08:15:00Z',updatedAt:'2023-05-20T14:00:00Z'},{id:'u8',firstName:'Olivia',lastName:'Martinez',email:'olivia.martinez@themis.com',role:UserRole.PROJECT_MANAGER,department:mockDepartments[2],username:'olivia.martinez',isActive:true,createdAt:'2023-02-15T10:00:00Z',updatedAt:'2023-06-25T11:45:00Z'},{id:'u9',firstName:'James',lastName:'Brown',email:'james.brown@themis.com',role:UserRole.DEPARTMENT_DIRECTOR,department:mockDepartments[3],username:'james.brown',isActive:true,createdAt:'2023-01-25T09:45:00Z',updatedAt:'2023-06-01T15:30:00Z'},{id:'u10',firstName:'Emily',lastName:'Davis',email:'emily.davis@themis.com',role:UserRole.MANAGER,department:mockDepartments[3],username:'emily.davis',isActive:true,createdAt:'2023-03-05T10:15:00Z',updatedAt:'2023-06-30T09:20:00Z'},{id:'u11',firstName:'Daniel',lastName:'Rodriguez',email:'daniel.rodriguez@themis.com',role:UserRole.DEVELOPER,department:mockDepartments[0],username:'daniel.rodriguez',isActive:true,createdAt:'2023-02-20T14:20:00Z',updatedAt:'2023-06-12T11:30:00Z'},{id:'u12',firstName:'Ava',lastName:'Thompson',email:'ava.thompson@themis.com',role:UserRole.QA,department:mockDepartments[0],username:'ava.thompson',isActive:true,createdAt:'2023-03-15T09:40:00Z',updatedAt:'2023-07-01T10:15:00Z'},{id:'u13',firstName:'Mohammed',lastName:'Al-Farsi',email:'mohammed.alfarsi@themis.com',role:UserRole.SUB_PMO,department:mockDepartments[5],username:'mohammed.alfarsi',isActive:true,createdAt:'2023-01-30T12:00:00Z',updatedAt:'2023-06-18T16:45:00Z'},{id:'u14',firstName:'Fatima',lastName:'Al-Said',email:'fatima.alsaid@themis.com',role:UserRole.MAIN_PMO,department:mockDepartments[5],username:'fatima.alsaid',isActive:true,createdAt:'2023-01-18T11:10:00Z',updatedAt:'2023-05-22T14:30:00Z'},{id:'u15',firstName:'Ahmed',lastName:'Hassan',email:'ahmed.hassan@themis.com',role:UserRole.TEAM_LEAD,department:mockDepartments[0],username:'ahmed.hassan',isActive:true,createdAt:'2023-02-08T10:30:00Z',updatedAt:'2023-06-14T15:00:00Z'}];// Mock Projects\nexport const mockProjects=[{id:'p1',name:'Enterprise Resource Planning System',description:'Implement a new ERP system to improve business processes and operations.',department:mockDepartments[0],// IT Department\ndepartmentId:mockDepartments[0].id,status:ProjectStatus.IN_PROGRESS,priority:ProjectPriority.HIGH,startDate:'2023-05-01T00:00:00Z',endDate:'2023-10-31T00:00:00Z',budget:250000,actualCost:120000,projectManager:mockUsers[1],// Sarah Johnson (Project Manager)\nprojectManagerId:mockUsers[1].id,teamMembers:[mockUsers[2],mockUsers[10],mockUsers[11]],// Michael Chen, Daniel Rodriguez, Ava Thompson\nprogress:45,createdAt:'2023-04-15T00:00:00Z',updatedAt:'2023-06-20T00:00:00Z',templateType:ProjectTemplateType.ERP},{id:'p2',name:'Marketing Campaign for Q3',description:'Plan and execute marketing campaign for the third quarter focusing on new product launch.',department:mockDepartments[1],// Marketing Department\ndepartmentId:mockDepartments[1].id,status:ProjectStatus.PLANNING,priority:ProjectPriority.MEDIUM,startDate:'2023-07-01T00:00:00Z',endDate:'2023-09-30T00:00:00Z',budget:100000,projectManager:mockUsers[4],// David Wilson (Project Manager)\nprojectManagerId:mockUsers[4].id,teamMembers:[mockUsers[5]],// Sophia Kim (Designer)\nprogress:15,createdAt:'2023-06-10T00:00:00Z',updatedAt:'2023-06-15T00:00:00Z',templateType:ProjectTemplateType.MARKETING},{id:'p3',name:'Financial System Upgrade',description:'Upgrade the financial reporting system to comply with new regulations.',department:mockDepartments[2],// Finance Department\ndepartmentId:mockDepartments[2].id,status:ProjectStatus.ON_HOLD,priority:ProjectPriority.CRITICAL,startDate:'2023-04-01T00:00:00Z',endDate:'2023-08-31T00:00:00Z',budget:180000,actualCost:65000,projectManager:mockUsers[7],// Olivia Martinez (Project Manager)\nprojectManagerId:mockUsers[7].id,teamMembers:[mockUsers[2],mockUsers[6]],// Michael Chen (Developer), Robert Taylor (Executive)\nprogress:30,createdAt:'2023-03-15T00:00:00Z',updatedAt:'2023-06-05T00:00:00Z',templateType:ProjectTemplateType.FINANCE},{id:'p4',name:'Operations Optimization',description:'Optimize warehouse operations to improve efficiency and reduce costs.',department:mockDepartments[3],// Operations Department\ndepartmentId:mockDepartments[3].id,status:ProjectStatus.COMPLETED,priority:ProjectPriority.HIGH,startDate:'2023-01-15T00:00:00Z',endDate:'2023-05-15T00:00:00Z',budget:120000,actualCost:118000,projectManager:mockUsers[9],// Emily Davis (Manager)\nprojectManagerId:mockUsers[9].id,teamMembers:[mockUsers[8]],// James Brown (Department Director)\nprogress:100,createdAt:'2023-01-10T00:00:00Z',updatedAt:'2023-05-20T00:00:00Z',templateType:ProjectTemplateType.SUPPLY_CHAIN},{id:'p5',name:'Website Redesign',description:'Completely redesign the company website to improve user experience and conversion rates.',department:mockDepartments[1],// Marketing Department\ndepartmentId:mockDepartments[1].id,status:ProjectStatus.IN_PROGRESS,priority:ProjectPriority.MEDIUM,startDate:'2023-03-01T00:00:00Z',endDate:'2023-07-31T00:00:00Z',budget:75000,actualCost:40000,projectManager:mockUsers[4],// David Wilson (Project Manager)\nprojectManagerId:mockUsers[4].id,teamMembers:[mockUsers[5],mockUsers[2]],// Sophia Kim (Designer), Michael Chen (Developer)\nprogress:60,createdAt:'2023-02-15T00:00:00Z',updatedAt:'2023-06-10T00:00:00Z',templateType:ProjectTemplateType.WEBSITE,projectDependencies:['p2'],// Depends on Marketing Campaign\ndependentProjects:[]// No projects depend on this one yet\n}];// Empty Tasks\nexport const mockTasks=[];// Empty Risks\nexport const mockRisks=[];// Empty Meetings\nexport const mockMeetings=[];// Empty Issues\nexport const mockIssues=[];// Helper function to generate random activities - returns empty array\nexport const generateRandomActivities=count=>{return[];};// Empty activities\nexport const mockActivities=[];// Empty change requests\nexport const mockChangeRequests=[];// Empty task requests\nexport const mockTaskRequests=[];// Create default tasks for a given project\nexport const createDefaultTasks=projectId=>{return[{id:`t1-${projectId}`,title:'Initial planning',description:'Define project scope and deliverables',status:TaskStatus.DONE,priority:TaskPriority.HIGH,startDate:'2023-05-01T09:00:00Z',dueDate:'2023-05-05T17:00:00Z',projectId:projectId,assignee:mockUsers[1],// Sarah Johnson (Project Manager)\nproject:{},// Will be filled by the caller\ncreatedAt:'2023-04-28T14:30:00Z',updatedAt:'2023-05-05T16:45:00Z'},{id:`t2-${projectId}`,title:'Requirements gathering',description:'Collect and document all requirements from stakeholders',status:TaskStatus.DONE,priority:TaskPriority.HIGH,startDate:'2023-05-08T09:00:00Z',dueDate:'2023-05-12T17:00:00Z',projectId:projectId,assignee:mockUsers[1],// Sarah Johnson (Project Manager)\nproject:{},// Will be filled by the caller\ncreatedAt:'2023-05-05T11:20:00Z',updatedAt:'2023-05-12T15:30:00Z'},{id:`t3-${projectId}`,title:'Design system architecture',description:'Create system architecture diagrams and documentation',status:TaskStatus.IN_PROGRESS,priority:TaskPriority.MEDIUM,startDate:'2023-05-15T09:00:00Z',dueDate:'2023-05-19T17:00:00Z',projectId:projectId,assignee:mockUsers[2],// Michael Chen (Developer)\nproject:{},// Will be filled by the caller\ncreatedAt:'2023-05-12T16:00:00Z',updatedAt:'2023-05-17T10:15:00Z'},{id:`t4-${projectId}`,title:'UI/UX Design',description:'Create wireframes and high-fidelity designs',status:TaskStatus.TODO,priority:TaskPriority.MEDIUM,startDate:'2023-05-22T09:00:00Z',dueDate:'2023-05-31T17:00:00Z',projectId:projectId,assignee:mockUsers[5],// Sophia Kim (Designer)\nproject:{},// Will be filled by the caller\ncreatedAt:'2023-05-17T14:45:00Z',updatedAt:'2023-05-17T14:45:00Z'},{id:`t5-${projectId}`,title:'Backend development',description:'Implement API endpoints and database models',status:TaskStatus.TODO,priority:TaskPriority.HIGH,startDate:'2023-06-01T09:00:00Z',dueDate:'2023-06-14T17:00:00Z',projectId:projectId,assignee:mockUsers[2],// Michael Chen (Developer)\nproject:{},// Will be filled by the caller\ncreatedAt:'2023-05-20T09:30:00Z',updatedAt:'2023-05-20T09:30:00Z'}];};// Helper function to get project for task\nexport const getProjectForTask=(task,projects)=>{return projects.find(project=>project.id===task.projectId);};// Empty Notifications\nexport const mockNotifications=[];","map":{"version":3,"names":["ProjectStatus","ProjectPriority","TaskStatus","UserRole","TaskPriority","ProjectTemplateType","mockDepartments","id","name","description","createdAt","updatedAt","mockUsers","firstName","lastName","email","role","ADMIN","department","username","isActive","PROJECT_MANAGER","DEVELOPER","DEPARTMENT_DIRECTOR","DESIGNER","EXECUTIVE","MANAGER","QA","SUB_PMO","MAIN_PMO","TEAM_LEAD","mockProjects","departmentId","status","IN_PROGRESS","priority","HIGH","startDate","endDate","budget","actualCost","projectManager","projectManagerId","teamMembers","progress","templateType","ERP","PLANNING","MEDIUM","MARKETING","ON_HOLD","CRITICAL","FINANCE","COMPLETED","SUPPLY_CHAIN","WEBSITE","projectDependencies","dependentProjects","mockTasks","mockRisks","mockMeetings","mockIssues","generateRandomActivities","count","mockActivities","mockChangeRequests","mockTaskRequests","createDefaultTasks","projectId","title","DONE","dueDate","assignee","project","TODO","getProjectForTask","task","projects","find","mockNotifications"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/services/mockData.ts"],"sourcesContent":["import { Project, User, Department, ProjectStatus, ProjectPriority, Task, TaskStatus, Risk, Meeting, Issue, UserRole, RiskStatus, IssueStatus, RiskImpact, TaskRequestStatus, MeetingStatus, TaskPriority, ProjectTemplateType } from '../types';\n\n// Mock Departments\nexport const mockDepartments: Department[] = [\n  { \n    id: 'd1', \n    name: 'Information Technology', \n    description: 'Manages all IT infrastructure and software development',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd2', \n    name: 'Marketing', \n    description: 'Handles all marketing campaigns and brand management',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd3', \n    name: 'Finance', \n    description: 'Manages company finances and budgeting',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd4', \n    name: 'Operations', \n    description: 'Oversees daily business operations and logistics',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd5', \n    name: 'Human Resources', \n    description: 'Responsible for recruitment and employee management',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd6', \n    name: 'Research & Development', \n    description: 'Focuses on innovation and new product development',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd7', \n    name: 'Customer Support', \n    description: 'Provides assistance and technical support to customers',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  },\n  { \n    id: 'd8', \n    name: 'Legal', \n    description: 'Handles legal matters and compliance',\n    createdAt: '2023-01-01T00:00:00Z', \n    updatedAt: '2023-01-01T00:00:00Z' \n  }\n];\n\n// Mock Users\nexport const mockUsers: User[] = [\n  {\n    id: 'u1',\n    firstName: 'John',\n    lastName: 'Smith',\n    email: 'john.smith@themis.com',\n    role: UserRole.ADMIN,\n    department: mockDepartments[0],\n    username: 'john.smith',\n    isActive: true,\n    createdAt: '2023-01-15T08:30:00Z',\n    updatedAt: '2023-06-10T14:45:00Z'\n  },\n  {\n    id: 'u2',\n    firstName: 'Sarah',\n    lastName: 'Johnson',\n    email: 'sarah.johnson@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: mockDepartments[0],\n    username: 'sarah.johnson',\n    isActive: true,\n    createdAt: '2023-01-20T09:15:00Z',\n    updatedAt: '2023-05-25T11:30:00Z'\n  },\n  {\n    id: 'u3',\n    firstName: 'Michael',\n    lastName: 'Chen',\n    email: 'michael.chen@themis.com',\n    role: UserRole.DEVELOPER,\n    department: mockDepartments[0],\n    username: 'michael.chen',\n    isActive: true,\n    createdAt: '2023-02-05T10:45:00Z',\n    updatedAt: '2023-06-15T16:20:00Z'\n  },\n  {\n    id: 'u4',\n    firstName: 'Emma',\n    lastName: 'Garcia',\n    email: 'emma.garcia@themis.com',\n    role: UserRole.DEPARTMENT_DIRECTOR,\n    department: mockDepartments[1],\n    username: 'emma.garcia',\n    isActive: true,\n    createdAt: '2023-01-10T08:00:00Z',\n    updatedAt: '2023-06-05T13:15:00Z'\n  },\n  {\n    id: 'u5',\n    firstName: 'David',\n    lastName: 'Wilson',\n    email: 'david.wilson@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: mockDepartments[1],\n    username: 'david.wilson',\n    isActive: true,\n    createdAt: '2023-02-10T11:20:00Z',\n    updatedAt: '2023-05-30T15:45:00Z'\n  },\n  {\n    id: 'u6',\n    firstName: 'Sophia',\n    lastName: 'Kim',\n    email: 'sophia.kim@themis.com',\n    role: UserRole.DESIGNER,\n    department: mockDepartments[1],\n    username: 'sophia.kim',\n    isActive: true,\n    createdAt: '2023-03-01T09:30:00Z',\n    updatedAt: '2023-06-20T10:10:00Z'\n  },\n  {\n    id: 'u7',\n    firstName: 'Robert',\n    lastName: 'Taylor',\n    email: 'robert.taylor@themis.com',\n    role: UserRole.EXECUTIVE,\n    department: mockDepartments[2],\n    username: 'robert.taylor',\n    isActive: true,\n    createdAt: '2023-01-05T08:15:00Z',\n    updatedAt: '2023-05-20T14:00:00Z'\n  },\n  {\n    id: 'u8',\n    firstName: 'Olivia',\n    lastName: 'Martinez',\n    email: 'olivia.martinez@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: mockDepartments[2],\n    username: 'olivia.martinez',\n    isActive: true,\n    createdAt: '2023-02-15T10:00:00Z',\n    updatedAt: '2023-06-25T11:45:00Z'\n  },\n  {\n    id: 'u9',\n    firstName: 'James',\n    lastName: 'Brown',\n    email: 'james.brown@themis.com',\n    role: UserRole.DEPARTMENT_DIRECTOR,\n    department: mockDepartments[3],\n    username: 'james.brown',\n    isActive: true,\n    createdAt: '2023-01-25T09:45:00Z',\n    updatedAt: '2023-06-01T15:30:00Z'\n  },\n  {\n    id: 'u10',\n    firstName: 'Emily',\n    lastName: 'Davis',\n    email: 'emily.davis@themis.com',\n    role: UserRole.MANAGER,\n    department: mockDepartments[3],\n    username: 'emily.davis',\n    isActive: true,\n    createdAt: '2023-03-05T10:15:00Z',\n    updatedAt: '2023-06-30T09:20:00Z'\n  },\n  {\n    id: 'u11',\n    firstName: 'Daniel',\n    lastName: 'Rodriguez',\n    email: 'daniel.rodriguez@themis.com',\n    role: UserRole.DEVELOPER,\n    department: mockDepartments[0],\n    username: 'daniel.rodriguez',\n    isActive: true,\n    createdAt: '2023-02-20T14:20:00Z',\n    updatedAt: '2023-06-12T11:30:00Z'\n  },\n  {\n    id: 'u12',\n    firstName: 'Ava',\n    lastName: 'Thompson',\n    email: 'ava.thompson@themis.com',\n    role: UserRole.QA,\n    department: mockDepartments[0],\n    username: 'ava.thompson',\n    isActive: true,\n    createdAt: '2023-03-15T09:40:00Z',\n    updatedAt: '2023-07-01T10:15:00Z'\n  },\n  {\n    id: 'u13',\n    firstName: 'Mohammed',\n    lastName: 'Al-Farsi',\n    email: 'mohammed.alfarsi@themis.com',\n    role: UserRole.SUB_PMO,\n    department: mockDepartments[5],\n    username: 'mohammed.alfarsi',\n    isActive: true,\n    createdAt: '2023-01-30T12:00:00Z',\n    updatedAt: '2023-06-18T16:45:00Z'\n  },\n  {\n    id: 'u14',\n    firstName: 'Fatima',\n    lastName: 'Al-Said',\n    email: 'fatima.alsaid@themis.com',\n    role: UserRole.MAIN_PMO,\n    department: mockDepartments[5],\n    username: 'fatima.alsaid',\n    isActive: true,\n    createdAt: '2023-01-18T11:10:00Z',\n    updatedAt: '2023-05-22T14:30:00Z'\n  },\n  {\n    id: 'u15',\n    firstName: 'Ahmed',\n    lastName: 'Hassan',\n    email: 'ahmed.hassan@themis.com',\n    role: UserRole.TEAM_LEAD,\n    department: mockDepartments[0],\n    username: 'ahmed.hassan',\n    isActive: true,\n    createdAt: '2023-02-08T10:30:00Z',\n    updatedAt: '2023-06-14T15:00:00Z'\n  }\n];\n\n// Mock Projects\nexport const mockProjects: Project[] = [\n  {\n    id: 'p1',\n    name: 'Enterprise Resource Planning System',\n    description: 'Implement a new ERP system to improve business processes and operations.',\n    department: mockDepartments[0], // IT Department\n    departmentId: mockDepartments[0].id,\n    status: ProjectStatus.IN_PROGRESS,\n    priority: ProjectPriority.HIGH,\n    startDate: '2023-05-01T00:00:00Z',\n    endDate: '2023-10-31T00:00:00Z',\n    budget: 250000,\n    actualCost: 120000,\n    projectManager: mockUsers[1], // Sarah Johnson (Project Manager)\n    projectManagerId: mockUsers[1].id,\n    teamMembers: [mockUsers[2], mockUsers[10], mockUsers[11]], // Michael Chen, Daniel Rodriguez, Ava Thompson\n    progress: 45,\n    createdAt: '2023-04-15T00:00:00Z',\n    updatedAt: '2023-06-20T00:00:00Z',\n    templateType: ProjectTemplateType.ERP\n  },\n  {\n    id: 'p2',\n    name: 'Marketing Campaign for Q3',\n    description: 'Plan and execute marketing campaign for the third quarter focusing on new product launch.',\n    department: mockDepartments[1], // Marketing Department\n    departmentId: mockDepartments[1].id,\n    status: ProjectStatus.PLANNING,\n    priority: ProjectPriority.MEDIUM,\n    startDate: '2023-07-01T00:00:00Z',\n    endDate: '2023-09-30T00:00:00Z',\n    budget: 100000,\n    projectManager: mockUsers[4], // David Wilson (Project Manager)\n    projectManagerId: mockUsers[4].id,\n    teamMembers: [mockUsers[5]], // Sophia Kim (Designer)\n    progress: 15,\n    createdAt: '2023-06-10T00:00:00Z',\n    updatedAt: '2023-06-15T00:00:00Z',\n    templateType: ProjectTemplateType.MARKETING\n  },\n  {\n    id: 'p3',\n    name: 'Financial System Upgrade',\n    description: 'Upgrade the financial reporting system to comply with new regulations.',\n    department: mockDepartments[2], // Finance Department\n    departmentId: mockDepartments[2].id,\n    status: ProjectStatus.ON_HOLD,\n    priority: ProjectPriority.CRITICAL,\n    startDate: '2023-04-01T00:00:00Z',\n    endDate: '2023-08-31T00:00:00Z',\n    budget: 180000,\n    actualCost: 65000,\n    projectManager: mockUsers[7], // Olivia Martinez (Project Manager)\n    projectManagerId: mockUsers[7].id,\n    teamMembers: [mockUsers[2], mockUsers[6]], // Michael Chen (Developer), Robert Taylor (Executive)\n    progress: 30,\n    createdAt: '2023-03-15T00:00:00Z',\n    updatedAt: '2023-06-05T00:00:00Z',\n    templateType: ProjectTemplateType.FINANCE\n  },\n  {\n    id: 'p4',\n    name: 'Operations Optimization',\n    description: 'Optimize warehouse operations to improve efficiency and reduce costs.',\n    department: mockDepartments[3], // Operations Department\n    departmentId: mockDepartments[3].id,\n    status: ProjectStatus.COMPLETED,\n    priority: ProjectPriority.HIGH,\n    startDate: '2023-01-15T00:00:00Z',\n    endDate: '2023-05-15T00:00:00Z',\n    budget: 120000,\n    actualCost: 118000,\n    projectManager: mockUsers[9], // Emily Davis (Manager)\n    projectManagerId: mockUsers[9].id,\n    teamMembers: [mockUsers[8]], // James Brown (Department Director)\n    progress: 100,\n    createdAt: '2023-01-10T00:00:00Z',\n    updatedAt: '2023-05-20T00:00:00Z',\n    templateType: ProjectTemplateType.SUPPLY_CHAIN\n  },\n  {\n    id: 'p5',\n    name: 'Website Redesign',\n    description: 'Completely redesign the company website to improve user experience and conversion rates.',\n    department: mockDepartments[1], // Marketing Department\n    departmentId: mockDepartments[1].id,\n    status: ProjectStatus.IN_PROGRESS,\n    priority: ProjectPriority.MEDIUM,\n    startDate: '2023-03-01T00:00:00Z',\n    endDate: '2023-07-31T00:00:00Z',\n    budget: 75000,\n    actualCost: 40000,\n    projectManager: mockUsers[4], // David Wilson (Project Manager)\n    projectManagerId: mockUsers[4].id,\n    teamMembers: [mockUsers[5], mockUsers[2]], // Sophia Kim (Designer), Michael Chen (Developer)\n    progress: 60,\n    createdAt: '2023-02-15T00:00:00Z',\n    updatedAt: '2023-06-10T00:00:00Z',\n    templateType: ProjectTemplateType.WEBSITE,\n    projectDependencies: ['p2'], // Depends on Marketing Campaign\n    dependentProjects: [] // No projects depend on this one yet\n  }\n];\n\n// Empty Tasks\nexport const mockTasks: Task[] = [];\n\n// Empty Risks\nexport const mockRisks: Risk[] = [];\n\n// Empty Meetings\nexport const mockMeetings: Meeting[] = [];\n\n// Empty Issues\nexport const mockIssues: Issue[] = [];\n\n// Helper function to generate random activities - returns empty array\nexport const generateRandomActivities = (count: number) => {\n  return [];\n};\n\n// Empty activities\nexport const mockActivities = [];\n\n// Empty change requests\nexport const mockChangeRequests = [];\n\n// Empty task requests\nexport const mockTaskRequests = [];\n\n// Create default tasks for a given project\nexport const createDefaultTasks = (projectId: string): Task[] => {\n  return [\n    {\n      id: `t1-${projectId}`,\n      title: 'Initial planning',\n      description: 'Define project scope and deliverables',\n      status: TaskStatus.DONE,\n      priority: TaskPriority.HIGH,\n      startDate: '2023-05-01T09:00:00Z',\n      dueDate: '2023-05-05T17:00:00Z',\n      projectId: projectId,\n      assignee: mockUsers[1], // Sarah Johnson (Project Manager)\n      project: {} as Project, // Will be filled by the caller\n      createdAt: '2023-04-28T14:30:00Z',\n      updatedAt: '2023-05-05T16:45:00Z'\n    },\n    {\n      id: `t2-${projectId}`,\n      title: 'Requirements gathering',\n      description: 'Collect and document all requirements from stakeholders',\n      status: TaskStatus.DONE,\n      priority: TaskPriority.HIGH,\n      startDate: '2023-05-08T09:00:00Z',\n      dueDate: '2023-05-12T17:00:00Z',\n      projectId: projectId,\n      assignee: mockUsers[1], // Sarah Johnson (Project Manager)\n      project: {} as Project, // Will be filled by the caller\n      createdAt: '2023-05-05T11:20:00Z',\n      updatedAt: '2023-05-12T15:30:00Z'\n    },\n    {\n      id: `t3-${projectId}`,\n      title: 'Design system architecture',\n      description: 'Create system architecture diagrams and documentation',\n      status: TaskStatus.IN_PROGRESS,\n      priority: TaskPriority.MEDIUM,\n      startDate: '2023-05-15T09:00:00Z',\n      dueDate: '2023-05-19T17:00:00Z',\n      projectId: projectId,\n      assignee: mockUsers[2], // Michael Chen (Developer)\n      project: {} as Project, // Will be filled by the caller\n      createdAt: '2023-05-12T16:00:00Z',\n      updatedAt: '2023-05-17T10:15:00Z'\n    },\n    {\n      id: `t4-${projectId}`,\n      title: 'UI/UX Design',\n      description: 'Create wireframes and high-fidelity designs',\n      status: TaskStatus.TODO,\n      priority: TaskPriority.MEDIUM,\n      startDate: '2023-05-22T09:00:00Z',\n      dueDate: '2023-05-31T17:00:00Z',\n      projectId: projectId,\n      assignee: mockUsers[5], // Sophia Kim (Designer)\n      project: {} as Project, // Will be filled by the caller\n      createdAt: '2023-05-17T14:45:00Z',\n      updatedAt: '2023-05-17T14:45:00Z'\n    },\n    {\n      id: `t5-${projectId}`,\n      title: 'Backend development',\n      description: 'Implement API endpoints and database models',\n      status: TaskStatus.TODO,\n      priority: TaskPriority.HIGH,\n      startDate: '2023-06-01T09:00:00Z',\n      dueDate: '2023-06-14T17:00:00Z',\n      projectId: projectId,\n      assignee: mockUsers[2], // Michael Chen (Developer)\n      project: {} as Project, // Will be filled by the caller\n      createdAt: '2023-05-20T09:30:00Z',\n      updatedAt: '2023-05-20T09:30:00Z'\n    }\n  ];\n};\n\n// Helper function to get project for task\nexport const getProjectForTask = (task: Task, projects: Project[]): Project | undefined => {\n  return projects.find(project => project.id === task.projectId);\n};\n\n// Empty Notifications\nexport const mockNotifications = []; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}