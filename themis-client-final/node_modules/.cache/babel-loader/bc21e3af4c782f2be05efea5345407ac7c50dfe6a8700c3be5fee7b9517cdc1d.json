{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/common/CircularProgressWithLabel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, CircularProgress, Typography, useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircularProgressWithLabel = ({\n  value,\n  size = 40,\n  thickness = 3.6,\n  animate = false,\n  animationDuration = 800,\n  valuePrefix = '',\n  valueSuffix = '%',\n  color = 'primary',\n  progressColor,\n  ...props\n}) => {\n  _s();\n  const theme = useTheme();\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    if (animate) {\n      const timer = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress >= value) {\n            clearInterval(timer);\n            return value;\n          }\n          // Increment by a small amount each time\n          const increment = Math.max(1, Math.floor(value / 20));\n          return Math.min(prevProgress + increment, value);\n        });\n      }, animationDuration / (value || 1));\n      return () => {\n        clearInterval(timer);\n      };\n    } else {\n      setProgress(value);\n    }\n  }, [value, animate, animationDuration]);\n\n  // Dynamically determine color based on value\n  const getColorByValue = () => {\n    if (color !== 'primary') return color;\n    if (value < 30) {\n      return 'error';\n    } else if (value < 70) {\n      return 'warning';\n    } else {\n      return 'success';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      display: 'inline-flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      size: size,\n      thickness: thickness,\n      value: animate ? progress : value,\n      color: getColorByValue(),\n      sx: progressColor ? {\n        color: progressColor\n      } : undefined,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"text.secondary\",\n        sx: {\n          fontWeight: 'medium',\n          fontSize: size && size < 45 ? '0.7rem' : '0.875rem',\n          paddingLeft: '1px' // Center visually\n        },\n        children: `${valuePrefix}${Math.round(animate ? progress : value)}${valueSuffix}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CircularProgressWithLabel, \"blMKifjKwib9papUTjaSgXRO7bM=\", false, function () {\n  return [useTheme];\n});\n_c = CircularProgressWithLabel;\nexport default CircularProgressWithLabel;\nvar _c;\n$RefreshReg$(_c, \"CircularProgressWithLabel\");","map":{"version":3,"names":["React","useEffect","useState","Box","CircularProgress","Typography","useTheme","jsxDEV","_jsxDEV","CircularProgressWithLabel","value","size","thickness","animate","animationDuration","valuePrefix","valueSuffix","color","progressColor","props","_s","theme","progress","setProgress","timer","setInterval","prevProgress","clearInterval","increment","Math","max","floor","min","getColorByValue","sx","position","display","children","variant","undefined","fileName","_jsxFileName","lineNumber","columnNumber","top","left","bottom","right","alignItems","justifyContent","component","fontWeight","fontSize","paddingLeft","round","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/common/CircularProgressWithLabel.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, CircularProgress, Typography, useTheme, CircularProgressProps } from '@mui/material';\n\nexport interface CircularProgressWithLabelProps extends CircularProgressProps {\n  value: number;\n  size?: number;\n  thickness?: number;\n  animate?: boolean;\n  animationDuration?: number;\n  valuePrefix?: string;\n  valueSuffix?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning' | 'inherit';\n  progressColor?: string;\n}\n\nconst CircularProgressWithLabel: React.FC<CircularProgressWithLabelProps> = ({\n  value,\n  size = 40,\n  thickness = 3.6,\n  animate = false,\n  animationDuration = 800,\n  valuePrefix = '',\n  valueSuffix = '%',\n  color = 'primary',\n  progressColor,\n  ...props\n}) => {\n  const theme = useTheme();\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    if (animate) {\n      const timer = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress >= value) {\n            clearInterval(timer);\n            return value;\n          }\n          // Increment by a small amount each time\n          const increment = Math.max(1, Math.floor(value / 20));\n          return Math.min(prevProgress + increment, value);\n        });\n      }, animationDuration / (value || 1));\n\n      return () => {\n        clearInterval(timer);\n      };\n    } else {\n      setProgress(value);\n    }\n  }, [value, animate, animationDuration]);\n\n  // Dynamically determine color based on value\n  const getColorByValue = () => {\n    if (color !== 'primary') return color;\n    \n    if (value < 30) {\n      return 'error';\n    } else if (value < 70) {\n      return 'warning';\n    } else {\n      return 'success';\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n      <CircularProgress\n        variant=\"determinate\"\n        size={size}\n        thickness={thickness}\n        value={animate ? progress : value}\n        color={getColorByValue()}\n        sx={progressColor ? { color: progressColor } : undefined}\n        {...props}\n      />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"text.secondary\"\n          sx={{\n            fontWeight: 'medium',\n            fontSize: size && size < 45 ? '0.7rem' : '0.875rem',\n            paddingLeft: '1px', // Center visually\n          }}\n        >\n          {`${valuePrefix}${Math.round(animate ? progress : value)}${valueSuffix}`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CircularProgressWithLabel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}