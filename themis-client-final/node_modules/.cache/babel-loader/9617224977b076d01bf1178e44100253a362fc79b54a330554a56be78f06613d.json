{"ast":null,"code":"import api from'./api';class ProjectService{// Helper to get token (in a real app, this would come from AuthContext)\ngetToken(){return localStorage.getItem('token')||'';}async getProjects(){try{const response=await api.projects.getAllProjects(this.getToken());return response.data;}catch(error){console.error('Error fetching projects:',error);throw error;}}async getProjectById(id){try{const response=await api.projects.getProjectById(id,this.getToken());return response.data;}catch(error){console.error(`Error fetching project ${id}:`,error);throw error;}}async createProject(projectData){try{const response=await api.projects.createProject(projectData,this.getToken());return response.data;}catch(error){console.error('Error creating project:',error);throw error;}}async updateProject(id,projectData){try{const response=await api.projects.updateProject(id,projectData,this.getToken());return response.data;}catch(error){console.error(`Error updating project ${id}:`,error);throw error;}}async deleteProject(id){try{await api.projects.deleteProject(id,this.getToken());}catch(error){console.error(`Error deleting project ${id}:`,error);throw error;}}}export const projectService=new ProjectService();","map":{"version":3,"names":["api","ProjectService","getToken","localStorage","getItem","getProjects","response","projects","getAllProjects","data","error","console","getProjectById","id","createProject","projectData","updateProject","deleteProject","projectService"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/services/ProjectService.ts"],"sourcesContent":["import api from './api';\nimport { Project } from '../types';\n\nclass ProjectService {\n  // Helper to get token (in a real app, this would come from AuthContext)\n  private getToken(): string {\n    return localStorage.getItem('token') || '';\n  }\n\n  async getProjects(): Promise<Project[]> {\n    try {\n      const response = await api.projects.getAllProjects(this.getToken());\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      throw error;\n    }\n  }\n\n  async getProjectById(id: string): Promise<Project> {\n    try {\n      const response = await api.projects.getProjectById(id, this.getToken());\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching project ${id}:`, error);\n      throw error;\n    }\n  }\n\n  async createProject(projectData: Partial<Project>): Promise<Project> {\n    try {\n      const response = await api.projects.createProject(projectData, this.getToken());\n      return response.data;\n    } catch (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n  }\n\n  async updateProject(id: string, projectData: Partial<Project>): Promise<Project> {\n    try {\n      const response = await api.projects.updateProject(id, projectData, this.getToken());\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating project ${id}:`, error);\n      throw error;\n    }\n  }\n\n  async deleteProject(id: string): Promise<void> {\n    try {\n      await api.projects.deleteProject(id, this.getToken());\n    } catch (error) {\n      console.error(`Error deleting project ${id}:`, error);\n      throw error;\n    }\n  }\n}\n\nexport const projectService = new ProjectService(); "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB,KAAM,CAAAC,cAAe,CACnB;AACQC,QAAQA,CAAA,CAAW,CACzB,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,EAAE,CAC5C,CAEA,KAAM,CAAAC,WAAWA,CAAA,CAAuB,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACN,QAAQ,CAAC,CAAC,CAAC,CACnE,MAAO,CAAAI,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAE,cAAcA,CAACC,EAAU,CAAoB,CACjD,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,QAAQ,CAACK,cAAc,CAACC,EAAE,CAAE,IAAI,CAACX,QAAQ,CAAC,CAAC,CAAC,CACvE,MAAO,CAAAI,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,EAAE,GAAG,CAAEH,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAI,aAAaA,CAACC,WAA6B,CAAoB,CACnE,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,QAAQ,CAACO,aAAa,CAACC,WAAW,CAAE,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,CAC/E,MAAO,CAAAI,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAM,aAAaA,CAACH,EAAU,CAAEE,WAA6B,CAAoB,CAC/E,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,QAAQ,CAACS,aAAa,CAACH,EAAE,CAAEE,WAAW,CAAE,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,CACnF,MAAO,CAAAI,QAAQ,CAACG,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,EAAE,GAAG,CAAEH,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CAEA,KAAM,CAAAO,aAAaA,CAACJ,EAAU,CAAiB,CAC7C,GAAI,CACF,KAAM,CAAAb,GAAG,CAACO,QAAQ,CAACU,aAAa,CAACJ,EAAE,CAAE,IAAI,CAACX,QAAQ,CAAC,CAAC,CAAC,CACvD,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,EAAE,GAAG,CAAEH,KAAK,CAAC,CACrD,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAEA,MAAO,MAAM,CAAAQ,cAAc,CAAG,GAAI,CAAAjB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}