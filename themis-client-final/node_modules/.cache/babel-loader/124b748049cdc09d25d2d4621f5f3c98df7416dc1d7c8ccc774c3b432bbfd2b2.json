{"ast":null,"code":"import LocalStorageService from '../services/LocalStorageService';\n\n/**\n * Clears all test data from localStorage\n * This function removes all items with keys that start with 'themis_'\n */\nexport const clearAllTestData = () => {\n  console.log('Clearing all test data from the application...');\n\n  // Clear localStorage entries\n  LocalStorageService.clearAllData();\n\n  // Force clear specific key items\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('themis_projects');\n  localStorage.removeItem('themis_tasks');\n  localStorage.removeItem('themis_meetings');\n  localStorage.removeItem('themis_risks');\n  localStorage.removeItem('themis_issues');\n  localStorage.removeItem('themis_independent_tasks');\n  localStorage.removeItem('themis_departments');\n\n  // Clear any session-specific data as well\n  sessionStorage.clear();\n  console.log('All application data has been cleared');\n};\n\n/**\n * Initializes the application with empty state\n * This should be called on application startup\n */\nexport const initializeCleanApplication = () => {\n  // Clear all localStorage and sessionStorage data\n  clearAllTestData();\n\n  // Set flag in localStorage to indicate the app has been cleaned\n  localStorage.setItem('themis_clean_initialized', 'true');\n  console.log('Application initialized with clean state');\n};\n\n/**\n * Check if the app has been properly cleaned\n */\nexport const isAppClean = () => {\n  return localStorage.getItem('themis_clean_initialized') === 'true';\n};","map":{"version":3,"names":["LocalStorageService","clearAllTestData","console","log","clearAllData","localStorage","removeItem","sessionStorage","clear","initializeCleanApplication","setItem","isAppClean","getItem"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/utils/cleanupUtils.ts"],"sourcesContent":["import LocalStorageService from '../services/LocalStorageService';\n\n/**\n * Clears all test data from localStorage\n * This function removes all items with keys that start with 'themis_'\n */\nexport const clearAllTestData = (): void => {\n  console.log('Clearing all test data from the application...');\n  \n  // Clear localStorage entries\n  LocalStorageService.clearAllData();\n  \n  // Force clear specific key items\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  localStorage.removeItem('themis_projects');\n  localStorage.removeItem('themis_tasks');\n  localStorage.removeItem('themis_meetings');\n  localStorage.removeItem('themis_risks');\n  localStorage.removeItem('themis_issues');\n  localStorage.removeItem('themis_independent_tasks');\n  localStorage.removeItem('themis_departments');\n  \n  // Clear any session-specific data as well\n  sessionStorage.clear();\n  \n  console.log('All application data has been cleared');\n};\n\n/**\n * Initializes the application with empty state\n * This should be called on application startup\n */\nexport const initializeCleanApplication = (): void => {\n  // Clear all localStorage and sessionStorage data\n  clearAllTestData();\n  \n  // Set flag in localStorage to indicate the app has been cleaned\n  localStorage.setItem('themis_clean_initialized', 'true');\n  \n  console.log('Application initialized with clean state');\n};\n\n/**\n * Check if the app has been properly cleaned\n */\nexport const isAppClean = (): boolean => {\n  return localStorage.getItem('themis_clean_initialized') === 'true';\n}; "],"mappings":"AAAA,OAAOA,mBAAmB,MAAM,iCAAiC;;AAEjE;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAY;EAC1CC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;;EAE7D;EACAH,mBAAmB,CAACI,YAAY,CAAC,CAAC;;EAElC;EACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAC/BD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;EAC1CD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;EACvCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;EAC1CD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;EACvCD,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;EACxCD,YAAY,CAACC,UAAU,CAAC,0BAA0B,CAAC;EACnDD,YAAY,CAACC,UAAU,CAAC,oBAAoB,CAAC;;EAE7C;EACAC,cAAc,CAACC,KAAK,CAAC,CAAC;EAEtBN,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;AACtD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMM,0BAA0B,GAAGA,CAAA,KAAY;EACpD;EACAR,gBAAgB,CAAC,CAAC;;EAElB;EACAI,YAAY,CAACK,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC;EAExDR,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;AACzD,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMQ,UAAU,GAAGA,CAAA,KAAe;EACvC,OAAON,YAAY,CAACO,OAAO,CAAC,0BAA0B,CAAC,KAAK,MAAM;AACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}