{"ast":null,"code":"var _jsxFileName = \"/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Project/AddProjectDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box, FormHelperText, Typography, IconButton, List, ListItem, ListItemText, Paper, Alert, AlertTitle, ListItemIcon, CircularProgress, Divider, InputAdornment, Modal } from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { ProjectStatus, ProjectPriority, ProjectTemplateType } from '../../types';\nimport { useAuth } from '../../context/AuthContext';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport api from '../../services/api';\nimport { useTranslation } from 'react-i18next';\nimport { CalendarMonth as CalendarIcon, Business as BusinessIcon, Person as PersonIcon, PriorityHigh as PriorityIcon } from '@mui/icons-material';\nimport { GridItem, GridContainer } from '../../components/common/MuiGridWrapper';\nimport { getTemplatePreviewPath, getTemplateDescription } from '../../utils/imagePlaceholders';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FILE_SIZE_LIMIT = 10 * 1024 * 1024; // 10MB\nconst ALLOWED_FILE_TYPES = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'image/jpeg', 'image/png', 'image/gif', 'text/plain'];\nconst AddProjectDialog = ({\n  open,\n  onClose,\n  onProjectAdded,\n  departments,\n  users\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const fileInputRef = useRef(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [attachments, setAttachments] = useState([]);\n  const [attachmentErrors, setAttachmentErrors] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    departmentId: '',\n    startDate: new Date(),\n    endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n    // Default to 30 days from now\n    status: ProjectStatus.PLANNING,\n    projectManagerId: '',\n    budget: 0,\n    client: '',\n    teamMembers: [],\n    priority: ProjectPriority.MEDIUM,\n    templateType: ProjectTemplateType.DEFAULT\n  });\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear error when field is edited\n    if (formErrors[name]) {\n      setFormErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n  const handleNumberInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const numValue = parseFloat(value);\n    if (!isNaN(numValue) || value === '') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value === '' ? 0 : numValue\n      }));\n    }\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleStartDateChange = date => {\n    if (date) {\n      setFormData(prev => ({\n        ...prev,\n        startDate: date\n      }));\n    }\n  };\n  const handleEndDateChange = date => {\n    if (date) {\n      setFormData(prev => ({\n        ...prev,\n        endDate: date\n      }));\n    }\n  };\n  const handleFileUploadClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  const validateFile = file => {\n    // Check file size\n    if (file.size > FILE_SIZE_LIMIT) {\n      return `File size exceeds ${FILE_SIZE_LIMIT / (1024 * 1024)}MB limit`;\n    }\n\n    // Check file type\n    if (!ALLOWED_FILE_TYPES.includes(file.type)) {\n      return 'File type not supported';\n    }\n    return null;\n  };\n  const handleFileChange = e => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const newFiles = Array.from(files);\n      const errors = [];\n\n      // Validate each file\n      const validFiles = newFiles.filter((file, index) => {\n        const error = validateFile(file);\n        if (error) {\n          errors.push(`${file.name}: ${error}`);\n          return false;\n        }\n        return true;\n      });\n      setAttachments(prev => [...prev, ...validFiles]);\n      setAttachmentErrors(errors);\n\n      // Clear the input so the same file can be selected again if needed\n      e.target.value = '';\n    }\n  };\n  const handleRemoveAttachment = index => {\n    setAttachments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  // Format file size for display\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Get icon for file type\n  const getFileIcon = fileType => {\n    if (fileType.includes('pdf')) {\n      return /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 14\n      }, this);\n    } else if (fileType.includes('image')) {\n      return /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 14\n      }, this);\n    } else if (fileType.includes('word') || fileType.includes('document')) {\n      return /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n        color: \"info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 14\n      }, this);\n    } else if (fileType.includes('excel') || fileType.includes('sheet')) {\n      return /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n        color: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Add handler for team members selection\n  const handleTeamMembersChange = event => {\n    const {\n      value\n    } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      teamMembers: typeof value === 'string' ? value.split(',') : value\n    }));\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.name.trim()) {\n      errors.name = t('validation.required');\n    }\n    if (!formData.departmentId) {\n      errors.departmentId = t('validation.required');\n    }\n    if (!formData.projectManagerId) {\n      errors.projectManagerId = t('validation.required');\n    }\n    if (!formData.client.trim()) {\n      errors.client = t('validation.required');\n    }\n    if (formData.startDate > formData.endDate) {\n      errors.endDate = t('validation.endDateAfterStart');\n    }\n    if (formData.budget < 0) {\n      errors.budget = t('validation.invalidNumber');\n    }\n    if (!formData.templateType) {\n      errors.templateType = 'Please select a project template';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      var _projectResponse$data;\n      // Find the selected project manager\n      const selectedProjectManager = users.find(u => u.id === formData.projectManagerId);\n      const selectedDepartment = departments.find(d => d.id === formData.departmentId);\n\n      // Create project data\n      const projectData = {\n        name: formData.name,\n        description: formData.description,\n        status: formData.status,\n        priority: formData.priority,\n        startDate: formData.startDate.toISOString().split('T')[0],\n        endDate: formData.endDate.toISOString().split('T')[0],\n        department: selectedDepartment,\n        budget: formData.budget,\n        actualCost: 0,\n        projectManager: selectedProjectManager,\n        teamMembers: formData.teamMembers,\n        client: formData.client,\n        progress: 0,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        templateType: formData.templateType\n      };\n\n      // First, clear localStorage to avoid any inconsistencies\n      localStorage.removeItem('themis_projects');\n      const projectResponse = await api.projects.createProject(projectData, token || '');\n\n      // If we have attachments, upload them\n      if (attachments.length > 0 && (_projectResponse$data = projectResponse.data) !== null && _projectResponse$data !== void 0 && _projectResponse$data.id) {\n        const projectId = projectResponse.data.id;\n        const uploadPromises = attachments.map(file => {\n          const formData = new FormData();\n          formData.append('file', file);\n          return api.projects.uploadAttachment(projectId, formData, token || '');\n        });\n        await Promise.all(uploadPromises);\n      }\n\n      // Check if we have a project response with data\n      if (projectResponse.data) {\n        // Force update localStorage before proceeding\n        const existingProjects = JSON.parse(localStorage.getItem('themis_projects') || '[]');\n        localStorage.setItem('themis_projects', JSON.stringify([...existingProjects, {\n          ...projectResponse.data,\n          templateType: formData.templateType\n        }]));\n        onProjectAdded(projectResponse.data);\n        onClose();\n      } else {\n        throw new Error('No project data returned from API');\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n      setFormErrors(prev => ({\n        ...prev,\n        submit: 'Failed to create project. Please try again.'\n      }));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const getProjectManagers = () => {\n    return users.filter(user => user.role === 'PROJECT_MANAGER' || user.role === 'SUB_PMO' || user.role === 'MAIN_PMO');\n  };\n\n  // Handle template selection with preview\n  const handleTemplateSelect = templateType => {\n    setFormData(prev => ({\n      ...prev,\n      templateType\n    }));\n    setSelectedTemplate(templateType);\n  };\n\n  // Handle template preview\n  const handlePreviewOpen = templateType => {\n    setSelectedTemplate(templateType);\n    setPreviewOpen(true);\n  };\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: onClose,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          fontWeight: \"bold\",\n          children: t('project.addNew')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 0.5\n          },\n          children: t('project.fillDetails')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t('project.name'),\n                name: \"name\",\n                value: formData.name,\n                onChange: handleInputChange,\n                fullWidth: true,\n                required: true,\n                error: !!formErrors.name,\n                helperText: formErrors.name,\n                InputProps: {\n                  sx: {\n                    borderRadius: 1.5\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t('project.description'),\n                name: \"description\",\n                value: formData.description,\n                onChange: handleInputChange,\n                fullWidth: true,\n                required: true,\n                multiline: true,\n                rows: 3,\n                error: !!formErrors.description,\n                helperText: formErrors.description,\n                InputProps: {\n                  sx: {\n                    borderRadius: 1.5\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: t('project.startDate'),\n                  value: formData.startDate,\n                  onChange: handleStartDateChange,\n                  slotProps: {\n                    textField: {\n                      fullWidth: true,\n                      required: true,\n                      error: !!formErrors.startDate,\n                      helperText: formErrors.startDate,\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"start\",\n                          children: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 447,\n                          columnNumber: 29\n                        }, this),\n                        sx: {\n                          borderRadius: 1.5\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDateFns,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: t('project.endDate'),\n                  value: formData.endDate,\n                  onChange: handleEndDateChange,\n                  minDate: formData.startDate || undefined,\n                  slotProps: {\n                    textField: {\n                      fullWidth: true,\n                      required: true,\n                      error: !!formErrors.endDate,\n                      helperText: formErrors.endDate,\n                      InputProps: {\n                        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                          position: \"start\",\n                          children: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n                            color: \"action\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 475,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 474,\n                          columnNumber: 29\n                        }, this),\n                        sx: {\n                          borderRadius: 1.5\n                        }\n                      }\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                error: !!formErrors.departmentId,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"department-label\",\n                  children: t('project.department')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"departmentId\",\n                  value: formData.departmentId,\n                  label: t('project.department'),\n                  onChange: handleSelectChange,\n                  required: true,\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(BusinessIcon, {\n                      color: \"action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this),\n                  sx: {\n                    borderRadius: 1.5\n                  },\n                  children: departments.map(dept => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: dept.id,\n                    children: dept.name\n                  }, dept.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this), formErrors.departmentId && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  children: formErrors.departmentId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                error: !!formErrors.projectManagerId,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"manager-label\",\n                  children: t('project.projectManager')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"projectManagerId\",\n                  value: formData.projectManagerId,\n                  label: t('project.projectManager'),\n                  onChange: handleSelectChange,\n                  required: true,\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n                      color: \"action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this),\n                  sx: {\n                    borderRadius: 1.5\n                  },\n                  children: getProjectManagers().map(pm => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: pm.id,\n                    children: `${pm.firstName} ${pm.lastName}`\n                  }, pm.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), formErrors.projectManagerId && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  children: formErrors.projectManagerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t('project.budget'),\n                name: \"budget\",\n                type: \"number\",\n                value: formData.budget,\n                onChange: handleNumberInputChange,\n                fullWidth: true,\n                required: true,\n                error: !!formErrors.budget,\n                helperText: formErrors.budget,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 37\n                  }, this),\n                  sx: {\n                    borderRadius: 1.5\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"status-label\",\n                  children: t('project.status')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  label: t('project.status'),\n                  onChange: handleSelectChange,\n                  required: true,\n                  sx: {\n                    borderRadius: 1.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectStatus.PLANNING,\n                    children: t('projectStatus.PLANNING')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 581,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectStatus.IN_PROGRESS,\n                    children: t('projectStatus.IN_PROGRESS')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectStatus.ON_HOLD,\n                    children: t('projectStatus.ON_HOLD')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"priority-label\",\n                  children: t('project.priority')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"priority\",\n                  value: formData.priority,\n                  label: t('project.priority'),\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    priority: e.target.value\n                  })),\n                  required: true,\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(PriorityIcon, {\n                      color: \"action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 23\n                  }, this),\n                  sx: {\n                    borderRadius: 1.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectPriority.LOW,\n                    children: t('projectPriority.LOW')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectPriority.MEDIUM,\n                    children: t('projectPriority.MEDIUM')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectPriority.HIGH,\n                    children: t('projectPriority.HIGH')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: ProjectPriority.CRITICAL,\n                    children: t('projectPriority.CRITICAL')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Project Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"Select a template to customize your project dashboard and workflow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: {\n                    xs: 'column',\n                    md: 'row'\n                  },\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'grid',\n                    gridTemplateColumns: 'repeat(auto-fill, minmax(140px, 1fr))',\n                    gap: 2,\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Paper, {\n                    variant: \"outlined\",\n                    sx: {\n                      p: 2,\n                      textAlign: 'center',\n                      cursor: 'pointer',\n                      borderColor: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.main' : 'divider',\n                      borderWidth: formData.templateType === ProjectTemplateType.DEFAULT ? 2 : 1,\n                      bgcolor: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.light' : 'background.paper',\n                      color: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.contrastText' : 'text.primary',\n                      '&:hover': {\n                        borderColor: 'primary.main'\n                      }\n                    },\n                    onClick: () => handleTemplateSelect(ProjectTemplateType.DEFAULT),\n                    children: [/*#__PURE__*/_jsxDEV(BusinessIcon, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 644,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        mt: 1\n                      },\n                      children: \"Default\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      display: \"block\",\n                      children: \"Standard project view\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      sx: {\n                        mt: 1\n                      },\n                      onClick: e => {\n                        e.stopPropagation();\n                        handlePreviewOpen(ProjectTemplateType.DEFAULT);\n                      },\n                      children: \"Preview\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                    variant: \"outlined\",\n                    sx: {\n                      p: 2,\n                      textAlign: 'center',\n                      bgcolor: 'action.hover',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        mt: 1\n                      },\n                      children: \"More Templates\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      display: \"block\",\n                      color: \"text.secondary\",\n                      children: \"Coming Soon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this), formData.templateType && /*#__PURE__*/_jsxDEV(Paper, {\n                  variant: \"outlined\",\n                  sx: {\n                    p: 2,\n                    flex: 1,\n                    minHeight: '200px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    position: 'relative'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: formData.templateType === ProjectTemplateType.DEFAULT ? 'Default Template' : formData.templateType === ProjectTemplateType.ERP ? 'ERP Template' : formData.templateType === ProjectTemplateType.MARKETING ? 'Marketing Template' : formData.templateType === ProjectTemplateType.FINANCE ? 'Finance Template' : formData.templateType === ProjectTemplateType.SUPPLY_CHAIN ? 'Supply Chain Template' : formData.templateType === ProjectTemplateType.WEBSITE ? 'Website Template' : 'Infrastructure Template'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      width: '100%',\n                      height: '150px',\n                      borderRadius: 1,\n                      mb: 2,\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      position: 'relative',\n                      overflow: 'hidden'\n                    },\n                    onClick: () => handlePreviewOpen(formData.templateType),\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      component: \"img\",\n                      sx: {\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover'\n                      },\n                      src: getTemplatePreviewPath(formData.templateType),\n                      alt: `${formData.templateType} Template Preview`,\n                      \"data-placeholder-id\": `template-placeholder-${formData.templateType}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 718,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        position: 'absolute',\n                        bgcolor: 'rgba(0,0,0,0.6)',\n                        color: 'common.white',\n                        p: 1,\n                        borderRadius: 1\n                      },\n                      children: \"Click to enlarge\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: getTemplateDescription(formData.templateType)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    sx: {\n                      mt: 2\n                    },\n                    onClick: () => handlePreviewOpen(formData.templateType),\n                    children: \"View Full Preview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this), formErrors.templateType && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                error: true,\n                children: formErrors.templateType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: t('project.client'),\n                name: \"client\",\n                value: formData.client,\n                onChange: handleInputChange,\n                fullWidth: true,\n                required: true,\n                error: !!formErrors.client,\n                helperText: formErrors.client,\n                InputProps: {\n                  sx: {\n                    borderRadius: 1.5\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: t('project.attachments')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: t('project.supportedTypes')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                style: {\n                  display: 'none'\n                },\n                onChange: handleFileChange,\n                multiple: true,\n                accept: \".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.gif,.txt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                variant: \"outlined\",\n                sx: {\n                  p: 2,\n                  mb: 2,\n                  textAlign: 'center',\n                  cursor: 'pointer',\n                  backgroundColor: 'rgba(0, 0, 0, 0.02)'\n                },\n                onClick: handleFileUploadClick,\n                children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 1\n                  },\n                  children: t('project.clickToSelect')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 17\n              }, this), attachmentErrors.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n                  children: t('project.errorUploading')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: 0,\n                    paddingLeft: '1rem'\n                  },\n                  children: attachmentErrors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: error\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 19\n              }, this), attachments.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                children: attachments.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleRemoveAttachment(index),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 27\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: getFileIcon(file.type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: file.name,\n                    secondary: formatFileSize(file.size)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 825,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), formErrors.submit && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: formErrors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          disabled: isSubmitting,\n          children: t('common.cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          disabled: isSubmitting,\n          startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 39\n          }, this) : null,\n          children: isSubmitting ? t('common.creating') : t('common.create')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this)]\n    }, \"add-project-dialog\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: previewOpen,\n      onClose: handlePreviewClose,\n      \"aria-labelledby\": \"template-preview-modal\",\n      \"aria-describedby\": \"template-preview-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: {\n            xs: '90%',\n            sm: '80%',\n            md: '70%'\n          },\n          maxHeight: '90vh',\n          bgcolor: 'background.paper',\n          borderRadius: 2,\n          boxShadow: 24,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"template-preview-modal\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: [selectedTemplate === ProjectTemplateType.DEFAULT ? 'Default Template' : selectedTemplate === ProjectTemplateType.ERP ? 'ERP Template' : selectedTemplate === ProjectTemplateType.MARKETING ? 'Marketing Template' : selectedTemplate === ProjectTemplateType.FINANCE ? 'Finance Template' : selectedTemplate === ProjectTemplateType.SUPPLY_CHAIN ? 'Supply Chain Template' : selectedTemplate === ProjectTemplateType.WEBSITE ? 'Website Template' : 'Infrastructure Template', \" Preview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            minHeight: '300px',\n            padding: 2,\n            backgroundColor: 'action.hover',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            sx: {\n              maxWidth: '100%',\n              maxHeight: '60vh',\n              objectFit: 'contain',\n              borderRadius: 1,\n              border: '1px solid',\n              borderColor: 'divider'\n            },\n            src: selectedTemplate ? getTemplatePreviewPath(selectedTemplate) : '/assets/images/templates/default_template.png',\n            alt: \"Template Preview\",\n            \"data-placeholder-id\": selectedTemplate ? `template-placeholder-${selectedTemplate}` : 'template-placeholder-default',\n            onError: e => {\n              e.currentTarget.src = '/assets/images/placeholder.png';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 1\n            },\n            children: \"This is a preview of how your project will be structured with this template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 2\n          },\n          children: selectedTemplate ? getTemplateDescription(selectedTemplate) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handlePreviewClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 13\n          }, this), selectedTemplate && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => {\n              setFormData(prev => ({\n                ...prev,\n                templateType: selectedTemplate\n              }));\n              handlePreviewClose();\n            },\n            children: \"Select This Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AddProjectDialog, \"dj4AA33yJKJOo7V1cwIRB+s/eDo=\", false, function () {\n  return [useAuth, useTranslation];\n});\n_c = AddProjectDialog;\nexport default AddProjectDialog;\nvar _c;\n$RefreshReg$(_c, \"AddProjectDialog\");","map":{"version":3,"names":["React","useState","useRef","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","FormControl","InputLabel","Select","MenuItem","Box","FormHelperText","Typography","IconButton","List","ListItem","ListItemText","Paper","Alert","AlertTitle","ListItemIcon","CircularProgress","Divider","InputAdornment","Modal","AdapterDateFns","LocalizationProvider","DatePicker","ProjectStatus","ProjectPriority","ProjectTemplateType","useAuth","CloudUploadIcon","DeleteIcon","DescriptionIcon","api","useTranslation","CalendarMonth","CalendarIcon","Business","BusinessIcon","Person","PersonIcon","PriorityHigh","PriorityIcon","GridItem","GridContainer","getTemplatePreviewPath","getTemplateDescription","jsxDEV","_jsxDEV","Fragment","_Fragment","FILE_SIZE_LIMIT","ALLOWED_FILE_TYPES","AddProjectDialog","open","onClose","onProjectAdded","departments","users","_s","token","fileInputRef","isSubmitting","setIsSubmitting","formErrors","setFormErrors","attachments","setAttachments","attachmentErrors","setAttachmentErrors","t","formData","setFormData","name","description","departmentId","startDate","Date","endDate","now","status","PLANNING","projectManagerId","budget","client","teamMembers","priority","MEDIUM","templateType","DEFAULT","previewOpen","setPreviewOpen","selectedTemplate","setSelectedTemplate","handleInputChange","e","value","target","prev","newErrors","handleNumberInputChange","numValue","parseFloat","isNaN","handleSelectChange","handleStartDateChange","date","handleEndDateChange","handleFileUploadClick","current","click","validateFile","file","size","includes","type","handleFileChange","files","length","newFiles","Array","from","errors","validFiles","filter","index","error","push","handleRemoveAttachment","_","i","formatFileSize","bytes","k","sizes","Math","floor","log","pow","toFixed","getFileIcon","fileType","color","fileName","_jsxFileName","lineNumber","columnNumber","handleTeamMembersChange","event","split","validateForm","trim","Object","keys","handleSubmit","_projectResponse$data","selectedProjectManager","find","u","id","selectedDepartment","d","projectData","toISOString","department","actualCost","projectManager","progress","createdAt","updatedAt","localStorage","removeItem","projectResponse","projects","createProject","data","projectId","uploadPromises","map","FormData","append","uploadAttachment","Promise","all","existingProjects","JSON","parse","getItem","setItem","stringify","Error","console","submit","getProjectManagers","user","role","handleTemplateSelect","handlePreviewOpen","handlePreviewClose","children","maxWidth","fullWidth","variant","component","fontWeight","sx","mt","noValidate","autoComplete","spacing","xs","label","onChange","required","helperText","InputProps","borderRadius","multiline","rows","sm","dateAdapter","slotProps","textField","startAdornment","position","minDate","undefined","dept","pm","firstName","lastName","IN_PROGRESS","ON_HOLD","LOW","HIGH","CRITICAL","gutterBottom","display","flexDirection","md","gap","mb","gridTemplateColumns","flex","p","textAlign","cursor","borderColor","borderWidth","bgcolor","onClick","fontSize","stopPropagation","justifyContent","alignItems","minHeight","ERP","MARKETING","FINANCE","SUPPLY_CHAIN","WEBSITE","width","height","overflow","objectFit","src","alt","ref","style","multiple","accept","backgroundColor","severity","margin","paddingLeft","dense","secondaryAction","edge","primary","secondary","disabled","startIcon","top","left","transform","maxHeight","boxShadow","padding","border","onError","currentTarget","_c","$RefreshReg$"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Project/AddProjectDialog.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { \n  Dialog, \n  DialogTitle, \n  DialogContent, \n  DialogActions, \n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Stack,\n  FormHelperText,\n  Typography,\n  SelectChangeEvent,\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Paper,\n  OutlinedInput,\n  Checkbox,\n  ListItemAvatar,\n  Alert,\n  AlertTitle,\n  ListItemIcon,\n  CircularProgress,\n  Grid,\n  Divider,\n  InputAdornment,\n  Modal\n} from '@mui/material';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { ProjectStatus, User, ProjectPriority, ProjectTemplateType } from '../../types';\nimport { useAuth } from '../../context/AuthContext';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport api from '../../services/api';\nimport { useTranslation } from 'react-i18next';\nimport { \n  CalendarMonth as CalendarIcon,\n  Business as BusinessIcon,\n  Person as PersonIcon,\n  PriorityHigh as PriorityIcon\n} from '@mui/icons-material';\nimport { GridItem, GridContainer } from '../../components/common/MuiGridWrapper';\nimport { Project, Department } from '../../types';\nimport { mockProjects } from '../../services/mockData';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getTemplatePreviewPath, getTemplateDescription } from '../../utils/imagePlaceholders';\n\ninterface ApiResponse<T> {\n  data: T;\n  success: boolean;\n  message?: string;\n}\n\ninterface ProjectResponse {\n  id: string;\n  name: string;\n  [key: string]: any;\n}\n\ninterface AddProjectDialogProps {\n  open: boolean;\n  onClose: () => void;\n  onProjectAdded: (project: Project) => void;\n  departments: Department[];\n  users: User[];\n}\n\nconst FILE_SIZE_LIMIT = 10 * 1024 * 1024; // 10MB\nconst ALLOWED_FILE_TYPES = [\n  'application/pdf',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/vnd.ms-excel',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'text/plain'\n];\n\nconst AddProjectDialog: React.FC<AddProjectDialogProps> = ({ \n  open, \n  onClose, \n  onProjectAdded,\n  departments,\n  users\n}) => {\n  const { token } = useAuth();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [attachments, setAttachments] = useState<File[]>([]);\n  const [attachmentErrors, setAttachmentErrors] = useState<string[]>([]);\n  const { t } = useTranslation();\n  \n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    departmentId: '',\n    startDate: new Date(),\n    endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // Default to 30 days from now\n    status: ProjectStatus.PLANNING,\n    projectManagerId: '',\n    budget: 0,\n    client: '',\n    teamMembers: [] as string[],\n    priority: ProjectPriority.MEDIUM,\n    templateType: ProjectTemplateType.DEFAULT\n  });\n\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState<ProjectTemplateType | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when field is edited\n    if (formErrors[name]) {\n      setFormErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  const handleNumberInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    const numValue = parseFloat(value);\n    if (!isNaN(numValue) || value === '') {\n      setFormData(prev => ({ ...prev, [name]: value === '' ? 0 : numValue }));\n    }\n  };\n\n  const handleSelectChange = (e: SelectChangeEvent<string>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleStartDateChange = (date: Date | null) => {\n    if (date) {\n      setFormData(prev => ({ ...prev, startDate: date }));\n    }\n  };\n\n  const handleEndDateChange = (date: Date | null) => {\n    if (date) {\n      setFormData(prev => ({ ...prev, endDate: date }));\n    }\n  };\n\n  const handleFileUploadClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const validateFile = (file: File): string | null => {\n    // Check file size\n    if (file.size > FILE_SIZE_LIMIT) {\n      return `File size exceeds ${FILE_SIZE_LIMIT / (1024 * 1024)}MB limit`;\n    }\n    \n    // Check file type\n    if (!ALLOWED_FILE_TYPES.includes(file.type)) {\n      return 'File type not supported';\n    }\n    \n    return null;\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const newFiles = Array.from(files);\n      const errors: string[] = [];\n      \n      // Validate each file\n      const validFiles = newFiles.filter((file, index) => {\n        const error = validateFile(file);\n        if (error) {\n          errors.push(`${file.name}: ${error}`);\n          return false;\n        }\n        return true;\n      });\n      \n      setAttachments(prev => [...prev, ...validFiles]);\n      setAttachmentErrors(errors);\n      \n      // Clear the input so the same file can be selected again if needed\n      e.target.value = '';\n    }\n  };\n\n  const handleRemoveAttachment = (index: number) => {\n    setAttachments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  // Format file size for display\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Get icon for file type\n  const getFileIcon = (fileType: string) => {\n    if (fileType.includes('pdf')) {\n      return <DescriptionIcon color=\"error\" />;\n    } else if (fileType.includes('image')) {\n      return <DescriptionIcon color=\"primary\" />;\n    } else if (fileType.includes('word') || fileType.includes('document')) {\n      return <DescriptionIcon color=\"info\" />;\n    } else if (fileType.includes('excel') || fileType.includes('sheet')) {\n      return <DescriptionIcon color=\"success\" />;\n    }\n    return <DescriptionIcon />;\n  };\n\n  // Add handler for team members selection\n  const handleTeamMembersChange = (event: SelectChangeEvent<string[]>) => {\n    const { value } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      teamMembers: typeof value === 'string' ? value.split(',') : value\n    }));\n  };\n\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n    \n    if (!formData.name.trim()) {\n      errors.name = t('validation.required');\n    }\n    \n    if (!formData.departmentId) {\n      errors.departmentId = t('validation.required');\n    }\n    \n    if (!formData.projectManagerId) {\n      errors.projectManagerId = t('validation.required');\n    }\n    \n    if (!formData.client.trim()) {\n      errors.client = t('validation.required');\n    }\n    \n    if (formData.startDate > formData.endDate) {\n      errors.endDate = t('validation.endDateAfterStart');\n    }\n    \n    if (formData.budget < 0) {\n      errors.budget = t('validation.invalidNumber');\n    }\n    \n    if (!formData.templateType) {\n      errors.templateType = 'Please select a project template';\n    }\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Find the selected project manager\n      const selectedProjectManager = users.find(u => u.id === formData.projectManagerId);\n      const selectedDepartment = departments.find(d => d.id === formData.departmentId);\n      \n      // Create project data\n      const projectData = {\n        name: formData.name,\n        description: formData.description,\n        status: formData.status,\n        priority: formData.priority,\n        startDate: formData.startDate.toISOString().split('T')[0],\n        endDate: formData.endDate.toISOString().split('T')[0],\n        department: selectedDepartment,\n        budget: formData.budget,\n        actualCost: 0,\n        projectManager: selectedProjectManager,\n        teamMembers: formData.teamMembers,\n        client: formData.client,\n        progress: 0,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        templateType: formData.templateType\n      };\n      \n      // First, clear localStorage to avoid any inconsistencies\n      localStorage.removeItem('themis_projects');\n      \n      const projectResponse = await api.projects.createProject(projectData, token || '');\n      \n      // If we have attachments, upload them\n      if (attachments.length > 0 && projectResponse.data?.id) {\n        const projectId = projectResponse.data.id;\n        const uploadPromises = attachments.map(file => {\n          const formData = new FormData();\n          formData.append('file', file);\n          return api.projects.uploadAttachment(projectId, formData, token || '');\n        });\n        \n        await Promise.all(uploadPromises);\n      }\n      \n      // Check if we have a project response with data\n      if (projectResponse.data) {\n        // Force update localStorage before proceeding\n        const existingProjects = JSON.parse(localStorage.getItem('themis_projects') || '[]');\n        localStorage.setItem('themis_projects', JSON.stringify([\n          ...existingProjects,\n          { ...projectResponse.data, templateType: formData.templateType }\n        ]));\n        \n        onProjectAdded(projectResponse.data as Project);\n        onClose();\n      } else {\n        throw new Error('No project data returned from API');\n      }\n    } catch (error) {\n      console.error('Error creating project:', error);\n      setFormErrors(prev => ({ \n        ...prev, \n        submit: 'Failed to create project. Please try again.' \n      }));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const getProjectManagers = () => {\n    return users.filter(user => \n      user.role === 'PROJECT_MANAGER' || \n      user.role === 'SUB_PMO' || \n      user.role === 'MAIN_PMO'\n    );\n  };\n\n  // Handle template selection with preview\n  const handleTemplateSelect = (templateType: ProjectTemplateType) => {\n    setFormData(prev => ({ ...prev, templateType }));\n    setSelectedTemplate(templateType);\n  };\n\n  // Handle template preview\n  const handlePreviewOpen = (templateType: ProjectTemplateType) => {\n    setSelectedTemplate(templateType);\n    setPreviewOpen(true);\n  };\n\n  const handlePreviewClose = () => {\n    setPreviewOpen(false);\n  };\n\n  return (\n    <>\n      <Dialog \n        open={open} \n        onClose={onClose} \n        maxWidth=\"md\" \n        fullWidth\n        key=\"add-project-dialog\"\n      >\n        <DialogTitle>\n          <Typography variant=\"h5\" component=\"div\" fontWeight=\"bold\">\n            {t('project.addNew')}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 0.5 }}>\n            {t('project.fillDetails')}\n          </Typography>\n        </DialogTitle>\n        \n        <Divider />\n        \n        <DialogContent>\n          <Box component=\"form\" noValidate autoComplete=\"off\">\n            <GridContainer spacing={3}>\n              <GridItem xs={12}>\n                <TextField\n                  label={t('project.name')}\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  fullWidth\n                  required\n                  error={!!formErrors.name}\n                  helperText={formErrors.name}\n                  InputProps={{\n                    sx: { borderRadius: 1.5 }\n                  }}\n                />\n              </GridItem>\n              \n              <GridItem xs={12}>\n                <TextField\n                  label={t('project.description')}\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleInputChange}\n                  fullWidth\n                  required\n                  multiline\n                  rows={3}\n                  error={!!formErrors.description}\n                  helperText={formErrors.description}\n                  InputProps={{\n                    sx: { borderRadius: 1.5 }\n                  }}\n                />\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    label={t('project.startDate')}\n                    value={formData.startDate}\n                    onChange={handleStartDateChange}\n                    slotProps={{\n                      textField: {\n                        fullWidth: true,\n                        required: true,\n                        error: !!formErrors.startDate,\n                        helperText: formErrors.startDate,\n                        InputProps: {\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <CalendarIcon color=\"action\" />\n                            </InputAdornment>\n                          ),\n                          sx: { borderRadius: 1.5 }\n                        }\n                      }\n                    }}\n                  />\n                </LocalizationProvider>\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    label={t('project.endDate')}\n                    value={formData.endDate}\n                    onChange={handleEndDateChange}\n                    minDate={formData.startDate || undefined}\n                    slotProps={{\n                      textField: {\n                        fullWidth: true,\n                        required: true,\n                        error: !!formErrors.endDate,\n                        helperText: formErrors.endDate,\n                        InputProps: {\n                          startAdornment: (\n                            <InputAdornment position=\"start\">\n                              <CalendarIcon color=\"action\" />\n                            </InputAdornment>\n                          ),\n                          sx: { borderRadius: 1.5 }\n                        }\n                      }\n                    }}\n                  />\n                </LocalizationProvider>\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <FormControl \n                  fullWidth \n                  required\n                  error={!!formErrors.departmentId}\n                >\n                  <InputLabel id=\"department-label\">\n                    {t('project.department')}\n                  </InputLabel>\n                  <Select\n                    name=\"departmentId\"\n                    value={formData.departmentId}\n                    label={t('project.department')}\n                    onChange={handleSelectChange}\n                    required\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <BusinessIcon color=\"action\" />\n                      </InputAdornment>\n                    }\n                    sx={{ borderRadius: 1.5 }}\n                  >\n                    {departments.map((dept) => (\n                      <MenuItem key={dept.id} value={dept.id}>\n                        {dept.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {formErrors.departmentId && <FormHelperText>{formErrors.departmentId}</FormHelperText>}\n                </FormControl>\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <FormControl \n                  fullWidth \n                  required\n                  error={!!formErrors.projectManagerId}\n                >\n                  <InputLabel id=\"manager-label\">\n                    {t('project.projectManager')}\n                  </InputLabel>\n                  <Select\n                    name=\"projectManagerId\"\n                    value={formData.projectManagerId}\n                    label={t('project.projectManager')}\n                    onChange={handleSelectChange}\n                    required\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <PersonIcon color=\"action\" />\n                      </InputAdornment>\n                    }\n                    sx={{ borderRadius: 1.5 }}\n                  >\n                    {getProjectManagers().map((pm) => (\n                      <MenuItem key={pm.id} value={pm.id}>\n                        {`${pm.firstName} ${pm.lastName}`}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {formErrors.projectManagerId && <FormHelperText>{formErrors.projectManagerId}</FormHelperText>}\n                </FormControl>\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <TextField\n                  label={t('project.budget')}\n                  name=\"budget\"\n                  type=\"number\"\n                  value={formData.budget}\n                  onChange={handleNumberInputChange}\n                  fullWidth\n                  required\n                  error={!!formErrors.budget}\n                  helperText={formErrors.budget}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                    sx: { borderRadius: 1.5 }\n                  }}\n                />\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"status-label\">\n                    {t('project.status')}\n                  </InputLabel>\n                  <Select\n                    name=\"status\"\n                    value={formData.status}\n                    label={t('project.status')}\n                    onChange={handleSelectChange}\n                    required\n                    sx={{ borderRadius: 1.5 }}\n                  >\n                    <MenuItem value={ProjectStatus.PLANNING}>{t('projectStatus.PLANNING')}</MenuItem>\n                    <MenuItem value={ProjectStatus.IN_PROGRESS}>{t('projectStatus.IN_PROGRESS')}</MenuItem>\n                    <MenuItem value={ProjectStatus.ON_HOLD}>{t('projectStatus.ON_HOLD')}</MenuItem>\n                  </Select>\n                </FormControl>\n              </GridItem>\n              \n              <GridItem xs={12} sm={6}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"priority-label\">\n                    {t('project.priority')}\n                  </InputLabel>\n                  <Select\n                    name=\"priority\"\n                    value={formData.priority}\n                    label={t('project.priority')}\n                    onChange={(e) => setFormData(prev => ({ ...prev, priority: e.target.value as ProjectPriority }))}\n                    required\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <PriorityIcon color=\"action\" />\n                      </InputAdornment>\n                    }\n                    sx={{ borderRadius: 1.5 }}\n                  >\n                    <MenuItem value={ProjectPriority.LOW}>{t('projectPriority.LOW')}</MenuItem>\n                    <MenuItem value={ProjectPriority.MEDIUM}>{t('projectPriority.MEDIUM')}</MenuItem>\n                    <MenuItem value={ProjectPriority.HIGH}>{t('projectPriority.HIGH')}</MenuItem>\n                    <MenuItem value={ProjectPriority.CRITICAL}>{t('projectPriority.CRITICAL')}</MenuItem>\n                  </Select>\n                </FormControl>\n              </GridItem>\n              \n              <GridItem xs={12}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Project Template\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  Select a template to customize your project dashboard and workflow\n                </Typography>\n                \n                <Box sx={{ display: 'flex', flexDirection: { xs: 'column', md: 'row' }, gap: 2, mb: 2 }}>\n                  <Box sx={{ \n                    display: 'grid', \n                    gridTemplateColumns: 'repeat(auto-fill, minmax(140px, 1fr))', \n                    gap: 2, \n                    flex: 1 \n                  }}>\n                    {/* Default Template - Only display this one */}\n                    <Paper \n                      variant=\"outlined\" \n                      sx={{ \n                        p: 2, \n                        textAlign: 'center',\n                        cursor: 'pointer',\n                        borderColor: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.main' : 'divider',\n                        borderWidth: formData.templateType === ProjectTemplateType.DEFAULT ? 2 : 1,\n                        bgcolor: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.light' : 'background.paper',\n                        color: formData.templateType === ProjectTemplateType.DEFAULT ? 'primary.contrastText' : 'text.primary',\n                        '&:hover': { borderColor: 'primary.main' }\n                      }}\n                      onClick={() => handleTemplateSelect(ProjectTemplateType.DEFAULT)}\n                    >\n                      <BusinessIcon fontSize=\"large\" />\n                      <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>Default</Typography>\n                      <Typography variant=\"caption\" display=\"block\">Standard project view</Typography>\n                      <Button \n                        size=\"small\" \n                        sx={{ mt: 1 }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handlePreviewOpen(ProjectTemplateType.DEFAULT);\n                        }}\n                      >\n                        Preview\n                      </Button>\n                    </Paper>\n                    \n                    {/* Template Coming Soon Notice */}\n                    <Paper \n                      variant=\"outlined\" \n                      sx={{ \n                        p: 2, \n                        textAlign: 'center',\n                        bgcolor: 'action.hover',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <Typography variant=\"subtitle2\" sx={{ mt: 1 }}>More Templates</Typography>\n                      <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                        Coming Soon\n                      </Typography>\n                    </Paper>\n                  </Box>\n\n                  {/* Template Preview and Information */}\n                  {formData.templateType && (\n                    <Paper \n                      variant=\"outlined\" \n                      sx={{ \n                        p: 2, \n                        flex: 1,\n                        minHeight: '200px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        position: 'relative'\n                      }}\n                    >\n                      <Typography variant=\"h6\" gutterBottom>\n                        {formData.templateType === ProjectTemplateType.DEFAULT ? 'Default Template' : \n                         formData.templateType === ProjectTemplateType.ERP ? 'ERP Template' :\n                         formData.templateType === ProjectTemplateType.MARKETING ? 'Marketing Template' :\n                         formData.templateType === ProjectTemplateType.FINANCE ? 'Finance Template' :\n                         formData.templateType === ProjectTemplateType.SUPPLY_CHAIN ? 'Supply Chain Template' :\n                         formData.templateType === ProjectTemplateType.WEBSITE ? 'Website Template' :\n                         'Infrastructure Template'}\n                      </Typography>\n                      <Box \n                        sx={{ \n                          width: '100%',\n                          height: '150px',\n                          borderRadius: 1,\n                          mb: 2,\n                          cursor: 'pointer',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          position: 'relative',\n                          overflow: 'hidden'\n                        }}\n                        onClick={() => handlePreviewOpen(formData.templateType)}\n                      >\n                        <Box\n                          component=\"img\"\n                          sx={{\n                            width: '100%',\n                            height: '100%',\n                            objectFit: 'cover',\n                          }}\n                          src={getTemplatePreviewPath(formData.templateType)}\n                          alt={`${formData.templateType} Template Preview`}\n                          data-placeholder-id={`template-placeholder-${formData.templateType}`}\n                        />\n                        <Typography \n                          variant=\"caption\" \n                          sx={{ \n                            position: 'absolute',\n                            bgcolor: 'rgba(0,0,0,0.6)', \n                            color: 'common.white', \n                            p: 1, \n                            borderRadius: 1 \n                          }}\n                        >\n                          Click to enlarge\n                        </Typography>\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {getTemplateDescription(formData.templateType)}\n                      </Typography>\n                      <Button \n                        variant=\"outlined\" \n                        size=\"small\" \n                        sx={{ mt: 2 }}\n                        onClick={() => handlePreviewOpen(formData.templateType)}\n                      >\n                        View Full Preview\n                      </Button>\n                    </Paper>\n                  )}\n                </Box>\n                \n                {formErrors.templateType && (\n                  <FormHelperText error>{formErrors.templateType}</FormHelperText>\n                )}\n              </GridItem>\n              \n              <GridItem xs={12}>\n                <TextField\n                  label={t('project.client')}\n                  name=\"client\"\n                  value={formData.client}\n                  onChange={handleInputChange}\n                  fullWidth\n                  required\n                  error={!!formErrors.client}\n                  helperText={formErrors.client}\n                  InputProps={{\n                    sx: { borderRadius: 1.5 }\n                  }}\n                />\n              </GridItem>\n              \n              {/* File Attachments */}\n              <GridItem xs={12}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {t('project.attachments')}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t('project.supportedTypes')}\n                </Typography>\n                \n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  style={{ display: 'none' }}\n                  onChange={handleFileChange}\n                  multiple\n                  accept=\".pdf,.doc,.docx,.xls,.xlsx,.jpg,.jpeg,.png,.gif,.txt\"\n                />\n                \n                <Paper\n                  variant=\"outlined\"\n                  sx={{\n                    p: 2,\n                    mb: 2,\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                    backgroundColor: 'rgba(0, 0, 0, 0.02)',\n                  }}\n                  onClick={handleFileUploadClick}\n                >\n                  <CloudUploadIcon color=\"primary\" />\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                    {t('project.clickToSelect')}\n                  </Typography>\n                </Paper>\n                \n                {attachmentErrors.length > 0 && (\n                  <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    <AlertTitle>{t('project.errorUploading')}</AlertTitle>\n                    <ul style={{ margin: 0, paddingLeft: '1rem' }}>\n                      {attachmentErrors.map((error, index) => (\n                        <li key={index}>{error}</li>\n                      ))}\n                    </ul>\n                  </Alert>\n                )}\n                \n                {attachments.length > 0 && (\n                  <List dense>\n                    {attachments.map((file, index) => (\n                      <ListItem\n                        key={index}\n                        secondaryAction={\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => handleRemoveAttachment(index)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemIcon>\n                          {getFileIcon(file.type)}\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={file.name}\n                          secondary={formatFileSize(file.size)}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                )}\n              </GridItem>\n            </GridContainer>\n          </Box>\n          \n          {formErrors.submit && (\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              {formErrors.submit}\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} disabled={isSubmitting}>\n            {t('common.cancel')}\n          </Button>\n          <Button \n            onClick={handleSubmit} \n            variant=\"contained\"\n            disabled={isSubmitting}\n            startIcon={isSubmitting ? <CircularProgress size={24} /> : null}\n          >\n            {isSubmitting ? t('common.creating') : t('common.create')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Template Preview Modal */}\n      <Modal\n        open={previewOpen}\n        onClose={handlePreviewClose}\n        aria-labelledby=\"template-preview-modal\"\n        aria-describedby=\"template-preview-modal-description\"\n      >\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: { xs: '90%', sm: '80%', md: '70%' },\n          maxHeight: '90vh',\n          bgcolor: 'background.paper',\n          borderRadius: 2,\n          boxShadow: 24,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          overflow: 'auto'\n        }}>\n          <Typography id=\"template-preview-modal\" variant=\"h6\" component=\"h2\">\n            {selectedTemplate === ProjectTemplateType.DEFAULT ? 'Default Template' : \n             selectedTemplate === ProjectTemplateType.ERP ? 'ERP Template' :\n             selectedTemplate === ProjectTemplateType.MARKETING ? 'Marketing Template' :\n             selectedTemplate === ProjectTemplateType.FINANCE ? 'Finance Template' :\n             selectedTemplate === ProjectTemplateType.SUPPLY_CHAIN ? 'Supply Chain Template' :\n             selectedTemplate === ProjectTemplateType.WEBSITE ? 'Website Template' :\n             'Infrastructure Template'} Preview\n          </Typography>\n          \n          <Divider />\n\n          <Box sx={{ \n            width: '100%', \n            minHeight: '300px',\n            padding: 2,\n            backgroundColor: 'action.hover',\n            borderRadius: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            position: 'relative'\n          }}>\n            <Box\n              component=\"img\"\n              sx={{\n                maxWidth: '100%',\n                maxHeight: '60vh',\n                objectFit: 'contain',\n                borderRadius: 1,\n                border: '1px solid',\n                borderColor: 'divider'\n              }}\n              src={selectedTemplate ? getTemplatePreviewPath(selectedTemplate) : '/assets/images/templates/default_template.png'}\n              alt=\"Template Preview\"\n              data-placeholder-id={selectedTemplate ? `template-placeholder-${selectedTemplate}` : 'template-placeholder-default'}\n              onError={(e: React.SyntheticEvent<HTMLImageElement>) => {\n                e.currentTarget.src = '/assets/images/placeholder.png';\n              }}\n            />\n            \n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n              This is a preview of how your project will be structured with this template\n            </Typography>\n          </Box>\n\n          <Typography variant=\"body1\" sx={{ mt: 2 }}>\n            {selectedTemplate ? getTemplateDescription(selectedTemplate) : ''}\n          </Typography>\n\n          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\n            <Button onClick={handlePreviewClose}>\n              Close\n            </Button>\n            {selectedTemplate && (\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                onClick={() => {\n                  setFormData(prev => ({ ...prev, templateType: selectedTemplate }));\n                  handlePreviewClose();\n                }}\n              >\n                Select This Template\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddProjectDialog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}