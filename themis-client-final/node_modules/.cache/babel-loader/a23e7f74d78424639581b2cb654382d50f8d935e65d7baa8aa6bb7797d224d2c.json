{"ast":null,"code":"import axios from'axios';import{API_BASE_URL,FEATURES}from'../config';import{v4 as uuidv4}from'uuid';import{UserRole,TaskPriority,RiskStatus,RiskImpact,IssueStatus,AssignmentStatus}from'../types';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Helper function to simulate delay\nconst delay=()=>new Promise(resolve=>setTimeout(resolve,500));// Helper to simulate network delay\nconst sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms));// Standard delay duration\nconst simulateDelay=()=>sleep(Math.random()*300+200);// 200-500ms\n// Create a reusable mock IT department\nconst mockITDepartment={id:'',name:'',description:'',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};// Mock Departments - empty array\nconst mockDepartments=[];// Test users - empty objects\nconst testUsers={admin:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.ADMIN,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},manager1:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.MANAGER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},manager2:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.MANAGER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},developer:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.DEVELOPER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},designer:{id:'',username:'',firstName:'',lastName:'',email:'',role:UserRole.DESIGNER,department:mockITDepartment,isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}};// Define a default projectId\nconst defaultProjectId='';// Empty mock tasks array\nconst mockTasks=[];// Update the defaultProjects array with empty array\nconst defaultProjects=[];// Default mock meetings - empty array\nconst defaultMeetings=[];/**\n * Returns mock data for development based on the endpoint\n * Always returns empty arrays regardless of endpoint\n */const getMockData=function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2?arguments[2]:undefined;// Always return empty data for any endpoint\nreturn{data:[],success:true};};/**\n * Generic API request function with error handling\n */export const apiRequest=async function(endpoint){let method=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'GET';let data=arguments.length>2?arguments[2]:undefined;let token=arguments.length>3?arguments[3]:undefined;let isFormData=arguments.length>4?arguments[4]:undefined;const USE_MOCK_DATA=true;// Set to true for development without backend\ntry{// Set up the full URL\nconst url=`${API_BASE_URL}${endpoint}`;// Set up options\nconst headers={};// Set content type if not form data\nif(!isFormData){headers['Content-Type']='application/json';}// Add auth token if provided\nif(token){headers['Authorization']=`Bearer ${token}`;}const options={method,headers};// Add body to the request if needed\nif(data&&(method==='POST'||method==='PUT'||method==='PATCH')){options.body=isFormData?data:JSON.stringify(data);}// Make the request\nif(!USE_MOCK_DATA){const response=await fetch(url,options);// Check if the request was successful\nif(!response.ok){const errorData=await response.json().catch(()=>null);throw new Error((errorData===null||errorData===void 0?void 0:errorData.message)||`Request failed with status ${response.status}`);}// Check if the response is empty\nconst contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){return await response.json();}return await response.text();}else{// Return mock data (with persistence)\nconsole.log(`Using mock data for endpoint: ${endpoint}, method: ${method}`);return getMockData(endpoint,method,data);}}catch(error){console.error('API request failed:',error);if(USE_MOCK_DATA){console.log(`Falling back to mock data for endpoint: ${endpoint}`);return getMockData(endpoint,method,data);}throw error;}};// Default mock risks\nconst createDefaultRisks=projectId=>[{id:'1',projectId,title:'Data Migration Risk',description:'Risk of data loss during migration process',status:RiskStatus.IDENTIFIED,impact:RiskImpact.HIGH,probability:70,mitigation:'Create multiple backups before migration and perform test migrations on sample data',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-10T00:00:00Z',updatedAt:'2023-01-10T00:00:00Z'},{id:'2',projectId,title:'Resource Availability Risk',description:'Risk of key team members being unavailable during critical project phases',status:RiskStatus.ASSESSED,impact:RiskImpact.MEDIUM,probability:50,mitigation:'Develop contingency plans and cross-train team members',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-15T00:00:00Z',updatedAt:'2023-01-15T00:00:00Z'}];// Default mock issues\nconst createDefaultIssues=projectId=>[{id:'1',projectId,title:'Integration Failure with Legacy System',description:'The new system cannot properly integrate with the existing legacy system',status:IssueStatus.OPEN,impact:RiskImpact.HIGH,owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-02-10T00:00:00Z',updatedAt:'2023-02-10T00:00:00Z'},{id:'2',projectId,title:'Performance Bottleneck in Module A',description:'Module A performance is not meeting expected throughput requirements',status:IssueStatus.IN_PROGRESS,impact:RiskImpact.MEDIUM,owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-02-15T00:00:00Z',updatedAt:'2023-02-20T00:00:00Z'},{id:'3',projectId,title:'Security Vulnerability in Authentication',description:'Security audit identified a potential vulnerability in the authentication process',status:IssueStatus.RESOLVED,impact:RiskImpact.CRITICAL,resolutionSummary:'Implemented updated security protocols and fixed the vulnerability with patch 1.2.3',owner:testUsers.admin,createdBy:testUsers.admin,createdAt:'2023-01-25T00:00:00Z',updatedAt:'2023-02-05T00:00:00Z'}];// Helper function to simulate login\nexport const login=async(email,password)=>{// Return a minimal user object\nreturn{success:true,data:{id:'',username:'',firstName:'',lastName:'',email:email||'',role:UserRole.ADMIN,// Still need admin role for access\ndepartment:{id:'',name:'',description:''},isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},message:'Login successful'};};const defaultUsers=[{id:'1',username:'john.doe',firstName:'John',lastName:'Doe',email:'john.doe@themis.com',role:UserRole.PROJECT_MANAGER,department:mockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'2',username:'jane.smith',firstName:'Jane',lastName:'Smith',email:'jane.smith@themis.com',role:UserRole.DEVELOPER,department:mockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'3',username:'mike.johnson',firstName:'Mike',lastName:'Johnson',email:'mike.johnson@themis.com',role:UserRole.DESIGNER,department:mockDepartments[1],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'4',username:'sarah.wilson',firstName:'Sarah',lastName:'Wilson',email:'sarah.wilson@themis.com',role:UserRole.DEVELOPER,department:mockDepartments[0],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:'5',username:'david.brown',firstName:'David',lastName:'Brown',email:'david.brown@themis.com',role:UserRole.PROJECT_MANAGER,department:mockDepartments[2],isActive:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];const mockAssignments=[{id:'1',title:'Implement User Authentication',description:'Set up JWT authentication and user session management for the application. Include password reset functionality and email verification.',status:AssignmentStatus.IN_PROGRESS,priority:TaskPriority.HIGH,assignedBy:defaultUsers[0],assignedTo:defaultUsers[1],dueDate:new Date(Date.now()+3*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-5*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'2',title:'Design Landing Page Mockups',description:'Create high-fidelity mockups for the new landing page. Include mobile and desktop versions, with dark mode support.',status:AssignmentStatus.PENDING,priority:TaskPriority.MEDIUM,assignedBy:defaultUsers[0],assignedTo:defaultUsers[2],dueDate:new Date(Date.now()+7*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-2*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'3',title:'API Performance Optimization',description:'Optimize database queries and implement caching for frequently accessed endpoints. Target 50% reduction in response times.',status:AssignmentStatus.COMPLETED,priority:TaskPriority.HIGH,assignedBy:defaultUsers[0],assignedTo:defaultUsers[3],dueDate:new Date(Date.now()-1*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-10*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'4',title:'Write End-to-End Tests',description:'Implement comprehensive E2E tests using Cypress for critical user flows. Achieve minimum 80% coverage.',status:AssignmentStatus.IN_PROGRESS,priority:TaskPriority.MEDIUM,assignedBy:defaultUsers[4],assignedTo:defaultUsers[1],dueDate:new Date(Date.now()+5*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-3*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'5',title:'Security Audit',description:'Conduct a comprehensive security audit of the application. Check for vulnerabilities, update dependencies, and implement security best practices.',status:AssignmentStatus.PENDING,priority:TaskPriority.HIGH,assignedBy:defaultUsers[0],assignedTo:defaultUsers[3],dueDate:new Date(Date.now()+10*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-1*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'6',title:'Mobile Responsive Design',description:'Ensure all components are fully responsive on mobile devices. Fix any existing layout issues and implement mobile-specific optimizations.',status:AssignmentStatus.IN_PROGRESS,priority:TaskPriority.MEDIUM,assignedBy:defaultUsers[4],assignedTo:defaultUsers[2],dueDate:new Date(Date.now()+4*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-4*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'7',title:'Documentation Update',description:'Update API documentation and add usage examples for all endpoints. Include authentication requirements and response formats.',status:AssignmentStatus.COMPLETED,priority:TaskPriority.LOW,assignedBy:defaultUsers[0],assignedTo:defaultUsers[1],dueDate:new Date(Date.now()-2*24*60*60*1000).toISOString(),createdAt:new Date(Date.now()-8*24*60*60*1000).toISOString(),updatedAt:new Date().toISOString()},{id:'8',title:'User Analytics Dashboard',description:'Create a new dashboard to display user engagement metrics. Include charts for daily active users, session duration, and feature usage.',status:AssignmentStatus.PENDING,priority:TaskPriority.HIGH,assignedBy:defaultUsers[4],assignedTo:defaultUsers[3],dueDate:new Date(Date.now()+8*24*60*60*1000).toISOString(),createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];const assignments={getAllAssignments:async token=>{await delay();return{success:true,data:[]};},getAssignmentById:async(id,token)=>{await delay();return{success:false,error:'Assignment not found'};},createAssignment:async(data,token)=>{await delay();const newAssignment={id:'',...data,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return{success:true,data:newAssignment};},updateAssignment:async(id,data,token)=>{await delay();return{success:false,error:'Assignment not found'};},deleteAssignment:async(id,token)=>{await delay();return{success:true};}};// Create a named API object to export instead of using anonymous default export\nconst apiRoutes={// Auth endpoints\nauth:{login:adIdentifier=>{// Mock implementation for testing without backend\nconsole.log('Using mock login implementation');return Promise.resolve({userId:'1',username:adIdentifier,role:UserRole.ADMIN,// Defaulting to ADMIN for testing\ndepartmentId:'1',token:'mock-token-'+Date.now(),success:true,message:'Login successful'});},refreshToken:refreshToken=>apiRequest('/api/auth/refresh','POST',{refreshToken}),logout:token=>apiRequest('/api/auth/logout','POST',{},token)},// User endpoints\nusers:{getCurrentUser:token=>apiRequest('/api/users/me','GET',undefined,token),getAllUsers:async token=>{await delay();return{success:true,data:defaultUsers};},getUserById:(userId,token)=>apiRequest(`/api/users/${userId}`,'GET',undefined,token),createUser:(userData,token)=>apiRequest('/api/users','POST',userData,token),updateUser:(userId,userData,token)=>apiRequest(`/api/users/${userId}`,'PUT',userData,token),deleteUser:(userId,token)=>apiRequest(`/api/users/${userId}`,'DELETE',undefined,token),assignRole:(userId,role,token)=>apiRequest(`/api/users/${userId}/role`,'PUT',{role},token),assignDepartment:(userId,departmentId,token)=>apiRequest(`/api/users/${userId}/department`,'PUT',{departmentId},token),getAllDepartments:token=>apiRequest('/api/users/departments','GET',undefined,token)},// Project endpoints\nprojects:{getAllProjects:async token=>{await simulateDelay();// Get projects from localStorage or use default projects if none exist\nconst storedProjects=localStorage.getItem('themis_projects');const projects=storedProjects?JSON.parse(storedProjects):defaultProjects;return{data:projects,success:true};},getProjectById:async(id,token)=>{await simulateDelay();// Get projects from localStorage or use default projects if none exist\nconst storedProjects=localStorage.getItem('themis_projects');const projects=storedProjects?JSON.parse(storedProjects):defaultProjects;// Find project by ID\nconst project=projects.find(p=>p.id===id);if(!project){throw new Error('Project not found');}return{data:project,success:true};},createProject:async(projectData,token)=>{try{await simulateDelay();// Simulate network delay\n// Generate a new project object with an ID\nconst newProject={...projectData,id:projectData.id||uuidv4(),createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};// Get existing projects from localStorage or initialize empty array\nconst existingProjects=JSON.parse(localStorage.getItem('themis_projects')||'[]');// Add new project to the list\nlocalStorage.setItem('themis_projects',JSON.stringify([...existingProjects,newProject]));return{data:newProject,success:true};}catch(error){console.error('Error creating project:',error);throw error;}},updateProject:async(projectId,updatedData,token)=>{try{await simulateDelay();// Simulate network delay\n// Get existing projects from localStorage or use default projects if none exist\nconst storedProjects=localStorage.getItem('themis_projects');const projects=storedProjects?JSON.parse(storedProjects):defaultProjects;// Find the index of the project to update\nconst projectIndex=projects.findIndex(p=>p.id===projectId);if(projectIndex===-1){throw new Error('Project not found');}// Update the project\nconst updatedProject={...projects[projectIndex],...updatedData,updatedAt:new Date().toISOString()};projects[projectIndex]=updatedProject;// Save updated projects to localStorage\nlocalStorage.setItem('themis_projects',JSON.stringify(projects));return{data:updatedProject,success:true};}catch(error){console.error('Error updating project:',error);throw error;}},deleteProject:async(projectId,token)=>{await simulateDelay();// Get cached projects or use default mock data\nconst cachedProjects=localStorage.getItem('themis_projects');const projects=cachedProjects?JSON.parse(cachedProjects):defaultProjects;// Filter out the project to delete\nconst updatedProjects=projects.filter(p=>p.id!==projectId);if(projects.length===updatedProjects.length){throw new Error(`Project with ID ${projectId} not found`);}// Update localStorage\nlocalStorage.setItem('themis_projects',JSON.stringify(updatedProjects));return{data:{message:'Project deleted successfully'}};},uploadAttachment:(projectId,formData,token)=>apiRequest(`/api/projects/${projectId}/attachments`,'POST',formData,token,true),getAttachments:(projectId,token)=>apiRequest(`/api/projects/${projectId}/attachments`,'GET',undefined,token),deleteAttachment:(projectId,attachmentId,token)=>apiRequest(`/api/projects/${projectId}/attachments/${attachmentId}`,'DELETE',undefined,token),getProject:async(projectId,token)=>{try{// In a real implementation, this would call the API\n// const response = await axios.get(`${API_BASE_URL}/projects/${projectId}`, {\n//   headers: { Authorization: `Bearer ${token}` }\n// });\n// return response;\n// For now, return mock data\nreturn{data:{id:projectId,name:\"Mock Project\",description:\"This is a mock project returned by the API\",startDate:new Date().toISOString(),endDate:new Date(Date.now()+30*24*60*60*1000).toISOString(),status:\"IN_PROGRESS\",priority:\"MEDIUM\",budget:100000,progress:50,department:{id:\"dept-1\",name:\"IT Department\"},projectManager:{id:\"user-1\",firstName:\"John\",lastName:\"Doe\"},approvalStatus:\"SUBMITTED\",comments:\"This is a sample comment on the project\",reviewHistory:[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}};}catch(error){console.error('Error fetching project:',error);throw error;}}},// Task endpoints\ntasks:{getAllTasks:(projectId,token)=>apiRequest(`/api/projects/${projectId}/tasks`,'GET',undefined,token),getAllIndependentTasks:token=>apiRequest('/api/tasks/independent','GET',undefined,token),getTaskById:(projectId,taskId,token)=>apiRequest(`/api/projects/${projectId}/tasks/${taskId}`,'GET',undefined,token),getIndependentTaskById:(taskId,token)=>apiRequest(`/api/tasks/independent/${taskId}`,'GET',undefined,token),createTask:(projectId,taskData,token)=>apiRequest(`/api/projects/${projectId}/tasks`,'POST',taskData,token),createIndependentTask:(taskData,token)=>apiRequest('/api/tasks/independent','POST',taskData,token),updateTask:(projectId,taskId,taskData,token)=>apiRequest(`/api/projects/${projectId}/tasks/${taskId}`,'PUT',taskData,token),updateIndependentTask:(taskId,taskData,token)=>apiRequest(`/api/tasks/independent/${taskId}`,'PUT',taskData,token),deleteTask:(projectId,taskId,token)=>apiRequest(`/api/projects/${projectId}/tasks/${taskId}`,'DELETE',undefined,token),deleteIndependentTask:(taskId,token)=>apiRequest(`/api/tasks/independent/${taskId}`,'DELETE',undefined,token),// Add task comment\naddComment:async(projectId,taskId,commentData,token)=>{if(FEATURES.OFFLINE_MODE){// In offline mode, simulate API response\nawait simulateDelay();// Get existing tasks from localStorage\nconst allTasks=JSON.parse(localStorage.getItem('tasks')||'[]');// Find the specific task to add the comment to\nconst taskIndex=allTasks.findIndex(t=>t.id===taskId&&t.projectId===projectId);if(taskIndex!==-1){// Create a new comment\nconst newComment={id:`comment-${Date.now()}`,taskId,text:commentData.text,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),author:{id:commentData.authorId,firstName:commentData.authorFirstName||'User',lastName:commentData.authorLastName||commentData.authorId}};// Add comment to the task\nif(!allTasks[taskIndex].comments){allTasks[taskIndex].comments=[];}allTasks[taskIndex].comments.push(newComment);// Save back to localStorage\nlocalStorage.setItem('tasks',JSON.stringify(allTasks));return{success:true,data:newComment,message:'Comment added successfully'};}else{throw new Error('Task not found');}}else{// In online mode, make actual API call\nconst response=await axios.post(`${API_BASE_URL}/projects/${projectId}/tasks/${taskId}/comments`,commentData,{headers:{Authorization:`Bearer ${token}`}});return{data:[],success:true};}}},// Risk endpoints\nrisks:{getAllRisks:async(projectId,token)=>{await delay();return{data:[],success:true};},getRiskById:async(projectId,riskId,token)=>{await delay();return{data:null,success:false,error:'Risk not found'};},createRisk:async(projectId,riskData,token)=>{await delay();return{data:{...riskData,id:''},success:true};},updateRisk:async(projectId,riskId,riskData,token)=>{await delay();return{data:null,success:false,error:'Risk not found'};},deleteRisk:async(projectId,riskId,token)=>{await delay();return{success:true};}},// Issue endpoints\nissues:{getAllIssues:async(projectId,token)=>{await delay();return{data:[],success:true};},getIssueById:async(projectId,issueId,token)=>{await delay();return{data:null,success:false,error:'Issue not found'};},createIssue:async(projectId,issueData,token)=>{await delay();return{data:{...issueData,id:''},success:true};},updateIssue:async(projectId,issueId,issueData,token)=>{await delay();return{data:null,success:false,error:'Issue not found'};},deleteIssue:async(projectId,issueId,token)=>{await delay();return{success:true};}},// Task Request endpoints\ntaskRequests:{createTaskRequest:async(requestData,token)=>{await delay();return{data:{},success:true};},getTaskRequestsByProject:async(projectId,token)=>{await delay();return{data:[],success:true};},getTaskRequestById:async(requestId,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},updateTaskRequestStatus:async(requestId,status,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},approveTaskRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};},rejectTaskRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Task request not found'};}},// Assignment endpoints\nassignments,auditLogs:{getAuditLogs:async token=>{await delay();return{data:[],success:true};},getAuditLogById:async(logId,token)=>{await delay();return{data:null,success:false,error:'Audit log not found'};}},// Department endpoints\ndepartments:{getAllDepartments:async token=>{await delay();return{data:[],success:true};},getDepartmentById:async(departmentId,token)=>{await delay();return{data:null,success:false,error:'Department not found'};},createDepartment:async(departmentData,token)=>{await delay();return{data:{id:'',...departmentData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},success:true};},updateDepartment:async(departmentId,departmentData,token)=>{await delay();return{data:null,success:false,error:'Department not found'};},deleteDepartment:async(departmentId,token)=>{await delay();return{data:{success:true,message:\"Department deleted successfully\"}};}},// Change Request endpoints\nchangeRequests:{getChangeRequestsByProject:async(projectId,token)=>{await delay();return{data:[],success:true};},getChangeRequestById:async(requestId,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},createChangeRequest:async(requestData,token)=>{await delay();return{data:{id:'',...requestData},success:true};},updateChangeRequestStatus:async(requestId,status,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},approveChangeRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},rejectChangeRequest:async(requestId,reviewNotes,token)=>{await delay();return{data:null,success:false,error:'Change request not found'};},getAllChangeRequests:async token=>{await delay();return{data:[],success:true};}}};export default apiRoutes;","map":{"version":3,"names":["axios","API_BASE_URL","FEATURES","v4","uuidv4","UserRole","TaskPriority","RiskStatus","RiskImpact","IssueStatus","AssignmentStatus","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","delay","Promise","resolve","setTimeout","sleep","ms","simulateDelay","Math","random","mockITDepartment","id","name","description","createdAt","Date","toISOString","updatedAt","mockDepartments","testUsers","admin","username","firstName","lastName","email","role","ADMIN","department","isActive","manager1","MANAGER","manager2","developer","DEVELOPER","designer","DESIGNER","defaultProjectId","mockTasks","defaultProjects","defaultMeetings","getMockData","endpoint","method","arguments","length","undefined","data","success","apiRequest","isFormData","USE_MOCK_DATA","url","options","body","JSON","stringify","response","fetch","ok","errorData","json","catch","Error","message","status","contentType","get","includes","text","console","log","error","createDefaultRisks","projectId","title","IDENTIFIED","impact","HIGH","probability","mitigation","owner","createdBy","ASSESSED","MEDIUM","createDefaultIssues","OPEN","IN_PROGRESS","RESOLVED","CRITICAL","resolutionSummary","login","password","defaultUsers","PROJECT_MANAGER","mockAssignments","priority","assignedBy","assignedTo","dueDate","now","PENDING","COMPLETED","LOW","assignments","getAllAssignments","getAssignmentById","createAssignment","newAssignment","updateAssignment","deleteAssignment","apiRoutes","auth","adIdentifier","userId","departmentId","refreshToken","logout","users","getCurrentUser","getAllUsers","getUserById","createUser","userData","updateUser","deleteUser","assignRole","assignDepartment","getAllDepartments","projects","getAllProjects","storedProjects","parse","getProjectById","project","find","p","createProject","projectData","newProject","existingProjects","setItem","updateProject","updatedData","projectIndex","findIndex","updatedProject","deleteProject","cachedProjects","updatedProjects","filter","uploadAttachment","formData","getAttachments","deleteAttachment","attachmentId","getProject","startDate","endDate","budget","progress","projectManager","approvalStatus","comments","reviewHistory","tasks","getAllTasks","getAllIndependentTasks","getTaskById","taskId","getIndependentTaskById","createTask","taskData","createIndependentTask","updateTask","updateIndependentTask","deleteTask","deleteIndependentTask","addComment","commentData","OFFLINE_MODE","allTasks","taskIndex","t","newComment","author","authorId","authorFirstName","authorLastName","push","post","risks","getAllRisks","getRiskById","riskId","createRisk","riskData","updateRisk","deleteRisk","issues","getAllIssues","getIssueById","issueId","createIssue","issueData","updateIssue","deleteIssue","taskRequests","createTaskRequest","requestData","getTaskRequestsByProject","getTaskRequestById","requestId","updateTaskRequestStatus","reviewNotes","approveTaskRequest","rejectTaskRequest","auditLogs","getAuditLogs","getAuditLogById","logId","departments","getDepartmentById","createDepartment","departmentData","updateDepartment","deleteDepartment","changeRequests","getChangeRequestsByProject","getChangeRequestById","createChangeRequest","updateChangeRequestStatus","approveChangeRequest","rejectChangeRequest","getAllChangeRequests"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL, FEATURES } from '../config';\nimport LocalStorageService from './LocalStorageService';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ProjectStatus, TaskStatus, UserRole, TaskPriority, RiskStatus, RiskImpact, IssueStatus, Project, Task, User, Department, Meeting, Risk, Issue, Assignment, AssignmentStatus, ApiResponse, MeetingStatus, ProjectPriority, ProjectTemplateType } from '../types';\nimport { \n  mockProjects, \n  mockUsers, \n  mockRisks, \n  mockMeetings, \n  mockIssues \n} from './mockData';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Helper function to simulate delay\nconst delay = () => new Promise(resolve => setTimeout(resolve, 500));\n\n// Helper to simulate network delay\nconst sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Standard delay duration\nconst simulateDelay = () => sleep(Math.random() * 300 + 200); // 200-500ms\n\n// Create a reusable mock IT department\nconst mockITDepartment: Department = {\n  id: '',\n  name: '',\n  description: '',\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n};\n\n// Mock Departments - empty array\nconst mockDepartments: Department[] = [];\n\n// Test users - empty objects\nconst testUsers = {\n  admin: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.ADMIN,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  manager1: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.MANAGER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  manager2: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.MANAGER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  developer: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.DEVELOPER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  },\n  designer: {\n    id: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    role: UserRole.DESIGNER,\n    department: mockITDepartment,\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  }\n};\n\n// Define a default projectId\nconst defaultProjectId = '';\n\n// Empty mock tasks array\nconst mockTasks: Task[] = [];\n\n// Update the defaultProjects array with empty array\nconst defaultProjects: Project[] = [];\n\n// Default mock meetings - empty array\nconst defaultMeetings: Meeting[] = [];\n\n/**\n * Returns mock data for development based on the endpoint\n * Always returns empty arrays regardless of endpoint\n */\nconst getMockData = (endpoint: string, method: string = 'GET', data?: any): any => {\n  // Always return empty data for any endpoint\n  return {\n    data: [],\n    success: true\n  };\n};\n\n/**\n * Generic API request function with error handling\n */\nexport const apiRequest = async (\n  endpoint: string, \n  method: string = 'GET', \n  data?: any, \n  token?: string, \n  isFormData?: boolean\n): Promise<any> => {\n  const USE_MOCK_DATA = true; // Set to true for development without backend\n  \n  try {\n    // Set up the full URL\n    const url = `${API_BASE_URL}${endpoint}`;\n    \n    // Set up options\n    const headers: HeadersInit = {}; \n    \n    // Set content type if not form data\n    if (!isFormData) {\n      headers['Content-Type'] = 'application/json';\n    }\n    \n    // Add auth token if provided\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    const options: RequestInit = {\n      method,\n      headers,\n    };\n    \n    // Add body to the request if needed\n    if (data && (method === 'POST' || method === 'PUT' || method === 'PATCH')) {\n      options.body = isFormData ? data : JSON.stringify(data);\n    }\n    \n    // Make the request\n    if (!USE_MOCK_DATA) {\n      const response = await fetch(url, options);\n      \n      // Check if the request was successful\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => null);\n        throw new Error(errorData?.message || `Request failed with status ${response.status}`);\n      }\n      \n      // Check if the response is empty\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return await response.json();\n      }\n      \n      return await response.text();\n    } else {\n      // Return mock data (with persistence)\n      console.log(`Using mock data for endpoint: ${endpoint}, method: ${method}`);\n      return getMockData(endpoint, method, data);\n    }\n  } catch (error) {\n    console.error('API request failed:', error);\n    if (USE_MOCK_DATA) {\n      console.log(`Falling back to mock data for endpoint: ${endpoint}`);\n      return getMockData(endpoint, method, data);\n    }\n    throw error;\n  }\n};\n\n// Default mock risks\nconst createDefaultRisks = (projectId: string) => [\n  {\n    id: '1',\n    projectId,\n    title: 'Data Migration Risk',\n    description: 'Risk of data loss during migration process',\n    status: RiskStatus.IDENTIFIED,\n    impact: RiskImpact.HIGH,\n    probability: 70,\n    mitigation: 'Create multiple backups before migration and perform test migrations on sample data',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-10T00:00:00Z',\n    updatedAt: '2023-01-10T00:00:00Z'\n  },\n  {\n    id: '2',\n    projectId,\n    title: 'Resource Availability Risk',\n    description: 'Risk of key team members being unavailable during critical project phases',\n    status: RiskStatus.ASSESSED,\n    impact: RiskImpact.MEDIUM,\n    probability: 50,\n    mitigation: 'Develop contingency plans and cross-train team members',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-15T00:00:00Z',\n    updatedAt: '2023-01-15T00:00:00Z'\n  }\n];\n\n// Default mock issues\nconst createDefaultIssues = (projectId: string) => [\n  {\n    id: '1',\n    projectId,\n    title: 'Integration Failure with Legacy System',\n    description: 'The new system cannot properly integrate with the existing legacy system',\n    status: IssueStatus.OPEN,\n    impact: RiskImpact.HIGH,\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-02-10T00:00:00Z',\n    updatedAt: '2023-02-10T00:00:00Z'\n  },\n  {\n    id: '2',\n    projectId,\n    title: 'Performance Bottleneck in Module A',\n    description: 'Module A performance is not meeting expected throughput requirements',\n    status: IssueStatus.IN_PROGRESS,\n    impact: RiskImpact.MEDIUM,\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-02-15T00:00:00Z',\n    updatedAt: '2023-02-20T00:00:00Z'\n  },\n  {\n    id: '3',\n    projectId,\n    title: 'Security Vulnerability in Authentication',\n    description: 'Security audit identified a potential vulnerability in the authentication process',\n    status: IssueStatus.RESOLVED,\n    impact: RiskImpact.CRITICAL,\n    resolutionSummary: 'Implemented updated security protocols and fixed the vulnerability with patch 1.2.3',\n    owner: testUsers.admin,\n    createdBy: testUsers.admin,\n    createdAt: '2023-01-25T00:00:00Z',\n    updatedAt: '2023-02-05T00:00:00Z'\n  }\n];\n\n// Helper function to simulate login\nexport const login = async (email: string, password: string) => {\n  // Return a minimal user object\n  return {\n    success: true,\n    data: {\n      id: '',\n      username: '',\n      firstName: '',\n      lastName: '',\n      email: email || '',\n      role: UserRole.ADMIN, // Still need admin role for access\n      department: {\n        id: '',\n        name: '',\n        description: ''\n      },\n      isActive: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    message: 'Login successful'\n  };\n};\n\nconst defaultUsers: User[] = [\n  {\n    id: '1',\n    username: 'john.doe',\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: mockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '2',\n    username: 'jane.smith',\n    firstName: 'Jane',\n    lastName: 'Smith',\n    email: 'jane.smith@themis.com',\n    role: UserRole.DEVELOPER,\n    department: mockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '3',\n    username: 'mike.johnson',\n    firstName: 'Mike',\n    lastName: 'Johnson',\n    email: 'mike.johnson@themis.com',\n    role: UserRole.DESIGNER,\n    department: mockDepartments[1],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '4',\n    username: 'sarah.wilson',\n    firstName: 'Sarah',\n    lastName: 'Wilson',\n    email: 'sarah.wilson@themis.com',\n    role: UserRole.DEVELOPER,\n    department: mockDepartments[0],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '5',\n    username: 'david.brown',\n    firstName: 'David',\n    lastName: 'Brown',\n    email: 'david.brown@themis.com',\n    role: UserRole.PROJECT_MANAGER,\n    department: mockDepartments[2],\n    isActive: true,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  }\n];\n\nconst mockAssignments: Assignment[] = [\n  {\n    id: '1',\n    title: 'Implement User Authentication',\n    description: 'Set up JWT authentication and user session management for the application. Include password reset functionality and email verification.',\n    status: AssignmentStatus.IN_PROGRESS,\n    priority: TaskPriority.HIGH,\n    assignedBy: defaultUsers[0],\n    assignedTo: defaultUsers[1],\n    dueDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '2',\n    title: 'Design Landing Page Mockups',\n    description: 'Create high-fidelity mockups for the new landing page. Include mobile and desktop versions, with dark mode support.',\n    status: AssignmentStatus.PENDING,\n    priority: TaskPriority.MEDIUM,\n    assignedBy: defaultUsers[0],\n    assignedTo: defaultUsers[2],\n    dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '3',\n    title: 'API Performance Optimization',\n    description: 'Optimize database queries and implement caching for frequently accessed endpoints. Target 50% reduction in response times.',\n    status: AssignmentStatus.COMPLETED,\n    priority: TaskPriority.HIGH,\n    assignedBy: defaultUsers[0],\n    assignedTo: defaultUsers[3],\n    dueDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '4',\n    title: 'Write End-to-End Tests',\n    description: 'Implement comprehensive E2E tests using Cypress for critical user flows. Achieve minimum 80% coverage.',\n    status: AssignmentStatus.IN_PROGRESS,\n    priority: TaskPriority.MEDIUM,\n    assignedBy: defaultUsers[4],\n    assignedTo: defaultUsers[1],\n    dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '5',\n    title: 'Security Audit',\n    description: 'Conduct a comprehensive security audit of the application. Check for vulnerabilities, update dependencies, and implement security best practices.',\n    status: AssignmentStatus.PENDING,\n    priority: TaskPriority.HIGH,\n    assignedBy: defaultUsers[0],\n    assignedTo: defaultUsers[3],\n    dueDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '6',\n    title: 'Mobile Responsive Design',\n    description: 'Ensure all components are fully responsive on mobile devices. Fix any existing layout issues and implement mobile-specific optimizations.',\n    status: AssignmentStatus.IN_PROGRESS,\n    priority: TaskPriority.MEDIUM,\n    assignedBy: defaultUsers[4],\n    assignedTo: defaultUsers[2],\n    dueDate: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '7',\n    title: 'Documentation Update',\n    description: 'Update API documentation and add usage examples for all endpoints. Include authentication requirements and response formats.',\n    status: AssignmentStatus.COMPLETED,\n    priority: TaskPriority.LOW,\n    assignedBy: defaultUsers[0],\n    assignedTo: defaultUsers[1],\n    dueDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000).toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '8',\n    title: 'User Analytics Dashboard',\n    description: 'Create a new dashboard to display user engagement metrics. Include charts for daily active users, session duration, and feature usage.',\n    status: AssignmentStatus.PENDING,\n    priority: TaskPriority.HIGH,\n    assignedBy: defaultUsers[4],\n    assignedTo: defaultUsers[3],\n    dueDate: new Date(Date.now() + 8 * 24 * 60 * 60 * 1000).toISOString(),\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  }\n];\n\nconst assignments = {\n  getAllAssignments: async (token: string): Promise<ApiResponse<Assignment[]>> => {\n    await delay();\n    return {\n      success: true,\n      data: [],\n    };\n  },\n  \n  getAssignmentById: async (id: string, token: string): Promise<ApiResponse<Assignment>> => {\n    await delay();\n    return {\n      success: false,\n      error: 'Assignment not found',\n    };\n  },\n\n  createAssignment: async (data: Partial<Assignment>, token: string): Promise<ApiResponse<Assignment>> => {\n    await delay();\n    const newAssignment: Assignment = {\n      id: '',\n      ...data,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n    } as Assignment;\n    return {\n      success: true,\n      data: newAssignment,\n    };\n  },\n\n  updateAssignment: async (id: string, data: Partial<Assignment>, token: string): Promise<ApiResponse<Assignment>> => {\n    await delay();\n    return {\n      success: false,\n      error: 'Assignment not found',\n    };\n  },\n\n  deleteAssignment: async (id: string, token: string): Promise<ApiResponse<void>> => {\n    await delay();\n    return {\n      success: true,\n    };\n  },\n};\n\n// Create a named API object to export instead of using anonymous default export\nconst apiRoutes = {\n  // Auth endpoints\n  auth: {\n    login: (adIdentifier: string) => {\n      // Mock implementation for testing without backend\n      console.log('Using mock login implementation');\n      return Promise.resolve({\n        userId: '1',\n        username: adIdentifier,\n        role: UserRole.ADMIN, // Defaulting to ADMIN for testing\n        departmentId: '1',\n        token: 'mock-token-' + Date.now(),\n        success: true,\n        message: 'Login successful'\n      });\n    },\n    \n    refreshToken: (refreshToken: string) => \n      apiRequest('/api/auth/refresh', 'POST', { refreshToken }),\n    \n    logout: (token: string) => \n      apiRequest('/api/auth/logout', 'POST', {}, token),\n  },\n\n  // User endpoints\n  users: {\n    getCurrentUser: (token: string) => \n      apiRequest('/api/users/me', 'GET', undefined, token),\n    \n    getAllUsers: async (token: string): Promise<ApiResponse<User[]>> => {\n      await delay();\n      return {\n        success: true,\n        data: defaultUsers,\n      };\n    },\n    \n    getUserById: (userId: string, token: string) => \n      apiRequest(`/api/users/${userId}`, 'GET', undefined, token),\n    \n    createUser: (userData: any, token: string) => \n      apiRequest('/api/users', 'POST', userData, token),\n    \n    updateUser: (userId: string, userData: any, token: string) => \n      apiRequest(`/api/users/${userId}`, 'PUT', userData, token),\n    \n    deleteUser: (userId: string, token: string) => \n      apiRequest(`/api/users/${userId}`, 'DELETE', undefined, token),\n    \n    assignRole: (userId: string, role: string, token: string) => \n      apiRequest(`/api/users/${userId}/role`, 'PUT', { role }, token),\n      \n    assignDepartment: (userId: string, departmentId: string, token: string) => \n      apiRequest(`/api/users/${userId}/department`, 'PUT', { departmentId }, token),\n      \n    getAllDepartments: (token: string) => \n      apiRequest('/api/users/departments', 'GET', undefined, token),\n  },\n\n  // Project endpoints\n  projects: {\n    getAllProjects: async (token: string) => {\n      await simulateDelay();\n      \n      // Get projects from localStorage or use default projects if none exist\n      const storedProjects = localStorage.getItem('themis_projects');\n      const projects = storedProjects ? JSON.parse(storedProjects) : defaultProjects;\n      \n      return {\n        data: projects,\n        success: true\n      };\n    },\n    \n    getProjectById: async (id: string, token: string) => {\n      await simulateDelay();\n      \n      // Get projects from localStorage or use default projects if none exist\n      const storedProjects = localStorage.getItem('themis_projects');\n      const projects = storedProjects ? JSON.parse(storedProjects) : defaultProjects;\n      \n      // Find project by ID\n      const project = projects.find((p: any) => p.id === id);\n      \n      if (!project) {\n        throw new Error('Project not found');\n      }\n      \n      return {\n        data: project,\n        success: true\n      };\n    },\n    \n    createProject: async (projectData: any, token: string) => {\n      try {\n        await simulateDelay(); // Simulate network delay\n        \n        // Generate a new project object with an ID\n        const newProject = {\n          ...projectData,\n          id: projectData.id || uuidv4(),\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        };\n        \n        // Get existing projects from localStorage or initialize empty array\n        const existingProjects = JSON.parse(localStorage.getItem('themis_projects') || '[]');\n        \n        // Add new project to the list\n        localStorage.setItem('themis_projects', JSON.stringify([...existingProjects, newProject]));\n        \n        return {\n          data: newProject,\n          success: true\n        };\n      } catch (error) {\n        console.error('Error creating project:', error);\n        throw error;\n      }\n    },\n    \n    updateProject: async (projectId: string, updatedData: any, token: string) => {\n      try {\n        await simulateDelay(); // Simulate network delay\n        \n        // Get existing projects from localStorage or use default projects if none exist\n        const storedProjects = localStorage.getItem('themis_projects');\n        const projects = storedProjects ? JSON.parse(storedProjects) : defaultProjects;\n        \n        // Find the index of the project to update\n        const projectIndex = projects.findIndex((p: any) => p.id === projectId);\n        \n        if (projectIndex === -1) {\n          throw new Error('Project not found');\n        }\n        \n        // Update the project\n        const updatedProject = {\n          ...projects[projectIndex],\n          ...updatedData,\n          updatedAt: new Date().toISOString()\n        };\n        \n        projects[projectIndex] = updatedProject;\n        \n        // Save updated projects to localStorage\n        localStorage.setItem('themis_projects', JSON.stringify(projects));\n        \n        return {\n          data: updatedProject,\n          success: true\n        };\n      } catch (error) {\n        console.error('Error updating project:', error);\n        throw error;\n      }\n    },\n    \n    deleteProject: async (projectId: string, token: string): Promise<any> => {\n      await simulateDelay();\n      \n      // Get cached projects or use default mock data\n      const cachedProjects = localStorage.getItem('themis_projects');\n      const projects = cachedProjects ? JSON.parse(cachedProjects) : defaultProjects;\n      \n      // Filter out the project to delete\n      const updatedProjects = projects.filter((p: any) => p.id !== projectId);\n      \n      if (projects.length === updatedProjects.length) {\n        throw new Error(`Project with ID ${projectId} not found`);\n      }\n      \n      // Update localStorage\n      localStorage.setItem('themis_projects', JSON.stringify(updatedProjects));\n      \n      return {\n        data: { message: 'Project deleted successfully' }\n      };\n    },\n      \n    uploadAttachment: (projectId: string, formData: FormData, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments`, 'POST', formData, token, true),\n      \n    getAttachments: (projectId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments`, 'GET', undefined, token),\n      \n    deleteAttachment: (projectId: string, attachmentId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/attachments/${attachmentId}`, 'DELETE', undefined, token),\n\n    getProject: async (projectId: string, token: string) => {\n      try {\n        // In a real implementation, this would call the API\n        // const response = await axios.get(`${API_BASE_URL}/projects/${projectId}`, {\n        //   headers: { Authorization: `Bearer ${token}` }\n        // });\n        // return response;\n        \n        // For now, return mock data\n        return {\n          data: {\n            id: projectId,\n            name: \"Mock Project\",\n            description: \"This is a mock project returned by the API\",\n            startDate: new Date().toISOString(),\n            endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n            status: \"IN_PROGRESS\",\n            priority: \"MEDIUM\",\n            budget: 100000,\n            progress: 50,\n            department: {\n              id: \"dept-1\",\n              name: \"IT Department\"\n            },\n            projectManager: {\n              id: \"user-1\",\n              firstName: \"John\",\n              lastName: \"Doe\"\n            },\n            approvalStatus: \"SUBMITTED\",\n            comments: \"This is a sample comment on the project\",\n            reviewHistory: [],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          }\n        };\n      } catch (error) {\n        console.error('Error fetching project:', error);\n        throw error;\n      }\n    },\n  },\n\n  // Task endpoints\n  tasks: {\n    getAllTasks: (projectId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/tasks`, 'GET', undefined, token),\n    \n    getAllIndependentTasks: (token: string) => \n      apiRequest('/api/tasks/independent', 'GET', undefined, token),\n    \n    getTaskById: (projectId: string, taskId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/tasks/${taskId}`, 'GET', undefined, token),\n    \n    getIndependentTaskById: (taskId: string, token: string) => \n      apiRequest(`/api/tasks/independent/${taskId}`, 'GET', undefined, token),\n    \n    createTask: (projectId: string, taskData: any, token: string) => \n      apiRequest(`/api/projects/${projectId}/tasks`, 'POST', taskData, token),\n    \n    createIndependentTask: (taskData: any, token: string) => \n      apiRequest('/api/tasks/independent', 'POST', taskData, token),\n    \n    updateTask: (projectId: string, taskId: string, taskData: any, token: string) => \n      apiRequest(`/api/projects/${projectId}/tasks/${taskId}`, 'PUT', taskData, token),\n    \n    updateIndependentTask: (taskId: string, taskData: any, token: string) => \n      apiRequest(`/api/tasks/independent/${taskId}`, 'PUT', taskData, token),\n    \n    deleteTask: (projectId: string, taskId: string, token: string) => \n      apiRequest(`/api/projects/${projectId}/tasks/${taskId}`, 'DELETE', undefined, token),\n    \n    deleteIndependentTask: (taskId: string, token: string) => \n      apiRequest(`/api/tasks/independent/${taskId}`, 'DELETE', undefined, token),\n\n    // Add task comment\n    addComment: async (projectId: string, taskId: string, commentData: any, token: string) => {\n      if (FEATURES.OFFLINE_MODE) {\n        // In offline mode, simulate API response\n        await simulateDelay();\n        \n        // Get existing tasks from localStorage\n        const allTasks = JSON.parse(localStorage.getItem('tasks') || '[]');\n        \n        // Find the specific task to add the comment to\n        const taskIndex = allTasks.findIndex((t: any) => t.id === taskId && t.projectId === projectId);\n        \n        if (taskIndex !== -1) {\n          // Create a new comment\n          const newComment = {\n            id: `comment-${Date.now()}`,\n            taskId,\n            text: commentData.text,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            author: {\n              id: commentData.authorId,\n              firstName: commentData.authorFirstName || 'User',\n              lastName: commentData.authorLastName || commentData.authorId,\n            }\n          };\n          \n          // Add comment to the task\n          if (!allTasks[taskIndex].comments) {\n            allTasks[taskIndex].comments = [];\n          }\n          \n          allTasks[taskIndex].comments.push(newComment);\n          \n          // Save back to localStorage\n          localStorage.setItem('tasks', JSON.stringify(allTasks));\n          \n          return {\n            success: true,\n            data: newComment,\n            message: 'Comment added successfully'\n          };\n        } else {\n          throw new Error('Task not found');\n        }\n      } else {\n        // In online mode, make actual API call\n        const response = await axios.post(\n          `${API_BASE_URL}/projects/${projectId}/tasks/${taskId}/comments`,\n          commentData,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n        );\n        return {\n          data: [],\n          success: true\n        };\n      }\n    },\n  },\n\n  // Risk endpoints\n  risks: {\n    getAllRisks: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getRiskById: async (projectId: string, riskId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Risk not found'\n      };\n    },\n    \n    createRisk: async (projectId: string, riskData: any, token: string) => {\n      await delay();\n      return {\n        data: { ...riskData, id: '' },\n        success: true\n      };\n    },\n    \n    updateRisk: async (projectId: string, riskId: string, riskData: any, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Risk not found'\n      };\n    },\n    \n    deleteRisk: async (projectId: string, riskId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    },\n  },\n\n  // Issue endpoints\n  issues: {\n    getAllIssues: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getIssueById: async (projectId: string, issueId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Issue not found'\n      };\n    },\n    \n    createIssue: async (projectId: string, issueData: Partial<Issue>, token: string) => {\n      await delay();\n      return {\n        data: { ...issueData, id: '' },\n        success: true\n      };\n    },\n    \n    updateIssue: async (projectId: string, issueId: string, issueData: Partial<Issue>, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Issue not found'\n      };\n    },\n    \n    deleteIssue: async (projectId: string, issueId: string, token: string) => {\n      await delay();\n      return {\n        success: true\n      };\n    }\n  },\n\n  // Task Request endpoints\n  taskRequests: {\n    createTaskRequest: async (requestData: any, token: string) => {\n      await delay();\n      return {\n        data: {},\n        success: true\n      };\n    },\n      \n    getTaskRequestsByProject: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n      \n    getTaskRequestById: async (requestId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    updateTaskRequestStatus: async (requestId: string, status: any, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    approveTaskRequest: async (requestId: string, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    },\n      \n    rejectTaskRequest: async (requestId: string, reviewNotes: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Task request not found'\n      };\n    }\n  },\n\n  // Assignment endpoints\n  assignments,\n\n  auditLogs: {\n    getAuditLogs: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getAuditLogById: async (logId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Audit log not found'\n      };\n    }\n  },\n\n  // Department endpoints\n  departments: {\n    getAllDepartments: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n    \n    getDepartmentById: async (departmentId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Department not found'\n      };\n    },\n    \n    createDepartment: async (departmentData: any, token: string) => {\n      await delay();\n      return {\n        data: {\n          id: '',\n          ...departmentData,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString()\n        },\n        success: true\n      };\n    },\n    \n    updateDepartment: async (departmentId: string, departmentData: any, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Department not found'\n      };\n    },\n    \n    deleteDepartment: async (departmentId: string, token: string) => {\n      await delay();\n      return {\n        data: {\n          success: true,\n          message: \"Department deleted successfully\"\n        }\n      };\n    }\n  },\n  \n  // Change Request endpoints\n  changeRequests: {\n    getChangeRequestsByProject: async (projectId: string, token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    },\n      \n    getChangeRequestById: async (requestId: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    createChangeRequest: async (requestData: any, token: string) => {\n      await delay();\n      return {\n        data: { id: '', ...requestData },\n        success: true\n      };\n    },\n      \n    updateChangeRequestStatus: async (requestId: string, status: any, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    approveChangeRequest: async (requestId: string, reviewNotes: string | undefined, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    rejectChangeRequest: async (requestId: string, reviewNotes: string, token: string) => {\n      await delay();\n      return {\n        data: null,\n        success: false,\n        error: 'Change request not found'\n      };\n    },\n      \n    getAllChangeRequests: async (token: string) => {\n      await delay();\n      return {\n        data: [],\n        success: true\n      };\n    }\n  },\n};\n\nexport default apiRoutes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}