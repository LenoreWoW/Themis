{"ast":null,"code":"import React from'react';import{Button}from'@mui/material';import{useTranslation}from'react-i18next';// Common button texts that should be translated\nimport{jsx as _jsx}from\"react/jsx-runtime\";/**\n * A button component that automatically translates common button labels\n */const TranslatedButton=_ref=>{let{text,children,...buttonProps}=_ref;const{t}=useTranslation();// Check if the text is a common button text that needs translation\nconst isCommonText=['submit','cancel','save','delete','edit','add','close','next','previous','ok','yes','no','back','continue','approve','reject','apply','confirm','done'].includes(text.toLowerCase());// If it's a common text, use the translation\nconst buttonText=isCommonText?t(`common.${text.toLowerCase()}`):text;return/*#__PURE__*/_jsx(Button,{...buttonProps,children:children||buttonText});};export default TranslatedButton;","map":{"version":3,"names":["React","Button","useTranslation","jsx","_jsx","TranslatedButton","_ref","text","children","buttonProps","t","isCommonText","includes","toLowerCase","buttonText"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/common/TranslatedButton.tsx"],"sourcesContent":["import React from 'react';\nimport { Button, ButtonProps } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\n// Common button texts that should be translated\ntype CommonButtonText = \n  'submit' | 'cancel' | 'save' | 'delete' | 'edit' | 'add' | 'close' | \n  'next' | 'previous' | 'ok' | 'yes' | 'no' | 'back' | 'continue' | \n  'approve' | 'reject' | 'apply' | 'confirm' | 'done';\n\ninterface TranslatedButtonProps extends Omit<ButtonProps, 'children'> {\n  text: CommonButtonText | string;\n  children?: React.ReactNode;\n}\n\n/**\n * A button component that automatically translates common button labels\n */\nconst TranslatedButton: React.FC<TranslatedButtonProps> = ({ \n  text,\n  children,\n  ...buttonProps \n}) => {\n  const { t } = useTranslation();\n  \n  // Check if the text is a common button text that needs translation\n  const isCommonText = [\n    'submit', 'cancel', 'save', 'delete', 'edit', 'add', 'close',\n    'next', 'previous', 'ok', 'yes', 'no', 'back', 'continue',\n    'approve', 'reject', 'apply', 'confirm', 'done'\n  ].includes(text.toLowerCase());\n  \n  // If it's a common text, use the translation\n  const buttonText = isCommonText \n    ? t(`common.${text.toLowerCase()}`) \n    : text;\n  \n  return (\n    <Button {...buttonProps}>\n      {children || buttonText}\n    </Button>\n  );\n};\n\nexport default TranslatedButton; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAqB,eAAe,CACnD,OAASC,cAAc,KAAQ,eAAe,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAWA;AACA;AACA,GACA,KAAM,CAAAC,gBAAiD,CAAGC,IAAA,EAIpD,IAJqD,CACzDC,IAAI,CACJC,QAAQ,CACR,GAAGC,WACL,CAAC,CAAAH,IAAA,CACC,KAAM,CAAEI,CAAE,CAAC,CAAGR,cAAc,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAS,YAAY,CAAG,CACnB,QAAQ,CAAE,QAAQ,CAAE,MAAM,CAAE,QAAQ,CAAE,MAAM,CAAE,KAAK,CAAE,OAAO,CAC5D,MAAM,CAAE,UAAU,CAAE,IAAI,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,UAAU,CACzD,SAAS,CAAE,QAAQ,CAAE,OAAO,CAAE,SAAS,CAAE,MAAM,CAChD,CAACC,QAAQ,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAC,UAAU,CAAGH,YAAY,CAC3BD,CAAC,CAAC,UAAUH,IAAI,CAACM,WAAW,CAAC,CAAC,EAAE,CAAC,CACjCN,IAAI,CAER,mBACEH,IAAA,CAACH,MAAM,KAAKQ,WAAW,CAAAD,QAAA,CACpBA,QAAQ,EAAIM,UAAU,CACjB,CAAC,CAEb,CAAC,CAED,cAAe,CAAAT,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}