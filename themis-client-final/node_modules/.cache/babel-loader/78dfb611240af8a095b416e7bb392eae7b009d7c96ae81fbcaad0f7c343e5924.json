{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Paper,Divider,Stack,Chip}from'@mui/material';import{TaskStatus}from'../../types';import TaskCard from'../Task/TaskCard';import{useTheme}from'@mui/material/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KanbanBoard=_ref=>{let{tasks,onTaskClick,onAddComment,onUpdateProgress}=_ref;const theme=useTheme();const[columns,setColumns]=useState({[TaskStatus.TODO]:[],[TaskStatus.IN_PROGRESS]:[],[TaskStatus.REVIEW]:[],[TaskStatus.DONE]:[]});useEffect(()=>{// Organize tasks by status\nconst newColumns={[TaskStatus.TODO]:tasks.filter(task=>task.status===TaskStatus.TODO),[TaskStatus.IN_PROGRESS]:tasks.filter(task=>task.status===TaskStatus.IN_PROGRESS),[TaskStatus.REVIEW]:tasks.filter(task=>task.status===TaskStatus.REVIEW),[TaskStatus.DONE]:tasks.filter(task=>task.status===TaskStatus.DONE)};setColumns(newColumns);},[tasks]);const getColumnTitle=status=>{switch(status){case TaskStatus.TODO:return'To Do';case TaskStatus.IN_PROGRESS:return'In Progress';case TaskStatus.REVIEW:return'In Review';case TaskStatus.DONE:return'Done';default:return status;}};const getColumnColor=status=>{switch(status){case TaskStatus.TODO:return theme.palette.grey[300];case TaskStatus.IN_PROGRESS:return theme.palette.primary.light;case TaskStatus.REVIEW:return theme.palette.warning.light;case TaskStatus.DONE:return theme.palette.success.light;default:return theme.palette.grey[300];}};return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',overflowX:'auto',p:1,gap:2,minHeight:500},children:Object.keys(columns).map(status=>/*#__PURE__*/_jsxs(Paper,{sx:{minWidth:300,width:300,maxHeight:'100%',display:'flex',flexDirection:'column',borderTop:5,borderColor:getColumnColor(status)},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,bgcolor:'background.default'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",component:\"h3\",fontWeight:\"bold\",children:[getColumnTitle(status),/*#__PURE__*/_jsx(Chip,{label:columns[status].length,size:\"small\",sx:{ml:1},color:status===TaskStatus.DONE?'success':status===TaskStatus.REVIEW?'warning':status===TaskStatus.IN_PROGRESS?'primary':'default'})]})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Stack,{spacing:2,sx:{p:2,overflowY:'auto',flexGrow:1},children:[columns[status].map(task=>/*#__PURE__*/_jsx(TaskCard,{task:task,onClick:()=>onTaskClick&&onTaskClick(task.id),onAddComment:onAddComment,onUpdateProgress:onUpdateProgress},task.id)),columns[status].length===0&&/*#__PURE__*/_jsx(Box,{sx:{p:2,textAlign:'center',color:'text.secondary',bgcolor:'background.paper',borderRadius:1,border:'1px dashed',borderColor:'divider'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"No tasks\"})})]})]},status))});};export default KanbanBoard;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Divider","Stack","Chip","TaskStatus","TaskCard","useTheme","jsx","_jsx","jsxs","_jsxs","KanbanBoard","_ref","tasks","onTaskClick","onAddComment","onUpdateProgress","theme","columns","setColumns","TODO","IN_PROGRESS","REVIEW","DONE","newColumns","filter","task","status","getColumnTitle","getColumnColor","palette","grey","primary","light","warning","success","sx","display","overflowX","p","gap","minHeight","children","Object","keys","map","minWidth","width","maxHeight","flexDirection","borderTop","borderColor","bgcolor","variant","component","fontWeight","label","length","size","ml","color","spacing","overflowY","flexGrow","onClick","id","textAlign","borderRadius","border"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/Kanban/KanbanBoard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Divider,\n  Stack,\n  Chip\n} from '@mui/material';\nimport { Task, TaskStatus, UserRole } from '../../types';\nimport TaskCard from '../Task/TaskCard';\nimport { useTheme } from '@mui/material/styles';\n\ninterface KanbanBoardProps {\n  tasks: Task[];\n  onTaskClick?: (taskId: string) => void;\n  onAddComment?: (taskId: string, comment: string) => Promise<void>;\n  onUpdateProgress?: (taskId: string, progress: number, newStatus: TaskStatus) => void;\n}\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = ({ \n  tasks, \n  onTaskClick, \n  onAddComment,\n  onUpdateProgress\n}) => {\n  const theme = useTheme();\n  const [columns, setColumns] = useState<{[key: string]: Task[]}>({\n    [TaskStatus.TODO]: [],\n    [TaskStatus.IN_PROGRESS]: [],\n    [TaskStatus.REVIEW]: [],\n    [TaskStatus.DONE]: []\n  });\n  \n  useEffect(() => {\n    // Organize tasks by status\n    const newColumns = {\n      [TaskStatus.TODO]: tasks.filter(task => task.status === TaskStatus.TODO),\n      [TaskStatus.IN_PROGRESS]: tasks.filter(task => task.status === TaskStatus.IN_PROGRESS),\n      [TaskStatus.REVIEW]: tasks.filter(task => task.status === TaskStatus.REVIEW),\n      [TaskStatus.DONE]: tasks.filter(task => task.status === TaskStatus.DONE)\n    };\n    setColumns(newColumns);\n  }, [tasks]);\n\n  const getColumnTitle = (status: TaskStatus) => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'In Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return status;\n    }\n  };\n\n  const getColumnColor = (status: TaskStatus) => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return theme.palette.grey[300];\n      case TaskStatus.IN_PROGRESS:\n        return theme.palette.primary.light;\n      case TaskStatus.REVIEW:\n        return theme.palette.warning.light;\n      case TaskStatus.DONE:\n        return theme.palette.success.light;\n      default:\n        return theme.palette.grey[300];\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', overflowX: 'auto', p: 1, gap: 2, minHeight: 500 }}>\n      {/* Render each status column */}\n      {Object.keys(columns).map((status) => (\n        <Paper \n          key={status}\n          sx={{ \n            minWidth: 300,\n            width: 300,\n            maxHeight: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            borderTop: 5, \n            borderColor: getColumnColor(status as TaskStatus)\n          }}\n        >\n          <Box sx={{ p: 2, bgcolor: 'background.default' }}>\n            <Typography variant=\"h6\" component=\"h3\" fontWeight=\"bold\">\n              {getColumnTitle(status as TaskStatus)}\n              <Chip \n                label={columns[status].length} \n                size=\"small\" \n                sx={{ ml: 1 }}\n                color={status === TaskStatus.DONE ? 'success' : \n                      status === TaskStatus.REVIEW ? 'warning' : \n                      status === TaskStatus.IN_PROGRESS ? 'primary' : 'default'}\n              />\n            </Typography>\n          </Box>\n          <Divider />\n          <Stack spacing={2} sx={{ p: 2, overflowY: 'auto', flexGrow: 1 }}>\n            {columns[status].map((task) => (\n              <TaskCard\n                key={task.id}\n                task={task}\n                onClick={() => onTaskClick && onTaskClick(task.id)}\n                onAddComment={onAddComment}\n                onUpdateProgress={onUpdateProgress}\n              />\n            ))}\n            {columns[status].length === 0 && (\n              <Box \n                sx={{ \n                  p: 2, \n                  textAlign: 'center', \n                  color: 'text.secondary',\n                  bgcolor: 'background.paper',\n                  borderRadius: 1,\n                  border: '1px dashed',\n                  borderColor: 'divider'\n                }}\n              >\n                <Typography variant=\"body2\">No tasks</Typography>\n              </Box>\n            )}\n          </Stack>\n        </Paper>\n      ))}\n    </Box>\n  );\n};\n\nexport default KanbanBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}