{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import Tree from'react-d3-tree';import{Box,Typography,Paper,IconButton,Stack,Tooltip,Menu,MenuItem,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,Chip,Divider}from'@mui/material';import{ZoomIn as ZoomInIcon,ZoomOut as ZoomOutIcon,CenterFocusStrong as CenterIcon,Add as AddIcon,Delete as DeleteIcon,Edit as EditIcon,Refresh as ReLayoutIcon,Save as SaveIcon,Dashboard as DashboardIcon}from'@mui/icons-material';import{TaskStatus,TaskPriority,UserRole}from'../../types';import'./MindMap.css';import{useTasks}from'../../context/TaskContext';// Define the structure of a node in the mind map\n// Props for the CustomNode component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Component to render the custom node\nconst CustomNode=_ref=>{let{nodeDatum,toggleNode,onNodeClick,onAddChild,onAddSibling,onDeleteNode,onEditNode}=_ref;const[menuAnchor,setMenuAnchor]=useState(null);const handleMenuOpen=e=>{e.stopPropagation();setMenuAnchor(e.currentTarget);};const handleMenuClose=()=>{setMenuAnchor(null);};const handleAddChild=e=>{e.stopPropagation();handleMenuClose();onAddChild(nodeDatum);};const handleAddSibling=e=>{e.stopPropagation();handleMenuClose();onAddSibling(nodeDatum);};const handleDelete=e=>{e.stopPropagation();handleMenuClose();onDeleteNode(nodeDatum);};const handleEdit=e=>{e.stopPropagation();handleMenuClose();onEditNode(nodeDatum);};const handleNodeClick=e=>{e.stopPropagation();toggleNode();onNodeClick(nodeDatum);};// Determine node color based on type or status\nconst getNodeColor=()=>{if(nodeDatum.__type==='project')return'var(--mind-map-node-project-color)';if(nodeDatum.__type==='category')return'var(--mind-map-node-category-color)';if(nodeDatum.__type==='milestone')return'var(--mind-map-node-milestone-color)';// For task nodes, color by status\nif(nodeDatum.__type==='task'){switch(nodeDatum.status){case TaskStatus.TODO:return'#9e9e9e';case TaskStatus.IN_PROGRESS:return'#2196f3';case TaskStatus.REVIEW:return'#ff9800';case TaskStatus.DONE:return'#4caf50';default:return'var(--mind-map-node-task-color)';}}// Default color for custom nodes\nreturn'var(--mind-map-node-task-color)';};return/*#__PURE__*/_jsxs(\"g\",{onClick:handleNodeClick,className:`mind-map-node ${nodeDatum.__type||'custom'}`,children:[/*#__PURE__*/_jsx(\"circle\",{r:nodeDatum.__type==='project'?25:nodeDatum.__type==='category'?20:15,fill:getNodeColor()}),/*#__PURE__*/_jsx(\"text\",{className:\"node-label\",fill:\"white\",textAnchor:\"middle\",dominantBaseline:\"middle\",y:nodeDatum.__type==='project'?0:0,style:{fontSize:nodeDatum.__type==='project'?'var(--mind-map-font-size-large)':'var(--mind-map-font-size-medium)',fontWeight:'bold',fontFamily:'var(--mind-map-font-primary)',textShadow:'0px 1px 2px rgba(0,0,0,0.5)'},children:nodeDatum.name.length>20?`${nodeDatum.name.substring(0,18)}...`:nodeDatum.name}),nodeDatum.attributes&&/*#__PURE__*/_jsx(\"text\",{className:\"node-attributes\",fill:\"white\",x:30,dy:\"1.2em\",style:{fontSize:'var(--mind-map-font-size-small)',fontFamily:'var(--mind-map-font-primary)',textShadow:'0px 1px 2px rgba(0,0,0,0.3)'},children:Object.entries(nodeDatum.attributes).map((_ref2,i)=>{let[key,value]=_ref2;return/*#__PURE__*/_jsx(\"tspan\",{x:30,dy:i===0?0:'1.2em',children:`${key}: ${value}`},key);})}),/*#__PURE__*/_jsx(\"circle\",{className:\"drag-indicator\",r:5,cx:40,cy:0,fill:\"#f5f5f5\",stroke:\"#333\",strokeWidth:1,style:{cursor:'grab'}}),/*#__PURE__*/_jsxs(\"g\",{className:\"action-button-group\",children:[/*#__PURE__*/_jsx(\"circle\",{onClickCapture:handleMenuOpen,className:\"action-button\",r:8,cx:-35,cy:0,fill:\"#f5f5f5\",stroke:\"#ccc\",strokeWidth:1,style:{cursor:'pointer'}}),/*#__PURE__*/_jsx(\"text\",{onClickCapture:handleMenuOpen,x:-35,y:3,textAnchor:\"middle\",style:{fontSize:'var(--mind-map-font-size-medium)',fill:'#555',cursor:'pointer',fontFamily:'var(--mind-map-font-primary)'},children:\"\\u22EE\"})]}),/*#__PURE__*/_jsxs(Menu,{anchorEl:menuAnchor,open:Boolean(menuAnchor),onClose:handleMenuClose,anchorOrigin:{vertical:'bottom',horizontal:'center'},transformOrigin:{vertical:'top',horizontal:'center'},children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:handleAddChild,children:[/*#__PURE__*/_jsx(AddIcon,{fontSize:\"small\",sx:{mr:1}}),\"Add Child\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:handleAddSibling,children:[/*#__PURE__*/_jsx(AddIcon,{fontSize:\"small\",sx:{mr:1}}),\"Add Sibling\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:handleEdit,children:[/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\",sx:{mr:1}}),\"Edit\"]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(MenuItem,{onClick:handleDelete,sx:{color:'error.main'},children:[/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",sx:{mr:1}}),\"Delete\"]})]})]});};const EnhancedMindMap=_ref3=>{let{project,tasks=[],mode='tasks',onSave,initialData,customizeEnabled=true}=_ref3;const containerRef=useRef(null);const[dimensions,setDimensions]=useState({width:800,height:600});const[zoom,setZoom]=useState(1);const[translate,setTranslate]=useState({x:0,y:0});const[treeData,setTreeData]=useState(null);const[activeNode,setActiveNode]=useState(null);// Dialog state for node operations\nconst[nodeDialogOpen,setNodeDialogOpen]=useState(false);const[dialogAction,setDialogAction]=useState('add-child');const[newNodeName,setNewNodeName]=useState('');// Customize panel state\nconst[customizeOpen,setCustomizeOpen]=useState(false);// Delete confirmation dialog\nconst[deleteDialogOpen,setDeleteDialogOpen]=useState(false);const[nodeToDelete,setNodeToDelete]=useState(null);const{addTask,updateTask,deleteTask}=useTasks();// Initialize mind map data\nuseEffect(()=>{if(initialData){setTreeData(initialData);return;}if(mode==='blank'){// Create a blank mind map with a single root node\nsetTreeData({id:`root-${Date.now()}`,name:'Central Idea',type:'custom',children:[]});}else if(mode==='tasks'&&project&&tasks){// Create a mind map based on tasks\nbuildTasksBasedMindMap();}},[project,tasks,mode,initialData]);// Build a mind map structure from project and tasks\nconst buildTasksBasedMindMap=()=>{if(!project||!tasks)return;// Group tasks by status\nconst tasksByStatus={[TaskStatus.TODO]:[],[TaskStatus.IN_PROGRESS]:[],[TaskStatus.REVIEW]:[],[TaskStatus.DONE]:[]};tasks.forEach(task=>{if(tasksByStatus[task.status]){tasksByStatus[task.status].push(task);}else{tasksByStatus[TaskStatus.TODO].push(task);}});// Create the mind map structure\nconst mindMapRoot={id:`project-${project.id}`,name:project.name,type:'project',attributes:{status:project.status,progress:`${project.progress}%`},children:Object.entries(tasksByStatus).map(_ref4=>{let[status,statusTasks]=_ref4;return{id:`status-${status}`,name:getStatusLabel(status),type:'category',children:statusTasks.map(task=>{var _task$assignee;return{id:`task-${task.id}`,name:task.title,type:'task',taskId:task.id,status:task.status,attributes:{priority:task.priority,assignee:(_task$assignee=task.assignee)!==null&&_task$assignee!==void 0&&_task$assignee.firstName?`${task.assignee.firstName} ${task.assignee.lastName}`:'Unassigned',dueDate:task.dueDate?new Date(task.dueDate).toLocaleDateString():'No due date'}};})};})};setTreeData(mindMapRoot);};// Helper function to get status label\nconst getStatusLabel=status=>{switch(status){case TaskStatus.TODO:return'To Do';case TaskStatus.IN_PROGRESS:return'In Progress';case TaskStatus.REVIEW:return'Review';case TaskStatus.DONE:return'Done';default:return'Unknown';}};// Function to reset view to center\nconst resetView=()=>{if(containerRef.current){const{width,height}=containerRef.current.getBoundingClientRect();setTranslate({x:width/2,y:height/3});setZoom(1);}};// Adjust zoom level\nconst handleZoomIn=()=>setZoom(prev=>Math.min(prev+0.2,2));const handleZoomOut=()=>setZoom(prev=>Math.max(prev-0.2,0.5));// Handle node clicks\nconst handleNodeClick=nodeDatum=>{setActiveNode(nodeDatum);};// Generate a unique node ID\nconst generateNodeId=()=>`node-${Date.now()}-${Math.floor(Math.random()*1000)}`;// Open dialog to add a child node\nconst handleAddChild=parentNode=>{setDialogAction('add-child');setActiveNode(parentNode);setNewNodeName('');setNodeDialogOpen(true);};// Open dialog to add a sibling node\nconst handleAddSibling=siblingNode=>{setDialogAction('add-sibling');setActiveNode(siblingNode);setNewNodeName('');setNodeDialogOpen(true);};// Open dialog to edit a node\nconst handleEditNode=node=>{setDialogAction('edit');setActiveNode(node);setNewNodeName(node.name);setNodeDialogOpen(true);};// Confirm deletion of a node\nconst handleDeleteNode=node=>{setNodeToDelete(node);setDeleteDialogOpen(true);};// Save and close node edit dialog\nconst handleSaveNode=()=>{if(!treeData||!activeNode||!newNodeName.trim()){setNodeDialogOpen(false);return;}// Function to recursively update nodes in the tree\nconst updateTreeNodes=function(){let nodes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return nodes.map(node=>{// If this is the node to update\nif(node.id===activeNode.id&&dialogAction==='edit'){return{...node,name:newNodeName};}// If this is a parent where we need to add a child\nif(node.id===activeNode.id&&dialogAction==='add-child'){const children=node.children||[];return{...node,children:[...children,{id:generateNodeId(),name:newNodeName,type:'custom',children:[]}]};}// If this has children, recursively update them\nif(node.children&&node.children.length>0){return{...node,children:updateTreeNodes(node.children)};}return node;});};// Function to add a sibling\nconst addSibling=(root,targetNodeId)=>{var _root$children;// If the root is the parent of the target node\nif((_root$children=root.children)!==null&&_root$children!==void 0&&_root$children.some(child=>child.id===targetNodeId)){return{...root,children:[...(root.children||[]),{id:generateNodeId(),name:newNodeName,type:'custom',children:[]}]};}// Otherwise search deeper in the tree\nif(root.children){return{...root,children:root.children.map(child=>addSibling(child,targetNodeId))};}return root;};// Update the tree data\nif(dialogAction==='add-sibling'&&treeData){// Need to find the parent of the activeNode\nsetTreeData(addSibling(treeData,activeNode.id));}else if(treeData){// Handle edit or add child\nsetTreeData({...treeData,children:updateTreeNodes(treeData.children||[])});}setNodeDialogOpen(false);};// Execute node deletion\nconst handleConfirmDelete=()=>{if(!treeData||!nodeToDelete){setDeleteDialogOpen(false);return;}// Function to recursively remove a node from the tree\nconst removeNode=function(){let nodes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return nodes.filter(node=>node.id!==nodeToDelete.id).map(node=>{if(node.children&&node.children.length>0){return{...node,children:removeNode(node.children)};}return node;});};// Update the tree data\nif(treeData.id===nodeToDelete.id){// If we're deleting the root, this shouldn't normally happen\nsetTreeData(null);}else{setTreeData({...treeData,children:removeNode(treeData.children||[])});}setDeleteDialogOpen(false);setNodeToDelete(null);};// Automatically rearrange the layout\nconst handleReLayout=()=>{// This is a placeholder - with react-d3-tree, we'd need to manipulate\n// the tree coordinates or use a different approach to truly re-layout\n// For now, we just reset the view to center the current tree\nresetView();};// Handle saving the mind map\nconst handleSave=()=>{if(onSave&&treeData){onSave(treeData);}};// Update dimensions when component mounts or window resizes\nuseEffect(()=>{const updateDimensions=()=>{if(containerRef.current){const{width,height}=containerRef.current.getBoundingClientRect();setDimensions({width,height});setTranslate({x:width/2,y:height/3});}};updateDimensions();window.addEventListener('resize',updateDimensions);return()=>{window.removeEventListener('resize',updateDimensions);};},[]);const handleAddNode=async(parentNode,newNodeName)=>{if(!project)return;const newTask={id:`temp-${Date.now()}`,projectId:project.id,title:newNodeName,description:'',status:TaskStatus.TODO,priority:TaskPriority.MEDIUM,dueDate:new Date(Date.now()+7*24*60*60*1000).toISOString(),// 7 days from now\nstartDate:new Date().toISOString(),project:{id:project.id,name:project.name,description:project.description,status:project.status,priority:project.priority,startDate:project.startDate,endDate:project.endDate,projectManager:project.projectManager,department:project.department,progress:0,// Default value\nbudget:0,// Default value\nactualCost:0,// Default value\ncreatedAt:project.createdAt,updatedAt:project.updatedAt,templateType:project.templateType},assignee:undefined,createdBy:{id:'current-user',firstName:'Current',lastName:'User',email:'user@example.com',role:UserRole.PROJECT_MANAGER,department:project.department,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};try{await addTask(newTask);// The TaskContext will automatically update the tasks list\n}catch(err){console.error('Error adding task:',err);}};const handleEditTaskNode=async(node,newName)=>{if(!node.taskId)return;try{// Update the task with new name\nconst updatedTask={...tasks.find(t=>t.id===node.taskId),title:newName};await updateTask(node.taskId,updatedTask);}catch(err){console.error('Error updating task:',err);}};const handleDeleteTaskNode=async node=>{if(!node.taskId)return;try{await deleteTask(node.taskId);}catch(err){console.error('Error deleting task:',err);}};return/*#__PURE__*/_jsxs(Paper,{elevation:1,sx:{height:'100%',borderRadius:2,overflow:'hidden',position:'relative'},children:[/*#__PURE__*/_jsxs(Box,{sx:{height:'100%',position:'relative'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',p:1,borderBottom:'1px solid #eee',backgroundColor:'#f9f9f9'},children:[/*#__PURE__*/_jsx(Stack,{direction:\"row\",spacing:1,children:/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(DashboardIcon,{}),onClick:()=>setCustomizeOpen(!customizeOpen),variant:customizeOpen?\"contained\":\"outlined\",disabled:!customizeEnabled,children:\"Customize\"})}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,children:[/*#__PURE__*/_jsx(Button,{size:\"small\",startIcon:/*#__PURE__*/_jsx(ReLayoutIcon,{}),onClick:handleReLayout,children:\"Re-Layout\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:handleSave,disabled:!onSave,children:\"Save\"})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',height:customizeEnabled?'calc(100% - 48px)':'100%'},children:[/*#__PURE__*/_jsx(Box,{ref:containerRef,className:\"mind-map-container\",sx:{width:customizeOpen?'calc(100% - 300px)':'100%',height:'100%',transition:'width 0.3s ease-in-out'},children:treeData&&/*#__PURE__*/_jsx(Tree,{data:treeData,orientation:\"horizontal\",renderCustomNodeElement:rd3tProps=>/*#__PURE__*/_jsx(CustomNode,{nodeDatum:rd3tProps.nodeDatum,toggleNode:rd3tProps.toggleNode,onNodeClick:handleNodeClick,onAddChild:handleAddChild,onAddSibling:handleAddSibling,onDeleteNode:handleDeleteNode,onEditNode:handleEditNode}),zoomable:true,zoom:zoom,translate:{x:translate.x,y:translate.y},separation:{siblings:1.5,nonSiblings:2},pathClassFunc:()=>'mind-map-link',initialDepth:1,depthFactor:300,dimensions:dimensions,draggable:true,collapsible:true})}),customizeEnabled&&customizeOpen&&/*#__PURE__*/_jsxs(Box,{sx:{width:300,height:'100%',p:2,borderLeft:'1px solid #eee',overflowY:'auto',backgroundColor:'#f9f9f9'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Customize Mind Map\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Mind Map Mode\"}),/*#__PURE__*/_jsx(Chip,{label:mode==='tasks'?'Tasks Mode':'Blank Mode',color:\"primary\",variant:\"outlined\",sx:{mr:1}})]}),activeNode&&/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Selected Node\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",activeNode.name]}),activeNode.type&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Type:\"}),\" \",activeNode.type]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleAddChild(activeNode),sx:{mr:1,mb:1},children:\"Add Child\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:()=>handleEditNode(activeNode),sx:{mr:1,mb:1},children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",color:\"error\",startIcon:/*#__PURE__*/_jsx(DeleteIcon,{}),onClick:()=>handleDeleteNode(activeNode),children:\"Delete\"})]})]})]})]}),/*#__PURE__*/_jsx(Box,{className:\"mind-map-controls\",sx:{position:'absolute',bottom:16,right:16,backgroundColor:'rgba(255, 255, 255, 0.8)',borderRadius:2,padding:1,boxShadow:1},children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Zoom In\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleZoomIn,children:/*#__PURE__*/_jsx(ZoomInIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Zoom Out\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleZoomOut,children:/*#__PURE__*/_jsx(ZoomOutIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Center\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:resetView,children:/*#__PURE__*/_jsx(CenterIcon,{})})})]})})]}),/*#__PURE__*/_jsxs(Dialog,{open:nodeDialogOpen,onClose:()=>setNodeDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:dialogAction==='add-child'?'Add Child Node':dialogAction==='add-sibling'?'Add Sibling Node':'Edit Node'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",label:\"Node Name\",fullWidth:true,value:newNodeName,onChange:e=>setNewNodeName(e.target.value)})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNodeDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSaveNode,variant:\"contained\",disabled:!newNodeName.trim(),children:\"Save\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:deleteDialogOpen,onClose:()=>setDeleteDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Delete Node\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Typography,{children:[\"Are you sure you want to delete \\\"\",nodeToDelete===null||nodeToDelete===void 0?void 0:nodeToDelete.name,\"\\\"? This will also remove all of its children.\"]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setDeleteDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirmDelete,variant:\"contained\",color:\"error\",children:\"Delete\"})]})]})]});};export default EnhancedMindMap;","map":{"version":3,"names":["React","useState","useRef","useEffect","Tree","Box","Typography","Paper","IconButton","Stack","Tooltip","Menu","MenuItem","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Chip","Divider","ZoomIn","ZoomInIcon","ZoomOut","ZoomOutIcon","CenterFocusStrong","CenterIcon","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","Refresh","ReLayoutIcon","Save","SaveIcon","Dashboard","DashboardIcon","TaskStatus","TaskPriority","UserRole","useTasks","jsx","_jsx","jsxs","_jsxs","CustomNode","_ref","nodeDatum","toggleNode","onNodeClick","onAddChild","onAddSibling","onDeleteNode","onEditNode","menuAnchor","setMenuAnchor","handleMenuOpen","e","stopPropagation","currentTarget","handleMenuClose","handleAddChild","handleAddSibling","handleDelete","handleEdit","handleNodeClick","getNodeColor","__type","status","TODO","IN_PROGRESS","REVIEW","DONE","onClick","className","children","r","fill","textAnchor","dominantBaseline","y","style","fontSize","fontWeight","fontFamily","textShadow","name","length","substring","attributes","x","dy","Object","entries","map","_ref2","i","key","value","cx","cy","stroke","strokeWidth","cursor","onClickCapture","anchorEl","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","sx","mr","color","EnhancedMindMap","_ref3","project","tasks","mode","onSave","initialData","customizeEnabled","containerRef","dimensions","setDimensions","width","height","zoom","setZoom","translate","setTranslate","treeData","setTreeData","activeNode","setActiveNode","nodeDialogOpen","setNodeDialogOpen","dialogAction","setDialogAction","newNodeName","setNewNodeName","customizeOpen","setCustomizeOpen","deleteDialogOpen","setDeleteDialogOpen","nodeToDelete","setNodeToDelete","addTask","updateTask","deleteTask","id","Date","now","type","buildTasksBasedMindMap","tasksByStatus","forEach","task","push","mindMapRoot","progress","_ref4","statusTasks","getStatusLabel","_task$assignee","title","taskId","priority","assignee","firstName","lastName","dueDate","toLocaleDateString","resetView","current","getBoundingClientRect","handleZoomIn","prev","Math","min","handleZoomOut","max","generateNodeId","floor","random","parentNode","siblingNode","handleEditNode","node","handleDeleteNode","handleSaveNode","trim","updateTreeNodes","nodes","arguments","undefined","addSibling","root","targetNodeId","_root$children","some","child","handleConfirmDelete","removeNode","filter","handleReLayout","handleSave","updateDimensions","window","addEventListener","removeEventListener","handleAddNode","newTask","projectId","description","MEDIUM","toISOString","startDate","endDate","projectManager","department","budget","actualCost","createdAt","updatedAt","templateType","createdBy","email","role","PROJECT_MANAGER","err","console","error","handleEditTaskNode","newName","updatedTask","find","t","handleDeleteTaskNode","elevation","borderRadius","overflow","position","display","justifyContent","p","borderBottom","backgroundColor","direction","spacing","size","startIcon","variant","disabled","ref","transition","data","orientation","renderCustomNodeElement","rd3tProps","zoomable","separation","siblings","nonSiblings","pathClassFunc","initialDepth","depthFactor","draggable","collapsible","borderLeft","overflowY","gutterBottom","mb","label","mt","bottom","right","padding","boxShadow","autoFocus","margin","fullWidth","onChange","target"],"sources":["/Users/hassanalsahli/Desktop/Themis/themis-client-final/src/components/MindMap/EnhancedMindMap.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Tree from 'react-d3-tree';\nimport { \n  Box, \n  Typography, \n  Paper, \n  IconButton, \n  Stack, \n  Tooltip, \n  Menu,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Chip,\n  Divider\n} from '@mui/material';\nimport {\n  ZoomIn as ZoomInIcon,\n  ZoomOut as ZoomOutIcon,\n  CenterFocusStrong as CenterIcon,\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  Menu as MenuIcon,\n  Refresh as ReLayoutIcon,\n  Save as SaveIcon,\n  Dashboard as DashboardIcon\n} from '@mui/icons-material';\nimport { Project, Task, TaskStatus, TaskPriority, UserRole } from '../../types';\nimport './MindMap.css';\nimport { useTasks } from '../../context/TaskContext';\n\n// Define the structure of a node in the mind map\ninterface MindMapNode {\n  id: string;\n  name: string;\n  type?: 'task' | 'project' | 'category' | 'milestone' | 'custom';\n  status?: TaskStatus;\n  attributes?: Record<string, any>;\n  taskId?: string; // Reference to actual task ID if applicable\n  children?: MindMapNode[];\n}\n\ninterface EnhancedMindMapProps {\n  project?: Project;\n  tasks?: Task[];\n  mode: 'tasks' | 'blank';\n  onSave?: (data: any) => void;\n  initialData?: MindMapNode;\n  customizeEnabled?: boolean;\n}\n\n// Props for the CustomNode component\ninterface CustomNodeProps {\n  nodeDatum: any;\n  toggleNode: () => void;\n  onNodeClick: (nodeDatum: any) => void;\n  onAddChild: (nodeDatum: any) => void;\n  onAddSibling: (nodeDatum: any) => void;\n  onDeleteNode: (nodeDatum: any) => void;\n  onEditNode: (nodeDatum: any) => void;\n}\n\n// Component to render the custom node\nconst CustomNode: React.FC<CustomNodeProps> = ({\n  nodeDatum,\n  toggleNode,\n  onNodeClick,\n  onAddChild,\n  onAddSibling,\n  onDeleteNode,\n  onEditNode\n}) => {\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n  \n  const handleMenuOpen = (e: React.MouseEvent<SVGCircleElement | SVGTextElement>) => {\n    e.stopPropagation();\n    setMenuAnchor(e.currentTarget as unknown as HTMLElement);\n  };\n  \n  const handleMenuClose = () => {\n    setMenuAnchor(null);\n  };\n  \n  const handleAddChild = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddChild(nodeDatum);\n  };\n\n  const handleAddSibling = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onAddSibling(nodeDatum);\n  };\n\n  const handleDelete = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onDeleteNode(nodeDatum);\n  };\n\n  const handleEdit = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    handleMenuClose();\n    onEditNode(nodeDatum);\n  };\n  \n  const handleNodeClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    toggleNode();\n    onNodeClick(nodeDatum);\n  };\n  \n  // Determine node color based on type or status\n  const getNodeColor = () => {\n    if (nodeDatum.__type === 'project') return 'var(--mind-map-node-project-color)';\n    if (nodeDatum.__type === 'category') return 'var(--mind-map-node-category-color)';\n    if (nodeDatum.__type === 'milestone') return 'var(--mind-map-node-milestone-color)';\n    \n    // For task nodes, color by status\n    if (nodeDatum.__type === 'task') {\n      switch(nodeDatum.status) {\n        case TaskStatus.TODO: return '#9e9e9e';\n        case TaskStatus.IN_PROGRESS: return '#2196f3';\n        case TaskStatus.REVIEW: return '#ff9800';\n        case TaskStatus.DONE: return '#4caf50';\n        default: return 'var(--mind-map-node-task-color)';\n      }\n    }\n    \n    // Default color for custom nodes\n    return 'var(--mind-map-node-task-color)';\n  };\n\n  return (\n    <g \n      onClick={handleNodeClick}\n      className={`mind-map-node ${nodeDatum.__type || 'custom'}`}\n    >\n      <circle \n        r={nodeDatum.__type === 'project' ? 25 : nodeDatum.__type === 'category' ? 20 : 15} \n        fill={getNodeColor()}\n      />\n      \n      <text\n        className=\"node-label\"\n        fill=\"white\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        y={nodeDatum.__type === 'project' ? 0 : 0}\n        style={{ \n          fontSize: nodeDatum.__type === 'project' ? 'var(--mind-map-font-size-large)' : 'var(--mind-map-font-size-medium)', \n          fontWeight: 'bold',\n          fontFamily: 'var(--mind-map-font-primary)',\n          textShadow: '0px 1px 2px rgba(0,0,0,0.5)'\n        }}\n      >\n        {nodeDatum.name.length > 20 ? `${nodeDatum.name.substring(0, 18)}...` : nodeDatum.name}\n      </text>\n      \n      {nodeDatum.attributes && (\n        <text \n          className=\"node-attributes\"\n          fill=\"white\"\n          x={30}\n          dy=\"1.2em\"\n          style={{ \n            fontSize: 'var(--mind-map-font-size-small)',\n            fontFamily: 'var(--mind-map-font-primary)',\n            textShadow: '0px 1px 2px rgba(0,0,0,0.3)'\n          }}\n        >\n          {Object.entries(nodeDatum.attributes).map(([key, value], i) => (\n            <tspan key={key} x={30} dy={i === 0 ? 0 : '1.2em'}>\n              {`${key}: ${value}`}\n            </tspan>\n          ))}\n        </text>\n      )}\n      \n      {/* Drag diamond indicator */}\n      <circle\n        className=\"drag-indicator\"\n        r={5}\n        cx={40}\n        cy={0}\n        fill=\"#f5f5f5\"\n        stroke=\"#333\"\n        strokeWidth={1}\n        style={{ cursor: 'grab' }}\n      />\n      \n      {/* Action button */}\n      <g className=\"action-button-group\">\n        <circle\n          onClickCapture={handleMenuOpen}\n          className=\"action-button\"\n          r={8}\n          cx={-35}\n          cy={0}\n          fill=\"#f5f5f5\"\n          stroke=\"#ccc\"\n          strokeWidth={1}\n          style={{ cursor: 'pointer' }}\n        />\n        \n        <text\n          onClickCapture={handleMenuOpen}\n          x={-35}\n          y={3}\n          textAnchor=\"middle\"\n          style={{ \n            fontSize: 'var(--mind-map-font-size-medium)', \n            fill: '#555', \n            cursor: 'pointer',\n            fontFamily: 'var(--mind-map-font-primary)'\n          }}\n        >\n          ⋮\n        </text>\n      </g>\n      \n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={handleMenuClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <MenuItem onClick={handleAddChild}>\n          <AddIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Add Child\n        </MenuItem>\n        <MenuItem onClick={handleAddSibling}>\n          <AddIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Add Sibling\n        </MenuItem>\n        <MenuItem onClick={handleEdit}>\n          <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Edit\n        </MenuItem>\n        <Divider />\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\n          <DeleteIcon fontSize=\"small\" sx={{ mr: 1 }} />\n          Delete\n        </MenuItem>\n      </Menu>\n    </g>\n  );\n};\n\nconst EnhancedMindMap: React.FC<EnhancedMindMapProps> = ({ \n  project, \n  tasks = [], \n  mode = 'tasks',\n  onSave,\n  initialData,\n  customizeEnabled = true\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 600 });\n  const [zoom, setZoom] = useState(1);\n  const [translate, setTranslate] = useState({ x: 0, y: 0 });\n  const [treeData, setTreeData] = useState<MindMapNode | null>(null);\n  const [activeNode, setActiveNode] = useState<MindMapNode | null>(null);\n  \n  // Dialog state for node operations\n  const [nodeDialogOpen, setNodeDialogOpen] = useState(false);\n  const [dialogAction, setDialogAction] = useState<'add-child' | 'add-sibling' | 'edit'>('add-child');\n  const [newNodeName, setNewNodeName] = useState('');\n  \n  // Customize panel state\n  const [customizeOpen, setCustomizeOpen] = useState(false);\n  \n  // Delete confirmation dialog\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [nodeToDelete, setNodeToDelete] = useState<MindMapNode | null>(null);\n\n  const { addTask, updateTask, deleteTask } = useTasks();\n\n  // Initialize mind map data\n  useEffect(() => {\n    if (initialData) {\n      setTreeData(initialData);\n      return;\n    }\n    \n    if (mode === 'blank') {\n      // Create a blank mind map with a single root node\n      setTreeData({\n        id: `root-${Date.now()}`,\n        name: 'Central Idea',\n        type: 'custom',\n        children: []\n      });\n    } else if (mode === 'tasks' && project && tasks) {\n      // Create a mind map based on tasks\n      buildTasksBasedMindMap();\n    }\n  }, [project, tasks, mode, initialData]);\n\n  // Build a mind map structure from project and tasks\n  const buildTasksBasedMindMap = () => {\n    if (!project || !tasks) return;\n\n    // Group tasks by status\n    const tasksByStatus: Record<string, Task[]> = {\n      [TaskStatus.TODO]: [],\n      [TaskStatus.IN_PROGRESS]: [],\n      [TaskStatus.REVIEW]: [],\n      [TaskStatus.DONE]: []\n    };\n\n    tasks.forEach(task => {\n      if (tasksByStatus[task.status]) {\n        tasksByStatus[task.status].push(task);\n      } else {\n        tasksByStatus[TaskStatus.TODO].push(task);\n      }\n    });\n\n    // Create the mind map structure\n    const mindMapRoot: MindMapNode = {\n      id: `project-${project.id}`,\n      name: project.name,\n      type: 'project',\n      attributes: {\n        status: project.status,\n        progress: `${project.progress}%`\n      },\n      children: Object.entries(tasksByStatus).map(([status, statusTasks]) => ({\n        id: `status-${status}`,\n        name: getStatusLabel(status as TaskStatus),\n        type: 'category',\n        children: statusTasks.map(task => ({\n          id: `task-${task.id}`,\n          name: task.title,\n          type: 'task',\n          taskId: task.id,\n          status: task.status,\n          attributes: {\n            priority: task.priority,\n            assignee: task.assignee?.firstName \n              ? `${task.assignee.firstName} ${task.assignee.lastName}`\n              : 'Unassigned',\n            dueDate: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : 'No due date'\n          }\n        }))\n      }))\n    };\n\n    setTreeData(mindMapRoot);\n  };\n\n  // Helper function to get status label\n  const getStatusLabel = (status: TaskStatus): string => {\n    switch (status) {\n      case TaskStatus.TODO:\n        return 'To Do';\n      case TaskStatus.IN_PROGRESS:\n        return 'In Progress';\n      case TaskStatus.REVIEW:\n        return 'Review';\n      case TaskStatus.DONE:\n        return 'Done';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  // Function to reset view to center\n  const resetView = () => {\n    if (containerRef.current) {\n      const { width, height } = containerRef.current.getBoundingClientRect();\n      setTranslate({ x: width / 2, y: height / 3 });\n      setZoom(1);\n    }\n  };\n\n  // Adjust zoom level\n  const handleZoomIn = () => setZoom(prev => Math.min(prev + 0.2, 2));\n  const handleZoomOut = () => setZoom(prev => Math.max(prev - 0.2, 0.5));\n\n  // Handle node clicks\n  const handleNodeClick = (nodeDatum: any) => {\n    setActiveNode(nodeDatum);\n  };\n\n  // Generate a unique node ID\n  const generateNodeId = () => `node-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n\n  // Open dialog to add a child node\n  const handleAddChild = (parentNode: any) => {\n    setDialogAction('add-child');\n    setActiveNode(parentNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to add a sibling node\n  const handleAddSibling = (siblingNode: any) => {\n    setDialogAction('add-sibling');\n    setActiveNode(siblingNode);\n    setNewNodeName('');\n    setNodeDialogOpen(true);\n  };\n\n  // Open dialog to edit a node\n  const handleEditNode = (node: any) => {\n    setDialogAction('edit');\n    setActiveNode(node);\n    setNewNodeName(node.name);\n    setNodeDialogOpen(true);\n  };\n\n  // Confirm deletion of a node\n  const handleDeleteNode = (node: any) => {\n    setNodeToDelete(node);\n    setDeleteDialogOpen(true);\n  };\n\n  // Save and close node edit dialog\n  const handleSaveNode = () => {\n    if (!treeData || !activeNode || !newNodeName.trim()) {\n      setNodeDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively update nodes in the tree\n    const updateTreeNodes = (nodes: MindMapNode[] = []): MindMapNode[] => {\n      return nodes.map(node => {\n        // If this is the node to update\n        if (node.id === activeNode.id && dialogAction === 'edit') {\n          return { ...node, name: newNodeName };\n        }\n        \n        // If this is a parent where we need to add a child\n        if (node.id === activeNode.id && dialogAction === 'add-child') {\n          const children = node.children || [];\n          return {\n            ...node,\n            children: [\n              ...children,\n              {\n                id: generateNodeId(),\n                name: newNodeName,\n                type: 'custom',\n                children: []\n              }\n            ]\n          };\n        }\n        \n        // If this has children, recursively update them\n        if (node.children && node.children.length > 0) {\n          return {\n            ...node,\n            children: updateTreeNodes(node.children)\n          };\n        }\n        \n        return node;\n      });\n    };\n\n    // Function to add a sibling\n    const addSibling = (root: MindMapNode, targetNodeId: string): MindMapNode => {\n      // If the root is the parent of the target node\n      if (root.children?.some(child => child.id === targetNodeId)) {\n        return {\n          ...root,\n          children: [\n            ...(root.children || []),\n            {\n              id: generateNodeId(),\n              name: newNodeName,\n              type: 'custom',\n              children: []\n            }\n          ]\n        };\n      }\n      \n      // Otherwise search deeper in the tree\n      if (root.children) {\n        return {\n          ...root,\n          children: root.children.map(child => addSibling(child, targetNodeId))\n        };\n      }\n      \n      return root;\n    };\n\n    // Update the tree data\n    if (dialogAction === 'add-sibling' && treeData) {\n      // Need to find the parent of the activeNode\n      setTreeData(addSibling(treeData, activeNode.id));\n    } else if (treeData) {\n      // Handle edit or add child\n      setTreeData({\n        ...treeData,\n        children: updateTreeNodes(treeData.children || [])\n      });\n    }\n\n    setNodeDialogOpen(false);\n  };\n\n  // Execute node deletion\n  const handleConfirmDelete = () => {\n    if (!treeData || !nodeToDelete) {\n      setDeleteDialogOpen(false);\n      return;\n    }\n\n    // Function to recursively remove a node from the tree\n    const removeNode = (nodes: MindMapNode[] = []): MindMapNode[] => {\n      return nodes\n        .filter(node => node.id !== nodeToDelete.id)\n        .map(node => {\n          if (node.children && node.children.length > 0) {\n            return {\n              ...node,\n              children: removeNode(node.children)\n            };\n          }\n          return node;\n        });\n    };\n\n    // Update the tree data\n    if (treeData.id === nodeToDelete.id) {\n      // If we're deleting the root, this shouldn't normally happen\n      setTreeData(null);\n    } else {\n      setTreeData({\n        ...treeData,\n        children: removeNode(treeData.children || [])\n      });\n    }\n\n    setDeleteDialogOpen(false);\n    setNodeToDelete(null);\n  };\n\n  // Automatically rearrange the layout\n  const handleReLayout = () => {\n    // This is a placeholder - with react-d3-tree, we'd need to manipulate\n    // the tree coordinates or use a different approach to truly re-layout\n    // For now, we just reset the view to center the current tree\n    resetView();\n  };\n\n  // Handle saving the mind map\n  const handleSave = () => {\n    if (onSave && treeData) {\n      onSave(treeData);\n    }\n  };\n\n  // Update dimensions when component mounts or window resizes\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { width, height } = containerRef.current.getBoundingClientRect();\n        setDimensions({ width, height });\n        setTranslate({ x: width / 2, y: height / 3 });\n      }\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n\n  const handleAddNode = async (parentNode: MindMapNode, newNodeName: string) => {\n    if (!project) return;\n\n    const newTask: Task = {\n      id: `temp-${Date.now()}`,\n      projectId: project.id,\n      title: newNodeName,\n      description: '',\n      status: TaskStatus.TODO,\n      priority: TaskPriority.MEDIUM,\n      dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days from now\n      startDate: new Date().toISOString(),\n      project: {\n        id: project.id,\n        name: project.name,\n        description: project.description,\n        status: project.status,\n        priority: project.priority,\n        startDate: project.startDate,\n        endDate: project.endDate,\n        projectManager: project.projectManager,\n        department: project.department,\n        progress: 0, // Default value\n        budget: 0, // Default value\n        actualCost: 0, // Default value\n        createdAt: project.createdAt,\n        updatedAt: project.updatedAt,\n        templateType: project.templateType\n      },\n      assignee: undefined,\n      createdBy: {\n        id: 'current-user',\n        firstName: 'Current',\n        lastName: 'User',\n        email: 'user@example.com',\n        role: UserRole.PROJECT_MANAGER,\n        department: project.department,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    try {\n      await addTask(newTask);\n      // The TaskContext will automatically update the tasks list\n    } catch (err) {\n      console.error('Error adding task:', err);\n    }\n  };\n\n  const handleEditTaskNode = async (node: MindMapNode, newName: string) => {\n    if (!node.taskId) return;\n\n    try {\n      // Update the task with new name\n      const updatedTask = { ...tasks.find(t => t.id === node.taskId), title: newName };\n      await updateTask(node.taskId, updatedTask);\n    } catch (err) {\n      console.error('Error updating task:', err);\n    }\n  };\n\n  const handleDeleteTaskNode = async (node: MindMapNode) => {\n    if (!node.taskId) return;\n\n    try {\n      await deleteTask(node.taskId);\n    } catch (err) {\n      console.error('Error deleting task:', err);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ height: '100%', borderRadius: 2, overflow: 'hidden', position: 'relative' }}>\n      <Box sx={{ height: '100%', position: 'relative' }}>\n        {/* Top toolbar */}\n        <Box \n          sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            p: 1, \n            borderBottom: '1px solid #eee',\n            backgroundColor: '#f9f9f9'\n          }}\n        >\n          <Stack direction=\"row\" spacing={1}>\n            <Button \n              size=\"small\" \n              startIcon={<DashboardIcon />}\n              onClick={() => setCustomizeOpen(!customizeOpen)}\n              variant={customizeOpen ? \"contained\" : \"outlined\"}\n              disabled={!customizeEnabled}\n            >\n              Customize\n            </Button>\n          </Stack>\n          \n          <Stack direction=\"row\" spacing={1}>\n            <Button \n              size=\"small\" \n              startIcon={<ReLayoutIcon />}\n              onClick={handleReLayout}\n            >\n              Re-Layout\n            </Button>\n            \n            <Button \n              size=\"small\" \n              variant=\"contained\" \n              color=\"primary\" \n              startIcon={<SaveIcon />}\n              onClick={handleSave}\n              disabled={!onSave}\n            >\n              Save\n            </Button>\n          </Stack>\n        </Box>\n        \n        {/* Mind map view area */}\n        <Box sx={{ display: 'flex', height: customizeEnabled ? 'calc(100% - 48px)' : '100%' }}>\n          {/* Main tree visualization */}\n          <Box \n            ref={containerRef} \n            className=\"mind-map-container\" \n            sx={{ \n              width: customizeOpen ? 'calc(100% - 300px)' : '100%', \n              height: '100%',\n              transition: 'width 0.3s ease-in-out'\n            }}\n          >\n            {treeData && (\n              <Tree \n                data={treeData}\n                orientation=\"horizontal\"\n                renderCustomNodeElement={(rd3tProps) => (\n                  <CustomNode\n                    nodeDatum={rd3tProps.nodeDatum}\n                    toggleNode={rd3tProps.toggleNode}\n                    onNodeClick={handleNodeClick}\n                    onAddChild={handleAddChild}\n                    onAddSibling={handleAddSibling}\n                    onDeleteNode={handleDeleteNode}\n                    onEditNode={handleEditNode}\n                  />\n                )}\n                zoomable={true}\n                zoom={zoom}\n                translate={{ x: translate.x, y: translate.y }}\n                separation={{ siblings: 1.5, nonSiblings: 2 }}\n                pathClassFunc={() => 'mind-map-link'}\n                initialDepth={1}\n                depthFactor={300}\n                dimensions={dimensions}\n                draggable={true}\n                collapsible={true}\n              />\n            )}\n          </Box>\n          \n          {/* Customize panel */}\n          {customizeEnabled && customizeOpen && (\n            <Box \n              sx={{ \n                width: 300,\n                height: '100%',\n                p: 2,\n                borderLeft: '1px solid #eee',\n                overflowY: 'auto',\n                backgroundColor: '#f9f9f9'\n              }}\n            >\n              <Typography variant=\"h6\" gutterBottom>\n                Customize Mind Map\n              </Typography>\n              \n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Mind Map Mode\n                </Typography>\n                <Chip \n                  label={mode === 'tasks' ? 'Tasks Mode' : 'Blank Mode'} \n                  color=\"primary\" \n                  variant=\"outlined\"\n                  sx={{ mr: 1 }}\n                />\n              </Box>\n              \n              {activeNode && (\n                <Box sx={{ mb: 3 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Selected Node\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    <strong>Name:</strong> {activeNode.name}\n                  </Typography>\n                  {activeNode.type && (\n                    <Typography variant=\"body2\">\n                      <strong>Type:</strong> {activeNode.type}\n                    </Typography>\n                  )}\n                  <Box sx={{ mt: 2 }}>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      startIcon={<AddIcon />}\n                      onClick={() => handleAddChild(activeNode)}\n                      sx={{ mr: 1, mb: 1 }}\n                    >\n                      Add Child\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      startIcon={<EditIcon />}\n                      onClick={() => handleEditNode(activeNode)}\n                      sx={{ mr: 1, mb: 1 }}\n                    >\n                      Edit\n                    </Button>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\" \n                      color=\"error\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => handleDeleteNode(activeNode)}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Zoom controls */}\n        <Box \n          className=\"mind-map-controls\"\n          sx={{ \n            position: 'absolute', \n            bottom: 16, \n            right: 16, \n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderRadius: 2,\n            padding: 1,\n            boxShadow: 1\n          }}\n        >\n          <Stack direction=\"row\" spacing={1}>\n            <Tooltip title=\"Zoom In\">\n              <IconButton size=\"small\" onClick={handleZoomIn}>\n                <ZoomInIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Zoom Out\">\n              <IconButton size=\"small\" onClick={handleZoomOut}>\n                <ZoomOutIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Center\">\n              <IconButton size=\"small\" onClick={resetView}>\n                <CenterIcon />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </Box>\n      </Box>\n      \n      {/* Node edit dialog */}\n      <Dialog open={nodeDialogOpen} onClose={() => setNodeDialogOpen(false)}>\n        <DialogTitle>\n          {dialogAction === 'add-child' \n            ? 'Add Child Node' \n            : dialogAction === 'add-sibling' \n              ? 'Add Sibling Node' \n              : 'Edit Node'}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Node Name\"\n            fullWidth\n            value={newNodeName}\n            onChange={(e) => setNewNodeName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNodeDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleSaveNode} variant=\"contained\" disabled={!newNodeName.trim()}>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Delete confirmation dialog */}\n      <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n        <DialogTitle>Delete Node</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete \"{nodeToDelete?.name}\"? This will also remove all of its children.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default EnhancedMindMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}